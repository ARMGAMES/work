#include "commtime.h"
#include "pyrtime.h"
#include "AsiaB2B/PublicAPI.h"

#define TOP_LEVEL_NAMESPACE AsiaB2B


namespace PlainAPI // from middle-tier to server object, non-authenticated (NullGuard)
{
	// cashier?
	Message MSG_ASIA_GAMING_Q_GetAccountStatus
	{
		PString						requestId;
		PString						operatorId;
		PString						agAccountId;
	};
	Message MSG_ASIA_GAMING_A_GetAccountStatus
	{
		PString						requestId;
		PString						operatorId;
		PString						agAccountId;
		UINT16						psAccountStatus;
		PString						psBalanceCurrency;
		INT64						psBalanceAmount;
		PString						agBalanceCurrency;
		INT64						agBalanceAmount;
		PString						psExchangeRate;
	};

	// cashier?
	//Message MSG_ASIA_GAMING_Q_GetTransferOutStatus
	//{
	//	PString						requestId;
	//	PString						operatorId;
	//	PString						agAccountId;
	//	UINT64						psTransactionId;
	//};
	//Message MSG_ASIA_GAMING_A_GetTransferOutStatus
	//{
	//	PString						requestId;
	//	PString						operatorId;
	//	PString						agAccountId;
	//	UINT64						psTransactionId;
	//	PString						agTransactionCurrency;
	//	INT64						agTransactionAmount;
	//	PString						psTransactionCurrency;
	//	INT64						psTransactionAmount;
	//	PString						psExchangeRate;
	//	PString						psTransactionStatus;
	//	PString						psTransactionTimestamp;
	//	PString						psTransactionStatusTimestamp;
	//};
	
	// CDD
	Message MSG_ASIA_GAMING_Q_DoUpdateKYC
	{
		PString						requestId;
		PString						operatorId;
		PString						agAccountId;
		UINT16						agKYCStatus;
	};
	Message MSG_ASIA_GAMING_A_DoUpdateKYC
	{
		PString						requestId;
	};
	
	// Replicator
	//Message MSG_ASIA_GAMING_Q_DoRequestAdhocReport
	//{
	//	PString						requestId;
	//	UINT16						reportType;
	//	PString						operatorId;
	//	PString						agAccountId;
	//	PString						periodFrom;
	//	PString						periodTo;
	//};
	//Message MSG_ASIA_GAMING_A_DoRequestAdhocReport
	//{
	//	PString						requestId;
	//	PString						operatorId;
	//	PString						agAccountId;
	//	UINT64						psReportId;
	//};

	// Replicator
	//Message MSG_ASIA_GAMING_Q_GetAdhocReportStatus
	//{
	//	PString						requestId;
	//	UINT64						psReportId;
	//};
	//Message MSG_ASIA_GAMING_A_GetAdhocReportStatus
	//{
	//	PString						requestId;
	//	UINT64						psReportId;
	//	PString						psReportStatus;
	//	PString						psReportStatusTimestamp;
	//};

	// cashier
	Message MSG_ASIA_GAMING_Q_PushTransferIn
	{
		PString						requestId;
		PString						operatorId;
		PString						agAccountId;
		PString						agTransactionId;
		PString						psTransactionCurrency;
		UINT64						psTransactionAmount;
	};
	Message MSG_ASIA_GAMING_A_PushTransferIn
	{
		PString						requestId;
		PString						operatorId;
		PString						agAccountId;
		PString						agTransactionId;
		UINT64						psTransactionId;
		PString						agTransactionCurrency;
		UINT64						agTransactionAmount;
		PString						psTransactionCurrency;
		UINT64						psTransactionAmount;
		PString 					psExchangeRate;
		PString 					psTransactionTimestamp;			
	};

	// cashier
	Message MSG_ASIA_GAMING_Q_PullTransferOut
	{
		PString						requestId;
		PString						operatorId;
		PString						agAccountId;
		PString						agTransactionId;
		PString						psTransactionCurrency;
		UINT64						psTransactionAmount;
	};
	Message MSG_ASIA_GAMING_A_PullTransferOut
	{
		PString						requestId;
		PString						operatorId;
		PString						agAccountId;
		PString						agTransactionId;
		UINT64						psTransactionId;
		PString						agTransactionCurrency;
		UINT64						agTransactionAmount;
		PString						psTransactionCurrency;
		UINT64						psTransactionAmount;
		PString 					psExchangeRate;
		PString 					psTransactionTimestamp;			
	};
};
