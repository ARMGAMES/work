/**
 * AsiaB2B_API_thin.h
 *
 * This file was auto-generated from AsiaB2B_API.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -thin -genMoveConstructor -dontGenValidationFuncs AsiaB2B_API.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_ASIAB2B_API_THIN_H
#define ATF_PROTOCOL_DEFFILE_ASIAB2B_API_THIN_H

#include "commtime.h"
#include "pyrtime.h"
#include "AsiaB2B/PublicAPI.h"


#include "ThinAtfUserDefStructs.h"

namespace AsiaB2B
{
	namespace PlainAPI	// from middle-tier to server object, non-authenticated (NullGuard)
	{
		// cashier?
		struct Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus
		{
			// sss - requestId,operatorId,agAccountId
			PString requestId;
			PString operatorId;
			PString agAccountId;

			Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_Q_GetAccountStatus; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_Q_GetAccountStatus"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus(Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus&&);
			Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus& operator=(Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus(const Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus&) = default;
			Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus& operator=(const Protocol_MSG_ASIA_GAMING_Q_GetAccountStatus&) = default;
#endif
#endif
		};
		struct Protocol_MSG_ASIA_GAMING_A_GetAccountStatus
		{
			// sss2s8s8s - requestId,operatorId,agAccountId,psAccountStatus,psBalanceCurrency,psBalanceAmount,agBalanceCurrency,agBalanceAmount,psExchangeRate
			PString requestId;
			PString operatorId;
			PString agAccountId;
			UINT16 psAccountStatus;
			PString psBalanceCurrency;
			INT64 psBalanceAmount;
			PString agBalanceCurrency;
			INT64 agBalanceAmount;
			PString psExchangeRate;

			Protocol_MSG_ASIA_GAMING_A_GetAccountStatus();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_A_GetAccountStatus&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_A_GetAccountStatus; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_A_GetAccountStatus"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_A_GetAccountStatus(Protocol_MSG_ASIA_GAMING_A_GetAccountStatus&&);
			Protocol_MSG_ASIA_GAMING_A_GetAccountStatus& operator=(Protocol_MSG_ASIA_GAMING_A_GetAccountStatus&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_A_GetAccountStatus(const Protocol_MSG_ASIA_GAMING_A_GetAccountStatus&) = default;
			Protocol_MSG_ASIA_GAMING_A_GetAccountStatus& operator=(const Protocol_MSG_ASIA_GAMING_A_GetAccountStatus&) = default;
#endif
#endif
		};

		// cashier?
		//Message MSG_ASIA_GAMING_Q_GetTransferOutStatus
		//{
		//	PString						requestId;
		//	PString						operatorId;
		//	PString						agAccountId;
		//	UINT64						psTransactionId;
		//};
		//Message MSG_ASIA_GAMING_A_GetTransferOutStatus
		//{
		//	PString						requestId;
		//	PString						operatorId;
		//	PString						agAccountId;
		//	UINT64						psTransactionId;
		//	PString						agTransactionCurrency;
		//	INT64						agTransactionAmount;
		//	PString						psTransactionCurrency;
		//	INT64						psTransactionAmount;
		//	PString						psExchangeRate;
		//	PString						psTransactionStatus;
		//	PString						psTransactionTimestamp;
		//	PString						psTransactionStatusTimestamp;
		//};

		// CDD
		struct Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC
		{
			// sss2 - requestId,operatorId,agAccountId,agKYCStatus
			PString requestId;
			PString operatorId;
			PString agAccountId;
			UINT16 agKYCStatus;

			Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_Q_DoUpdateKYC; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_Q_DoUpdateKYC"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC(Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC&&);
			Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC& operator=(Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC(const Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC&) = default;
			Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC& operator=(const Protocol_MSG_ASIA_GAMING_Q_DoUpdateKYC&) = default;
#endif
#endif
		};
		struct Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC
		{
			// s - requestId
			PString requestId;

			Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_A_DoUpdateKYC; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_A_DoUpdateKYC"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC(Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC&&);
			Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC& operator=(Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC(const Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC&) = default;
			Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC& operator=(const Protocol_MSG_ASIA_GAMING_A_DoUpdateKYC&) = default;
#endif
#endif
		};

		// Replicator
		//Message MSG_ASIA_GAMING_Q_DoRequestAdhocReport
		//{
		//	PString						requestId;
		//	UINT16						reportType;
		//	PString						operatorId;
		//	PString						agAccountId;
		//	PString						periodFrom;
		//	PString						periodTo;
		//};
		//Message MSG_ASIA_GAMING_A_DoRequestAdhocReport
		//{
		//	PString						requestId;
		//	PString						operatorId;
		//	PString						agAccountId;
		//	UINT64						psReportId;
		//};

		// Replicator
		//Message MSG_ASIA_GAMING_Q_GetAdhocReportStatus
		//{
		//	PString						requestId;
		//	UINT64						psReportId;
		//};
		//Message MSG_ASIA_GAMING_A_GetAdhocReportStatus
		//{
		//	PString						requestId;
		//	UINT64						psReportId;
		//	PString						psReportStatus;
		//	PString						psReportStatusTimestamp;
		//};

		// cashier
		struct Protocol_MSG_ASIA_GAMING_Q_PushTransferIn
		{
			// sssss8 - requestId,operatorId,agAccountId,agTransactionId,psTransactionCurrency,psTransactionAmount
			PString requestId;
			PString operatorId;
			PString agAccountId;
			PString agTransactionId;
			PString psTransactionCurrency;
			UINT64 psTransactionAmount;

			Protocol_MSG_ASIA_GAMING_Q_PushTransferIn();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_Q_PushTransferIn&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_Q_PushTransferIn; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_Q_PushTransferIn"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_Q_PushTransferIn(Protocol_MSG_ASIA_GAMING_Q_PushTransferIn&&);
			Protocol_MSG_ASIA_GAMING_Q_PushTransferIn& operator=(Protocol_MSG_ASIA_GAMING_Q_PushTransferIn&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_Q_PushTransferIn(const Protocol_MSG_ASIA_GAMING_Q_PushTransferIn&) = default;
			Protocol_MSG_ASIA_GAMING_Q_PushTransferIn& operator=(const Protocol_MSG_ASIA_GAMING_Q_PushTransferIn&) = default;
#endif
#endif
		};
		struct Protocol_MSG_ASIA_GAMING_A_PushTransferIn
		{
			// ssss8s8s8ss - requestId,operatorId,agAccountId,agTransactionId,psTransactionId,agTransactionCurrency,agTransactionAmount,psTransactionCurrency,psTransactionAmount,psExchangeRate,psTransactionTimestamp
			PString requestId;
			PString operatorId;
			PString agAccountId;
			PString agTransactionId;
			UINT64 psTransactionId;
			PString agTransactionCurrency;
			UINT64 agTransactionAmount;
			PString psTransactionCurrency;
			UINT64 psTransactionAmount;
			PString psExchangeRate;
			PString psTransactionTimestamp;

			Protocol_MSG_ASIA_GAMING_A_PushTransferIn();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_A_PushTransferIn&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_A_PushTransferIn; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_A_PushTransferIn"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_A_PushTransferIn(Protocol_MSG_ASIA_GAMING_A_PushTransferIn&&);
			Protocol_MSG_ASIA_GAMING_A_PushTransferIn& operator=(Protocol_MSG_ASIA_GAMING_A_PushTransferIn&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_A_PushTransferIn(const Protocol_MSG_ASIA_GAMING_A_PushTransferIn&) = default;
			Protocol_MSG_ASIA_GAMING_A_PushTransferIn& operator=(const Protocol_MSG_ASIA_GAMING_A_PushTransferIn&) = default;
#endif
#endif
		};

		// cashier
		struct Protocol_MSG_ASIA_GAMING_Q_PullTransferOut
		{
			// sssss8 - requestId,operatorId,agAccountId,agTransactionId,psTransactionCurrency,psTransactionAmount
			PString requestId;
			PString operatorId;
			PString agAccountId;
			PString agTransactionId;
			PString psTransactionCurrency;
			UINT64 psTransactionAmount;

			Protocol_MSG_ASIA_GAMING_Q_PullTransferOut();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_Q_PullTransferOut&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_Q_PullTransferOut; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_Q_PullTransferOut"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_Q_PullTransferOut(Protocol_MSG_ASIA_GAMING_Q_PullTransferOut&&);
			Protocol_MSG_ASIA_GAMING_Q_PullTransferOut& operator=(Protocol_MSG_ASIA_GAMING_Q_PullTransferOut&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_Q_PullTransferOut(const Protocol_MSG_ASIA_GAMING_Q_PullTransferOut&) = default;
			Protocol_MSG_ASIA_GAMING_Q_PullTransferOut& operator=(const Protocol_MSG_ASIA_GAMING_Q_PullTransferOut&) = default;
#endif
#endif
		};
		struct Protocol_MSG_ASIA_GAMING_A_PullTransferOut
		{
			// ssss8s8s8ss - requestId,operatorId,agAccountId,agTransactionId,psTransactionId,agTransactionCurrency,agTransactionAmount,psTransactionCurrency,psTransactionAmount,psExchangeRate,psTransactionTimestamp
			PString requestId;
			PString operatorId;
			PString agAccountId;
			PString agTransactionId;
			UINT64 psTransactionId;
			PString agTransactionCurrency;
			UINT64 agTransactionAmount;
			PString psTransactionCurrency;
			UINT64 psTransactionAmount;
			PString psExchangeRate;
			PString psTransactionTimestamp;

			Protocol_MSG_ASIA_GAMING_A_PullTransferOut();
			void clear();
			bool equals(const Protocol_MSG_ASIA_GAMING_A_PullTransferOut&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return MSG_ASIA_GAMING_A_PullTransferOut; }
			static const char *getMsgIdString() { return "MSG_ASIA_GAMING_A_PullTransferOut"; }

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_ASIA_GAMING_A_PullTransferOut(Protocol_MSG_ASIA_GAMING_A_PullTransferOut&&);
			Protocol_MSG_ASIA_GAMING_A_PullTransferOut& operator=(Protocol_MSG_ASIA_GAMING_A_PullTransferOut&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_ASIA_GAMING_A_PullTransferOut(const Protocol_MSG_ASIA_GAMING_A_PullTransferOut&) = default;
			Protocol_MSG_ASIA_GAMING_A_PullTransferOut& operator=(const Protocol_MSG_ASIA_GAMING_A_PullTransferOut&) = default;
#endif
#endif
		};
	};
};

#endif
