//------------------------------------------------------------------------------
//	Pupil - Power Up Poker in Lobby - Protocols
//------------------------------------------------------------------------------
//
//	Copyright (c) 2001-2016 PYR Software Ltd. All rights reserved. This document
//	is for the use of licensed users only and is subject to the terms and
//	conditions of the accompanying and/or applicable license between you and
//	PYR Software Ltd, including without limitation those terms and conditions
//	prohibiting unauthorized translation, reverse engineering, decompilation,
//	disassembly, and other inappropriate use of any software provided. Any
//	unauthorized use, copying, modification, distribution, publication or
//	disclosure of information is a violation of copyright laws. No reproduction
//	in whole or in part of this document may be made without express written
//	consent of PYR Software Ltd.
//
//
//------------------------------------------------------------------------------

#include "UserDefStructs.h"
#include "ppcontainer.h"
#include "PBitmask.h"
#include "sitemasks.h"
#include "licensemask.h"

//------------------------------------------------------------------------------

#define TOP_LEVEL_NAMESPACE _Pupil${ATF_THIN_NAMESPACE_SUFFIX} // overwrite the default top level namespace

//------------------------------------------------------------------------------
// Pupil Publication
//------------------------------------------------------------------------------
//
// Node { 0 } - list of games
//

//------------------------------------------------------------------------------
// Pupil Publication: Game Leaf
//------------------------------------------------------------------------------

Struct GameStaticLeaf @move_only_no_copy // Leaf { 0, n, 0 }
{
	bool visible;

	if( visible )
	{
		bool regOpen;

		UINT32 gameId;

		CommMsgBody visibility
		{
			UINT32 brand; // visibility mask
			UINT32 siteObsolete; // visibility mask 32 bits
			CommMsgBody
			{
				bool excludeCountries;
				vector< PString > countries; // country inlcusion/exclusion list
			};
			PString criteria; // criteria name to look up in Help Support Portal
			PSiteMask siteMask; // visibility mask
		};

		CommMsgBody sample
		{
			UINT32 tournId;
			PString serverAddr;
			PString serverObject;
		};

		I18nPString name;

		BYTE handType;
		BYTE structure;
		bool isHiLo;

		BYTE speedDisplay;

		bool isPlayMoney;
		PString currency;
		INT64 buyIn;
		INT64 rake;

		INT64 prizePool;
		BYTE prizePoolUnit;
		INT64 prizePoolMoneyValue;

		BYTE playerPerTable;
		UINT32 minPlayers;

		BYTE maxUserRequests;

		I18nPString customSpeedDisplayName;

		UINT32 tournFlags parseEndOptB4Me;
		UINT64 tournFlags2;
		UINT32 tournFlagsServInt;
	}
};

Struct GameDynamicLeaf @move_only_no_copy // Leaf { 0, n, 1 }
{
	UINT32 numUsersWaiting;
	UINT32 numUsersPlaying;
	UINT32 numUsersRegistered;
	UINT32 numDistinctUsersWaiting;
	UINT32 numActiveGames;
};

//------------------------------------------------------------------------------
