/**
 * crossgamebuttonscommonprot_thin.h
 *
 * This file was auto-generated from crossgamebuttonscommonprot.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor -thin crossgamebuttonscommonprot.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_CROSSGAMEBUTTONSCOMMONPROT_THIN_H
#define ATF_PROTOCOL_DEFFILE_CROSSGAMEBUTTONSCOMMONPROT_THIN_H


#include "ThinAtfUserDefStructs.h"

namespace CrossGameLinkCommon
{	//------------------------------------------------------------------------------
	//	common structs
	//------------------------------------------------------------------------------
	//
	//	Copyright (c) 2001-2016 PYR Software Ltd. All rights reserved. This document
	//	is for the use of licensed users only and is subject to the terms and
	//	conditions of the accompanying and/or applicable license between you and
	//	PYR Software Ltd, including without limitation those terms and conditions
	//	prohibiting unauthorized translation, reverse engineering, decompilation,
	//	disassembly, and other inappropriate use of any software provided. Any
	//	unauthorized use, copying, modification, distribution, publication or
	//	disclosure of information is a violation of copyright laws. No reproduction
	//	in whole or in part of this document may be made without express written
	//	consent of PYR Software Ltd.
	//
	//
	//------------------------------------------------------------------------------

	//------------------------------------------------------------------------------

	//------------------------------------------------------------------------------

	//------------------------------------------------------------------------------

	struct CrossGameLinkButtonDef
	{
		// M(sssIIs) - M(buttonName,click2LaunchLink,iconName,buttonLabel,tooltip,buttonType)
		PString buttonName;
		PString click2LaunchLink;
		PString iconName;
		I18nPString buttonLabel;
		I18nPString tooltip;
		PString buttonType;

		CrossGameLinkButtonDef();
		void clear();
		bool equals(const CrossGameLinkButtonDef&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		CrossGameLinkButtonDef(CrossGameLinkButtonDef&&);
		CrossGameLinkButtonDef& operator=(CrossGameLinkButtonDef&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		CrossGameLinkButtonDef(const CrossGameLinkButtonDef&) = default;
		CrossGameLinkButtonDef& operator=(const CrossGameLinkButtonDef&) = default;
#endif
#endif
	};

	struct CrossGameLinkButtonCriteria
	{
		// M(s) - M(criteriaLabel)
		PString criteriaLabel;

		CrossGameLinkButtonCriteria();
		void clear();
		bool equals(const CrossGameLinkButtonCriteria&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		CrossGameLinkButtonCriteria(CrossGameLinkButtonCriteria&&);
		CrossGameLinkButtonCriteria& operator=(CrossGameLinkButtonCriteria&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		CrossGameLinkButtonCriteria(const CrossGameLinkButtonCriteria&) = default;
		CrossGameLinkButtonCriteria& operator=(const CrossGameLinkButtonCriteria&) = default;
#endif
#endif
	};

	struct CrossGameLinkButtonData
	{
		// M(4<M(s)>4<M(s)>M(sssIIs)) - M(numUserCriteria<M(criteriaLabel)>,numGameCriteria<M(criteriaLabel)>,M(buttonName,click2LaunchLink,iconName,buttonLabel,tooltip,buttonType))
		ThinAtf::LAtfVector< CrossGameLinkButtonCriteria, 4 > userCriteria;
		ThinAtf::LAtfVector< CrossGameLinkButtonCriteria, 4 > gameCriteria;
		CrossGameLinkButtonDef buttonDef;

		CrossGameLinkButtonData();
		void clear();
		bool equals(const CrossGameLinkButtonData&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		CrossGameLinkButtonData(CrossGameLinkButtonData&&);
		CrossGameLinkButtonData& operator=(CrossGameLinkButtonData&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		CrossGameLinkButtonData(const CrossGameLinkButtonData&) = default;
		CrossGameLinkButtonData& operator=(const CrossGameLinkButtonData&) = default;
#endif
#endif
	};
};

#endif
