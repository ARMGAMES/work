/**
 * bduaclientprot_thin.h
 *
 * This file was auto-generated from bduaclientprot.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor -thin bduaclientprot.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_BDUACLIENTPROT_THIN_H
#define ATF_PROTOCOL_DEFFILE_BDUACLIENTPROT_THIN_H

//------------------------------------------------------------------------------
//	LobbyEtc <-> Client Protocol
//------------------------------------------------------------------------------
//
//	Copyright (c) 2001-2016 PYR Software Ltd. All rights reserved. This document
//	is for the use of licensed users only and is subject to the terms and
//	conditions of the accompanying and/or applicable license between you and
//	PYR Software Ltd, including without limitation those terms and conditions
//	prohibiting unauthorized translation, reverse engineering, decompilation,
//	disassembly, and other inappropriate use of any software provided. Any
//	unauthorized use, copying, modification, distribution, publication or
//	disclosure of information is a violation of copyright laws. No reproduction
//	in whole or in part of this document may be made without express written
//	consent of PYR Software Ltd.
//
//
//------------------------------------------------------------------------------

#include "LobbyEtc.h"


#include "ThinAtfUserDefStructs.h"

namespace BDUAClient
{
	class ProtocolFactory
	{
	public:
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	//------------------------------------------------------------------------------

	//------------------------------------------------------------------------------
	// Business user attributes (BDUA)
	//------------------------------------------------------------------------------

	// BDUA types used for by client
	enum ClientBDUATypes
	{
		ClientBDUATypes_PlayerScore = 1,
		ClientBDUATypes_CrossSell = 20,
	};

	struct BDUAData
	{
		// M(44) - M(bduaType,bduaValue)
		UINT32 bduaType;
		UINT32 bduaValue;

		BDUAData();
		void clear();
		bool equals(const BDUAData&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
	};

	struct Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER
	{

		Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER();
		void clear();
		bool equals(const Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_LOBBYETC_GET_BDUAS_FOR_USER; }
		static const char *getMsgIdString() { return "MSG_LOBBYETC_GET_BDUAS_FOR_USER"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
	};

	struct Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY
	{
		// 2[s|4<M(44)>4] - errCode[errString|numUserBDUAs<M(bduaType,bduaValue)>,userTier]
		INT16 errCode;

		PString errString;

		ThinAtf::LAtfVector< BDUAData, 4 > userBDUAs;
		UINT32 userTier;

		Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY();
		void clear();
		bool equals(const Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY; }
		static const char *getMsgIdString() { return "MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY(Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY&&);
		Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY(const Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY&) = default;
		Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_BDUAS_FOR_USER_REPLY&) = default;
#endif
#endif
	};
};

#endif
