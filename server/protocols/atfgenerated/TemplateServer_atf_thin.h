/**
 * TemplateServer_atf_thin.h
 *
 * This file was auto-generated from TemplateServer_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor -thin TemplateServer_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_TEMPLATESERVER_ATF_THIN_H
#define ATF_PROTOCOL_DEFFILE_TEMPLATESERVER_ATF_THIN_H

#include "sites.h"
#include "clientplatforms.h"
#include "templateserver.h"


#include "ThinAtfUserDefStructs.h"

namespace TemplateServerATF
{
	class ProtocolFactory
	{
	public:
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	struct ContentDataSectionStruct
	{
		// M(4s) - M(locale,text)
		UINT32 locale;
		PString text;

		ContentDataSectionStruct();
		void clear();
		bool equals(const ContentDataSectionStruct&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		ContentDataSectionStruct(ContentDataSectionStruct&&);
		ContentDataSectionStruct& operator=(ContentDataSectionStruct&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		ContentDataSectionStruct(const ContentDataSectionStruct&) = default;
		ContentDataSectionStruct& operator=(const ContentDataSectionStruct&) = default;
#endif
#endif
	};

	struct ContentDataStruct
	{
		// M(44<M(4s)>) - M(sectionCode,numSections<M(locale,text)>)
		UINT32 sectionCode;
		ThinAtf::LAtfVector< ContentDataSectionStruct, 4 > sections;

		ContentDataStruct();
		void clear();
		bool equals(const ContentDataStruct&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		ContentDataStruct(ContentDataStruct&&);
		ContentDataStruct& operator=(ContentDataStruct&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		ContentDataStruct(const ContentDataStruct&) = default;
		ContentDataStruct& operator=(const ContentDataStruct&) = default;
#endif
#endif
	};

	struct ContentStruct
	{
		// M(4stt4<M(44<M(4s)>)>) - M(contentId,criteria,from,until,numContentDatas<M(sectionCode,numSections<M(locale,text)>)>)
		UINT32 contentId;
		PString criteria;
		SrvTime from;
		SrvTime until;
		ThinAtf::LAtfVector< ContentDataStruct, 4 > contentDatas;

		ContentStruct();
		void clear();
		bool equals(const ContentStruct&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		ContentStruct(ContentStruct&&);
		ContentStruct& operator=(ContentStruct&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		ContentStruct(const ContentStruct&) = default;
		ContentStruct& operator=(const ContentStruct&) = default;
#endif
#endif
	};

	struct TemplateStruct
	{
		// M(444sss44<M(4stt4<M(44<M(4s)>)>)>) - M(saveTemplateMask,templateId,type,name,templateCode,description,status,numContent<M(contentId,criteria,from,until,numContentDatas<M(sectionCode,numSections<M(locale,text)>)>)>)
		UINT32 saveTemplateMask;
		UINT32 templateId;
		UINT32 type;
		PString name;
		PString templateCode;
		PString description;
		UINT32 status;
		ThinAtf::LAtfVector< ContentStruct, 4 > content;

		TemplateStruct();
		void clear();
		bool equals(const TemplateStruct&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		TemplateStruct(TemplateStruct&&);
		TemplateStruct& operator=(TemplateStruct&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		TemplateStruct(const TemplateStruct&) = default;
		TemplateStruct& operator=(const TemplateStruct&) = default;
#endif
#endif
	};

	struct Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES
	{
		// 4<M(444sss44<M(4stt4<M(44<M(4s)>)>)>)> - numTemplates<M(saveTemplateMask,templateId,type,name,templateCode,description,status,numContent<M(contentId,criteria,from,until,numContentDatas<M(sectionCode,numSections<M(locale,text)>)>)>)>
		ThinAtf::LAtfVector< TemplateStruct, 4 > templates;

		Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES();
		void clear();
		bool equals(const Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_Q_ADMIN_SAVE_BRANDED_LOBBIES; }
		static const char *getMsgIdString() { return "TS_Q_ADMIN_SAVE_BRANDED_LOBBIES"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES(Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES&&);
		Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES& operator=(Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES(const Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES&) = default;
		Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES& operator=(const Protocol_TS_Q_ADMIN_SAVE_BRANDED_LOBBIES&) = default;
#endif
#endif
	};
	struct Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES
	{
		// 2s - errCode,msg
		INT16 errCode;
		PString msg;

		Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES();
		void clear();
		bool equals(const Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_A_ADMIN_SAVE_BRANDED_LOBBIES; }
		static const char *getMsgIdString() { return "TS_A_ADMIN_SAVE_BRANDED_LOBBIES"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES(Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES&&);
		Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES& operator=(Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES(const Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES&) = default;
		Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES& operator=(const Protocol_TS_A_ADMIN_SAVE_BRANDED_LOBBIES&) = default;
#endif
#endif
	};

	struct Protocol_TS_Q_PS_NEED_DATA
	{
		// 4 - templateType
		INT32 templateType;

		Protocol_TS_Q_PS_NEED_DATA();
		void clear();
		bool equals(const Protocol_TS_Q_PS_NEED_DATA&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_Q_PS_NEED_DATA; }
		static const char *getMsgIdString() { return "TS_Q_PS_NEED_DATA"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
	};

	struct Protocol_TS_A_PS_NEED_DATA
	{
		// 2[s|4<M(444sss44<M(4stt4<M(44<M(4s)>)>)>)>] - errCode[sqlErr|numTemplates<M(saveTemplateMask,templateId,type,name,templateCode,description,status,numContent<M(contentId,criteria,from,until,numContentDatas<M(sectionCode,numSections<M(locale,text)>)>)>)>]
		INT16 errCode;

		PString sqlErr;

		ThinAtf::LAtfVector< TemplateStruct, 4 > templates;

		Protocol_TS_A_PS_NEED_DATA();
		void clear();
		bool equals(const Protocol_TS_A_PS_NEED_DATA&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_A_PS_NEED_DATA; }
		static const char *getMsgIdString() { return "TS_A_PS_NEED_DATA"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_TS_A_PS_NEED_DATA(Protocol_TS_A_PS_NEED_DATA&&);
		Protocol_TS_A_PS_NEED_DATA& operator=(Protocol_TS_A_PS_NEED_DATA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_TS_A_PS_NEED_DATA(const Protocol_TS_A_PS_NEED_DATA&) = default;
		Protocol_TS_A_PS_NEED_DATA& operator=(const Protocol_TS_A_PS_NEED_DATA&) = default;
#endif
#endif
	};

	struct Protocol_TS_Q_HFS_NEED_DATA
	{
		// 4 - templateType
		INT32 templateType;

		Protocol_TS_Q_HFS_NEED_DATA();
		void clear();
		bool equals(const Protocol_TS_Q_HFS_NEED_DATA&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_Q_HFS_NEED_DATA; }
		static const char *getMsgIdString() { return "TS_Q_HFS_NEED_DATA"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
	};

	struct Protocol_TS_A_HFS_NEED_DATA
	{
		// 2[s|4<M(444sss44<M(4stt4<M(44<M(4s)>)>)>)>] - errCode[sqlErr|numTemplates<M(saveTemplateMask,templateId,type,name,templateCode,description,status,numContent<M(contentId,criteria,from,until,numContentDatas<M(sectionCode,numSections<M(locale,text)>)>)>)>]
		INT16 errCode;

		PString sqlErr;

		ThinAtf::LAtfVector< TemplateStruct, 4 > templates;

		Protocol_TS_A_HFS_NEED_DATA();
		void clear();
		bool equals(const Protocol_TS_A_HFS_NEED_DATA&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_A_HFS_NEED_DATA; }
		static const char *getMsgIdString() { return "TS_A_HFS_NEED_DATA"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_TS_A_HFS_NEED_DATA(Protocol_TS_A_HFS_NEED_DATA&&);
		Protocol_TS_A_HFS_NEED_DATA& operator=(Protocol_TS_A_HFS_NEED_DATA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_TS_A_HFS_NEED_DATA(const Protocol_TS_A_HFS_NEED_DATA&) = default;
		Protocol_TS_A_HFS_NEED_DATA& operator=(const Protocol_TS_A_HFS_NEED_DATA&) = default;
#endif
#endif
	};

	struct Protocol_TS_Q_HFS_GET_TEMPLATE_DATA
	{
		// 4 - templateId
		INT32 templateId;

		Protocol_TS_Q_HFS_GET_TEMPLATE_DATA();
		void clear();
		bool equals(const Protocol_TS_Q_HFS_GET_TEMPLATE_DATA&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_Q_HFS_GET_TEMPLATE_DATA; }
		static const char *getMsgIdString() { return "TS_Q_HFS_GET_TEMPLATE_DATA"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
	};

	struct Protocol_TS_A_HFS_GET_TEMPLATE_DATA
	{
		// 2[s|4<M(444sss44<M(4stt4<M(44<M(4s)>)>)>)>] - errCode[sqlErr|numTemplates<M(saveTemplateMask,templateId,type,name,templateCode,description,status,numContent<M(contentId,criteria,from,until,numContentDatas<M(sectionCode,numSections<M(locale,text)>)>)>)>]
		INT16 errCode;

		PString sqlErr;

		ThinAtf::LAtfVector< TemplateStruct, 4 > templates;

		Protocol_TS_A_HFS_GET_TEMPLATE_DATA();
		void clear();
		bool equals(const Protocol_TS_A_HFS_GET_TEMPLATE_DATA&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return TS_A_HFS_GET_TEMPLATE_DATA; }
		static const char *getMsgIdString() { return "TS_A_HFS_GET_TEMPLATE_DATA"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_TS_A_HFS_GET_TEMPLATE_DATA(Protocol_TS_A_HFS_GET_TEMPLATE_DATA&&);
		Protocol_TS_A_HFS_GET_TEMPLATE_DATA& operator=(Protocol_TS_A_HFS_GET_TEMPLATE_DATA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_TS_A_HFS_GET_TEMPLATE_DATA(const Protocol_TS_A_HFS_GET_TEMPLATE_DATA&) = default;
		Protocol_TS_A_HFS_GET_TEMPLATE_DATA& operator=(const Protocol_TS_A_HFS_GET_TEMPLATE_DATA&) = default;
#endif
#endif
	};
};

#endif
