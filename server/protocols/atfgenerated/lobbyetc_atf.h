/**
 * lobbyetc_atf.h
 *
 * This file was auto-generated from lobbyetc_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor lobbyetc_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_LOBBYETC_ATF_H
#define ATF_PROTOCOL_DEFFILE_LOBBYETC_ATF_H

#include "lobby.h"
#include "LobbyEtc.h"
#include "UserDefStructs.h"
#include "Common_atf.h"
#include "i18n.localedef.h"
#include "newsmessages.h"
#include "brands.h"
#include "dbm.h"
#include "timezone.h"
#include "brandimgs.h"
#include "auxHandHistory.h"


namespace LobbyEtc
{
	class ProtocolFactory
	{
	public:
		static Atf::MessageProtocol* createMessageProtocolObject(const char *_nameSpace, UINT32 _msgId);
		static bool validateProtocolMessageFromJSONString(const char *_nameSpace, UINT32 _msgId, const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	namespace cli_Unauth
	{
		struct Publication
		{
			// s - name
			PString name;

			Publication();
			void clear();
			bool equals(const Publication&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Publication(Publication&&);
			Publication& operator=(Publication&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Publication(const Publication&) = default;
			Publication& operator=(const Publication&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_CHECK_PUBLICATIONS : public Atf::MessageProtocol
		{
			// 4<s> - numPublications<name>
			Atf::LAtfVector< Publication, 4 > publications;

			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_CHECK_PUBLICATIONS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_CHECK_PUBLICATIONS; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_CHECK_PUBLICATIONS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS(Protocol_MSG_LOBBY_CHECK_PUBLICATIONS&&);
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS& operator=(Protocol_MSG_LOBBY_CHECK_PUBLICATIONS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS(const Protocol_MSG_LOBBY_CHECK_PUBLICATIONS&) = default;
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS& operator=(const Protocol_MSG_LOBBY_CHECK_PUBLICATIONS&) = default;
#endif
#endif
		};
		struct Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY : public Atf::MessageProtocol
		{
			// 4<b> - numPublicationExist<publicationExist>
			Atf::LAtfVector< bool, 4 > publicationExist;

			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_CHECK_PUBLICATIONS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_CHECK_PUBLICATIONS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY(Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY&&);
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY& operator=(Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY(const Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY&) = default;
			Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY& operator=(const Protocol_MSG_LOBBY_CHECK_PUBLICATIONS_REPLY&) = default;
#endif
#endif
		};

		struct UserId
		{
			// s - userId
			PString userId;

			UserId();
			void clear();
			bool equals(const UserId&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			UserId(UserId&&);
			UserId& operator=(UserId&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			UserId(const UserId&) = default;
			UserId& operator=(const UserId&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_USER_IMAGE : public Atf::MessageProtocol
		{
			// 4<s> - numUserIds<userId>
			Atf::LAtfVector< UserId, 4 > userIds;	// the limit from the code

			Protocol_MSG_LOBBYETC_GET_USER_IMAGE();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_USER_IMAGE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_USER_IMAGE; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_USER_IMAGE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE(Protocol_MSG_LOBBYETC_GET_USER_IMAGE&&);
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE& operator=(Protocol_MSG_LOBBYETC_GET_USER_IMAGE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE(const Protocol_MSG_LOBBYETC_GET_USER_IMAGE&) = default;
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE& operator=(const Protocol_MSG_LOBBYETC_GET_USER_IMAGE&) = default;
#endif
#endif
		};

		struct UserImageData
		{
			// s24b - userId,errCode,imageid,isTeamPro
			PString userId;
			INT16 errCode;
			UINT32 imageid;
			bool isTeamPro;

			UserImageData();
			void clear();
			bool equals(const UserImageData&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			UserImageData(UserImageData&&);
			UserImageData& operator=(UserImageData&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			UserImageData(const UserImageData&) = default;
			UserImageData& operator=(const UserImageData&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<s24b>] - errCode[errDescr|numImages<userId,errCode,imageid,isTeamPro>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< UserImageData, 4 > images;

			Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_USER_IMAGE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_USER_IMAGE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY(Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY(const Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_USER_IMAGE_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY : public Atf::MessageProtocol
		{
			// 444 - siteId,brandId,locale
			UINT32 siteId;
			UINT32 brandId;
			UINT32 locale;

			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct ImageBody
		{
			// M(4s) - M(imageId,imageDescr)
			UINT32 imageId;
			PString imageDescr;

			ImageBody();
			void clear();
			bool equals(const ImageBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			ImageBody(ImageBody&&);
			ImageBody& operator=(ImageBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			ImageBody(const ImageBody&) = default;
			ImageBody& operator=(const ImageBody&) = default;
#endif
#endif
		};

		struct SubcatBody
		{
			// M(s4<4>) - M(subCatName,numImageIds<imageIds>)
			PString subCatName;
			Atf::LAtfVector< UINT32, 4 > imageIds;

			SubcatBody();
			void clear();
			bool equals(const SubcatBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			SubcatBody(SubcatBody&&);
			SubcatBody& operator=(SubcatBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			SubcatBody(const SubcatBody&) = default;
			SubcatBody& operator=(const SubcatBody&) = default;
#endif
#endif
		};

		struct CatBody
		{
			// M(s4<4>4<M(s4<4>)>) - M(catName,numImageIds<imageIds>,numSubCats<M(subCatName,numImageIds<imageIds>)>)
			PString catName;
			Atf::LAtfVector< UINT32, 4 > imageIds;
			Atf::LAtfVector< SubcatBody, 4 > subCats;

			CatBody();
			void clear();
			bool equals(const CatBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			CatBody(CatBody&&);
			CatBody& operator=(CatBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			CatBody(const CatBody&) = default;
			CatBody& operator=(const CatBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(4s)>4<M(s4<4>4<M(s4<4>)>)>] - errCode[errDescr|numImages<M(imageId,imageDescr)>,numCats<M(catName,numImageIds<imageIds>,numSubCats<M(subCatName,numImageIds<imageIds>)>)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< ImageBody, 4 > images;
			Atf::LAtfVector< CatBody, 4 > cats;

			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY(Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_GALLERY_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID : public Atf::MessageProtocol
		{
			//! 4 <FIXME>Common::AtfShared::LoginExtra</FIXME> 4s - cliSiteId, <FIXME>cliBody</FIXME> ,locale,countryCode
			UINT32 cliSiteId;
			Common::AtfShared::LoginExtra cliBody;
			UINT32 locale;
			PString countryCode;

			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID(Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID&&);
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID& operator=(Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID(const Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID&) = default;
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID& operator=(const Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4] - errCode[errDescr|imageId]
			INT16 errCode;

			PString errDescr;

			UINT32 imageId;

			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY(Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY(const Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_GET_DEFAULT_GALLERY_IMAGEID_REPLY&) = default;
#endif
#endif
		};

		struct LoginExtraDataBody
		{
			//! M( <FIXME>Common::AtfShared::LoginExtra</FIXME> ) - M( <FIXME>extraData</FIXME> )
			Common::AtfShared::LoginExtra extraData;	// optional

			LoginExtraDataBody();
			void clear();
			bool equals(const LoginExtraDataBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			LoginExtraDataBody(LoginExtraDataBody&&);
			LoginExtraDataBody& operator=(LoginExtraDataBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			LoginExtraDataBody(const LoginExtraDataBody&) = default;
			LoginExtraDataBody& operator=(const LoginExtraDataBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION : public Atf::MessageProtocol
		{
			//! ss444ssss <FIXME>Common::AtfShared::LoginExtra</FIXME> b - installIdDeprecated,promo,cliSiteId,platformId,clientVersion,tiVer,tinfoText,refDomain,mobileAppId, <FIXME>extraData</FIXME> ,lat
			PString installIdDeprecated;
			PString promo;
			UINT32 cliSiteId;
			UINT32 platformId;
			UINT32 clientVersion;
			PString tiVer;
			PString tinfoText;
			PString refDomain;
			PString mobileAppId;
			Common::AtfShared::LoginExtra extraData;
			bool lat;

			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION&&);
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION& operator=(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION&) = default;
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION& operator=(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY&&);
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY& operator=(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY&) = default;
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY& operator=(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_INSTALLATION_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_ADX_EVENT : public Atf::MessageProtocol
		{
			// st4444sss - userWebId,when,eventType,license,platformId,device,deviceId,network,reference
			PString userWebId;
			SrvTime when;
			UINT32 eventType;
			UINT32 license;
			UINT32 platformId;
			UINT32 device;
			PString deviceId;
			PString network;
			PString reference;

			Protocol_MSG_LOBBYETC_ADX_EVENT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_ADX_EVENT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_ADX_EVENT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_ADX_EVENT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_ADX_EVENT(Protocol_MSG_LOBBYETC_ADX_EVENT&&);
			Protocol_MSG_LOBBYETC_ADX_EVENT& operator=(Protocol_MSG_LOBBYETC_ADX_EVENT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_ADX_EVENT(const Protocol_MSG_LOBBYETC_ADX_EVENT&) = default;
			Protocol_MSG_LOBBYETC_ADX_EVENT& operator=(const Protocol_MSG_LOBBYETC_ADX_EVENT&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_ADX_EVENT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_ADX_EVENT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY(Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY&&);
			Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY& operator=(Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY(const Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY& operator=(const Protocol_MSG_LOBBYETC_ADX_EVENT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS : public Atf::MessageProtocol
		{
			// 4<4> - numUserIntIds<userIntIds>
			Atf::LAtfVector< UINT32, 4 > userIntIds;

			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CONVERT_USERINTIDS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CONVERT_USERINTIDS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS(Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS&&);
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS& operator=(Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS(const Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS&) = default;
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS& operator=(const Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS&) = default;
#endif
#endif
		};

		struct UserData
		{
			// 4s - userIntId,userId
			UINT32 userIntId;
			PString userId;

			UserData();
			void clear();
			bool equals(const UserData&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			UserData(UserData&&);
			UserData& operator=(UserData&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			UserData(const UserData&) = default;
			UserData& operator=(const UserData&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<4s>] - errCode[errDescr|numUsers<userIntId,userId>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< UserData, 4 > users;

			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY(Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY&&);
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY& operator=(Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY(const Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY& operator=(const Protocol_MSG_LOBBYETC_CONVERT_USERINTIDS_REPLY&) = default;
#endif
#endif
		};
	};	// namespace cli_Unauth

	namespace cli
	{
		struct Protocol_MSG_LOBBYETC_W2G_AUDIT : public Atf::MessageProtocol
		{
			// ss4 - notUsedStr,password,year
			PString notUsedStr;
			PString password;
			INT32 year;

			Protocol_MSG_LOBBYETC_W2G_AUDIT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_W2G_AUDIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_W2G_AUDIT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_W2G_AUDIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_W2G_AUDIT(Protocol_MSG_LOBBYETC_W2G_AUDIT&&);
			Protocol_MSG_LOBBYETC_W2G_AUDIT& operator=(Protocol_MSG_LOBBYETC_W2G_AUDIT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_W2G_AUDIT(const Protocol_MSG_LOBBYETC_W2G_AUDIT&) = default;
			Protocol_MSG_LOBBYETC_W2G_AUDIT& operator=(const Protocol_MSG_LOBBYETC_W2G_AUDIT&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_W2G_AUDIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_W2G_AUDIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY(Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY&&);
			Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY& operator=(Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY(const Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY& operator=(const Protocol_MSG_LOBBYETC_W2G_AUDIT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT : public Atf::MessageProtocol
		{
			// sdd4sbb - notUsedStr,startDate,endDate,eReportFormat,password,isHtmlForClient,vipStepsOnly
			PString notUsedStr;
			SrvDate startDate;
			SrvDate endDate;
			UINT32 eReportFormat;	// defined as eReportFormat under srvshared/crmserver.h
			PString password;
			bool isHtmlForClient;
			bool vipStepsOnly;

			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_FPP_HISTORY_AUDIT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_FPP_HISTORY_AUDIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT(Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT&&);
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT& operator=(Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT(const Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT&) = default;
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT& operator=(const Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY(Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY&&);
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY& operator=(Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY(const Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY& operator=(const Protocol_MSG_LOBBYETC_FPP_HISTORY_AUDIT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF : public Atf::MessageProtocol
		{
			// b - eligible
			bool eligible;

			Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY(Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY(const Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_ICE_SET_ALL_USER_BOARD_PREF_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_REPORT : public Atf::MessageProtocol
		{
			//! 4 <FIXME_COND_IF> M(dds4b) <FIXME_COND_ENDIF>  - reportType <FIXME_COND_IF> ,M(startDate,endDate,password,reportFormat,isHtmlForClient) <FIXME_COND_ENDIF> 
			UINT32 reportType;

			SrvDate startDate;
			SrvDate endDate;
			PString password;
			UINT32 reportFormat;	// see eReportFormat in crmserver.h (max 3 now)
			bool isHtmlForClient;

			Protocol_MSG_LOBBYETC_CLIENT_REPORT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_REPORT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_REPORT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_REPORT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_REPORT(Protocol_MSG_LOBBYETC_CLIENT_REPORT&&);
			Protocol_MSG_LOBBYETC_CLIENT_REPORT& operator=(Protocol_MSG_LOBBYETC_CLIENT_REPORT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_REPORT(const Protocol_MSG_LOBBYETC_CLIENT_REPORT&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_REPORT& operator=(const Protocol_MSG_LOBBYETC_CLIENT_REPORT&) = default;
#endif
#endif

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_REPORT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_REPORT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY(Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY&&);
			Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY& operator=(Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY(const Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLIENT_REPORT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_LOCALE_SET : public Atf::MessageProtocol
		{
			// 4 - locale
			UINT32 locale;

			Protocol_MSG_LOBBYETC_LOCALE_SET();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_LOCALE_SET&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_LOCALE_SET; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_LOCALE_SET"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY : public Atf::MessageProtocol
		{
			// 2[s|44] - errCode[errDescr|locale,emLocale]
			INT16 errCode;

			PString errDescr;

			UINT32 locale;
			UINT32 emLocale;

			Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_LOCALE_SET_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_LOCALE_SET_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY(Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY&&);
			Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY& operator=(Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY(const Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY&) = default;
			Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY& operator=(const Protocol_MSG_LOBBYETC_LOCALE_SET_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_EMLOCALE_SET : public Atf::MessageProtocol
		{
			// 444 - emLocale,emLocale2,emLocale3
			UINT32 emLocale;
			UINT32 emLocale2;	// can be LOCALE_INVALID
			UINT32 emLocale3;	// can be LOCALE_INVALID

			Protocol_MSG_LOBBYETC_EMLOCALE_SET();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_EMLOCALE_SET&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_EMLOCALE_SET; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_EMLOCALE_SET"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4444] - errCode[errDescr|locale,emLocale,emLocale2,emLocale3]
			INT16 errCode;

			PString errDescr;

			UINT32 locale;
			UINT32 emLocale;
			UINT32 emLocale2;
			UINT32 emLocale3;

			Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_EMLOCALE_SET_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_EMLOCALE_SET_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY(Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY&&);
			Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY& operator=(Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY(const Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY&) = default;
			Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY& operator=(const Protocol_MSG_LOBBYETC_EMLOCALE_SET_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_EMLOCALE_GET : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_EMLOCALE_GET();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_EMLOCALE_GET&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_EMLOCALE_GET; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_EMLOCALE_GET"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4444] - errCode[errDescr|userLocale,userEmLocale,userEmLocale2,userEmLocale3]
			INT16 errCode;

			PString errDescr;

			UINT32 userLocale;
			UINT32 userEmLocale;
			UINT32 userEmLocale2;
			UINT32 userEmLocale3;

			Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_EMLOCALE_GET_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_EMLOCALE_GET_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY(Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY&&);
			Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY& operator=(Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY(const Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY&) = default;
			Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY& operator=(const Protocol_MSG_LOBBYETC_EMLOCALE_GET_REPLY&) = default;
#endif
#endif
		};

		struct OneLimitBody
		{
			// M(4s1b) - M(limit,limitCurrency,lmitType,hadPrevLimit)
			INT32 limit;
			PString limitCurrency;
			BYTE lmitType;
			bool hadPrevLimit;

			OneLimitBody();
			void clear();
			bool equals(const OneLimitBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			OneLimitBody(OneLimitBody&&);
			OneLimitBody& operator=(OneLimitBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			OneLimitBody(const OneLimitBody&) = default;
			OneLimitBody& operator=(const OneLimitBody&) = default;
#endif
#endif
		};

		struct oneCurrBody
		{
			// M(s) - M(currency)
			PString currency;

			oneCurrBody();
			void clear();
			bool equals(const oneCurrBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			oneCurrBody(oneCurrBody&&);
			oneCurrBody& operator=(oneCurrBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			oneCurrBody(const oneCurrBody&) = default;
			oneCurrBody& operator=(const oneCurrBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_GET_TABLE_LIMITS : public Atf::MessageProtocol
		{
			// s - notUsedStr
			PString notUsedStr;

			Protocol_MSG_LOBBY_GET_TABLE_LIMITS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_TABLE_LIMITS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_TABLE_LIMITS; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_TABLE_LIMITS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS(Protocol_MSG_LOBBY_GET_TABLE_LIMITS&&);
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS& operator=(Protocol_MSG_LOBBY_GET_TABLE_LIMITS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS(const Protocol_MSG_LOBBY_GET_TABLE_LIMITS&) = default;
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS& operator=(const Protocol_MSG_LOBBY_GET_TABLE_LIMITS&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|44<M(4s1b)>4<M(s)>444] - errCode[errString|obsoleteNLlimit,numLimits<M(limit,limitCurrency,lmitType,hadPrevLimit)>,numCurrencies<M(currency)>,autoLimitHour,waitingIncreaseNLLimitDays,waitingIncreaseFLLimitDays]
			INT16 errCode;

			PString errString;

			INT32 obsoleteNLlimit;
			Atf::LAtfVector< OneLimitBody, 4 > limits;
			Atf::LAtfVector< oneCurrBody, 4 > currencies;
			INT32 autoLimitHour;
			INT32 waitingIncreaseNLLimitDays;
			INT32 waitingIncreaseFLLimitDays;

			Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_TABLE_LIMITS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_TABLE_LIMITS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY(Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY&&);
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY& operator=(Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY(const Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY&) = default;
			Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY& operator=(const Protocol_MSG_LOBBY_GET_TABLE_LIMITS_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_GET_TOURN_LIMITS : public Atf::MessageProtocol
		{
			// s - notUsedStr
			PString notUsedStr;

			Protocol_MSG_LOBBY_GET_TOURN_LIMITS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_TOURN_LIMITS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_TOURN_LIMITS; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_TOURN_LIMITS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS(Protocol_MSG_LOBBY_GET_TOURN_LIMITS&&);
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS& operator=(Protocol_MSG_LOBBY_GET_TOURN_LIMITS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS(const Protocol_MSG_LOBBY_GET_TOURN_LIMITS&) = default;
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS& operator=(const Protocol_MSG_LOBBY_GET_TOURN_LIMITS&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(4s1b)>4<M(s)>444] - errCode[errString|numLimits<M(limit,limitCurrency,lmitType,hadPrevLimit)>,numCurrencies<M(currency)>,autoLimitHour,waitingIncreaseTournLimitDays,waitingIncreaseSNGLimitDays]
			INT16 errCode;

			PString errString;

			Atf::LAtfVector< OneLimitBody, 4 > limits;
			Atf::LAtfVector< oneCurrBody, 4 > currencies;
			INT32 autoLimitHour;
			INT32 waitingIncreaseTournLimitDays;
			INT32 waitingIncreaseSNGLimitDays;

			Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_TOURN_LIMITS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_TOURN_LIMITS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY(Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY&&);
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY& operator=(Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY(const Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY&) = default;
			Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY& operator=(const Protocol_MSG_LOBBY_GET_TOURN_LIMITS_REPLY&) = default;
#endif
#endif
		};

		struct OneCasinoLimitBody
		{
			// M(8s1) - M(limit,limitCurrency,lmitType)
			INT64 limit;
			PString limitCurrency;
			BYTE lmitType;

			OneCasinoLimitBody();
			void clear();
			bool equals(const OneCasinoLimitBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			OneCasinoLimitBody(OneCasinoLimitBody&&);
			OneCasinoLimitBody& operator=(OneCasinoLimitBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			OneCasinoLimitBody(const OneCasinoLimitBody&) = default;
			OneCasinoLimitBody& operator=(const OneCasinoLimitBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_CASINO_LIMITS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_CASINO_LIMITS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(8s1)>4<M(s)>44b444] - errCode[errDescr|numLimits<M(limit,limitCurrency,lmitType)>,numCurrencies<M(currency)>,autoApproveHours,waitingIncreaseBlackjackLimitDays,hadPrevLimitUK,waitingIncreaseRouletteLimitDays,waitingIncreaseSlotsLimitDays,waitingIncreaseOthersLimitDays]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< OneCasinoLimitBody, 4 > limits;
			Atf::LAtfVector< oneCurrBody, 4 > currencies;
			INT32 autoApproveHours;
			INT32 waitingIncreaseBlackjackLimitDays;
			bool hadPrevLimitUK;
			INT32 waitingIncreaseRouletteLimitDays;
			INT32 waitingIncreaseSlotsLimitDays;
			INT32 waitingIncreaseOthersLimitDays;

			Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY(Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY(const Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_CASINO_LIMITS_REPLY&) = default;
#endif
#endif
		};

		struct OneSportLimitBody
		{
			// M(18s44b) - M(eLimitType,amount,currency,autoApproveHours,waitingIncreaseLimitDays,hadPrevLimitUK)
			BYTE eLimitType;
			INT64 amount;
			PString currency;
			INT32 autoApproveHours;
			INT32 waitingIncreaseLimitDays;
			bool hadPrevLimitUK;

			OneSportLimitBody();
			void clear();
			bool equals(const OneSportLimitBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			OneSportLimitBody(OneSportLimitBody&&);
			OneSportLimitBody& operator=(OneSportLimitBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			OneSportLimitBody(const OneSportLimitBody&) = default;
			OneSportLimitBody& operator=(const OneSportLimitBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_SPORT_LIMITS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_SPORT_LIMITS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(18s44b)>] - errCode[errDescr|numLimits<M(eLimitType,amount,currency,autoApproveHours,waitingIncreaseLimitDays,hadPrevLimitUK)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< OneSportLimitBody, 4 > limits;

			Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY(Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY(const Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_SPORT_LIMITS_REPLY&) = default;
#endif
#endif
		};

		struct OneGameLimitBody
		{
			// M(18s44bt4) - M(limType,amount,currency,autoApproveHours,waitingIncreaseLimitDays,hadPrevLimitUK,scheduled,remaining)
			BYTE limType;
			INT64 amount;
			PString currency;
			INT32 autoApproveHours;
			INT32 waitingIncreaseLimitDays;
			bool hadPrevLimitUK;
			CommSrvTime scheduled;
			INT32 remaining;

			OneGameLimitBody();
			void clear();
			bool equals(const OneGameLimitBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			OneGameLimitBody(OneGameLimitBody&&);
			OneGameLimitBody& operator=(OneGameLimitBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			OneGameLimitBody(const OneGameLimitBody&) = default;
			OneGameLimitBody& operator=(const OneGameLimitBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(18s44bt4)>] - errCode[errDescr|numLimits<M(limType,amount,currency,autoApproveHours,waitingIncreaseLimitDays,hadPrevLimitUK,scheduled,remaining)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< OneGameLimitBody, 4 > limits;

			Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY(Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY(const Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_ALL_APPROVED_GAME_LIMITS_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_USER_PROPS : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_USER_PROPS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_USER_PROPS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_USER_PROPS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_USER_PROPS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|444s844488M(8888)4s] - errCode[errDescr|privileges,flags,locale,country,privileges2,vipStatus,timeZone,userIntId,flags2,privileges3,M(clientFeatureVisibilityOnMask,clientFeatureVisibilityOffMask,clientFeatureVisibilityOnMask2,clientFeatureVisibilityOffMask2),originalUserIntId,fiscalCode]
			INT16 errCode;

			PString errDescr;

			UINT32 privileges;
			UINT32 flags;
			UINT32 locale;
			PString country;
			UINT64 privileges2;
			UINT32 vipStatus;
			UINT32 timeZone;
			UINT32 userIntId;
			UINT64 flags2;
			UINT64 privileges3;

			UINT64 clientFeatureVisibilityOnMask;
			UINT64 clientFeatureVisibilityOffMask;
			UINT64 clientFeatureVisibilityOnMask2;
			UINT64 clientFeatureVisibilityOffMask2;

			UINT32 originalUserIntId;
			PString fiscalCode;

			Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_USER_PROPS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_USER_PROPS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY(Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY(const Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_USER_PROPS_REPLY&) = default;
#endif
#endif

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct UserFppBundleSingleLevelBody
		{
			// M(44224) - M(accVpp,fppReward,targetType,penalty,vipOrd)
			INT32 accVpp;
			INT32 fppReward;
			INT16 targetType;
			INT16 penalty;
			INT32 vipOrd;

			UserFppBundleSingleLevelBody();
			void clear();
			bool equals(const UserFppBundleSingleLevelBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY : public Atf::MessageProtocol
		{
			// 2[s|88244444<M(44224)>4441] - errCode[errDescr|vppMonthly,vppYearly,vipStatus,fpp,warningDays,rewardPercent,notificationPercent,numVipLevelBundles<M(accVpp,fppReward,targetType,penalty,vipOrd)>,nextLevelRewardPercent,vppMonthlyCentsOnly,vppYearlyCentsOnly,supernovaFlags]
			INT16 errCode;

			PString errDescr;

			UINT64 vppMonthly;
			UINT64 vppYearly;
			INT16 vipStatus;
			UINT32 fpp;
			INT32 warningDays;
			INT32 rewardPercent;
			INT32 notificationPercent;
			Atf::LAtfVector< UserFppBundleSingleLevelBody, 4 > vipLevelBundles;
			INT32 nextLevelRewardPercent;
			INT32 vppMonthlyCentsOnly;
			INT32 vppYearlyCentsOnly;
			INT8 supernovaFlags;

			Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY(Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY(const Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_FPP_BUNDLES_FOR_USER_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(18s44b)>] - errCode[errDescr|numLimits<M(eLimitType,amount,currency,autoApproveHours,waitingIncreaseLimitDays,hadPrevLimitUK)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< OneSportLimitBody, 4 > limits;

			Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY(Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY(const Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_SPORT_ACCUMULATED_LIMIT_REPLY&) = default;
#endif
#endif
		};

		struct HistoryBody
		{
			// tsss - loginTime,isp,ipCountry,ipAddress
			CommSrvTime loginTime;
			PString isp;
			PString ipCountry;
			PString ipAddress;

			HistoryBody();
			void clear();
			bool equals(const HistoryBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			HistoryBody(HistoryBody&&);
			HistoryBody& operator=(HistoryBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			HistoryBody(const HistoryBody&) = default;
			HistoryBody& operator=(const HistoryBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY : public Atf::MessageProtocol
		{
			// s - notUsedStr
			PString notUsedStr;

			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LOGIN_HISTORY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LOGIN_HISTORY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY(Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY&&);
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY& operator=(Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY(const Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY&) = default;
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY& operator=(const Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<tsss>] - errCode[errDescr|numHistories<loginTime,isp,ipCountry,ipAddress>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< HistoryBody, 4 > histories;

			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY(Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY(const Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_LOGIN_HISTORY_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_REALITY_CHECK_FREQ; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_REALITY_CHECK_FREQ"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY : public Atf::MessageProtocol
		{
			// 2[s|b4] - errCode[errDescr|found,propType]
			INT16 errCode;

			PString errDescr;

			bool found;
			INT32 propType;

			Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY(Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY(const Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_REALITY_CHECK_FREQ_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ : public Atf::MessageProtocol
		{
			// 4 - minutes
			INT32 minutes;	// 144000 - 100 days

			Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SET_REALITY_CHECK_FREQ; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SET_REALITY_CHECK_FREQ"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY(Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY&&);
			Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY& operator=(Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY(const Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY&) = default;
			Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY& operator=(const Protocol_MSG_LOBBYETC_SET_REALITY_CHECK_FREQ_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT : public Atf::MessageProtocol
		{
			// sddsb4b - notUsedStr,startDate,endDate,password,includeFPP,reportFormat,isHtmlForClient
			PString notUsedStr;
			SrvDate startDate;
			SrvDate endDate;
			PString password;
			bool includeFPP;
			UINT32 reportFormat;	// defined as eReportFormat under srvshared/crmserver.h
			bool isHtmlForClient;

			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_PLAYING_HISTORY_AUDIT; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_PLAYING_HISTORY_AUDIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT(Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT&&);
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT& operator=(Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT(const Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT&) = default;
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT& operator=(const Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY(Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY&&);
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY& operator=(Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY(const Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY&) = default;
			Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY& operator=(const Protocol_MSG_LOBBY_PLAYING_HISTORY_AUDIT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION : public Atf::MessageProtocol
		{
			// s - redirectorUrl
			PString redirectorUrl;

			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_INIT_NETVERIFY_SESSION; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_INIT_NETVERIFY_SESSION"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION(Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION&&);
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION& operator=(Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION(const Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION&) = default;
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION& operator=(const Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY : public Atf::MessageProtocol
		{
			// 2[s|s] - errCode[errDescr|url]
			INT16 errCode;

			PString errDescr;

			PString url;

			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY(Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY&&);
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY& operator=(Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY(const Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY&) = default;
			Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY& operator=(const Protocol_MSG_LOBBY_INIT_NETVERIFY_SESSION_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_ICE_GET_UPDATES; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_ICE_GET_UPDATES"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY : public Atf::MessageProtocol
		{
			// 2[s|44s] - errCode[errDescr|numChanges,flags,toolTip]
			INT16 errCode;

			PString errDescr;

			INT32 numChanges;
			UINT32 flags;
			PString toolTip;

			Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY(Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY(const Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_ICE_GET_UPDATES_REPLY&) = default;
#endif
#endif
		};

		struct SetLimitBody
		{
			// M(8s1) - M(amount,currency,limType)
			INT64 amount;	// -1 means no limit
			PString currency;
			BYTE limType;

			SetLimitBody();
			void clear();
			bool equals(const SetLimitBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			SetLimitBody(SetLimitBody&&);
			SetLimitBody& operator=(SetLimitBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			SetLimitBody(const SetLimitBody&) = default;
			SetLimitBody& operator=(const SetLimitBody&) = default;
#endif
#endif
		};

		struct SetLimitReplyBody
		{
			// M(12) - M(limType,errCode)
			BYTE limType;
			INT16 errCode;
			// NOTE: not completed reply body

			SetLimitReplyBody();
			void clear();
			bool equals(const SetLimitReplyBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2 : public Atf::MessageProtocol
		{
			// 4<M(8s1)> - numLimits<M(amount,currency,limType)>
			Atf::LAtfVector< SetLimitBody, 4 > limits;

			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SET_GAME_LIMITS2; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SET_GAME_LIMITS2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2(Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2&&);
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2& operator=(Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2(const Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2&) = default;
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2& operator=(const Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(12)>] - errCode[errDescr|numSetReplies<M(limType,errCode)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< SetLimitReplyBody, 4 > setReplies;

			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY(Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY&&);
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY& operator=(Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY(const Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY&) = default;
			Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY& operator=(const Protocol_MSG_LOBBYETC_SET_GAME_LIMITS2_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_LOGOUT_USER_INFO; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_LOGOUT_USER_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct EmptyBody
		{
			// M() - M()

			EmptyBody();
			void clear();
			bool equals(const EmptyBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY : public Atf::MessageProtocol
		{
			// 2[s|M()4] - errCode[errDescr|M(),numOfRequests]
			INT16 errCode;

			PString errDescr;

			EmptyBody emptyBody;
			INT32 numOfRequests;

			Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY(Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY&&);
			Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY& operator=(Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY(const Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY&) = default;
			Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY& operator=(const Protocol_MSG_LOBBYETC_LOGOUT_USER_INFO_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_FIND_TOURN_IT : public Atf::MessageProtocol
		{
			// s - notUsedStr
			PString notUsedStr;

			Protocol_MSG_LOBBYETC_FIND_TOURN_IT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_FIND_TOURN_IT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_FIND_TOURN_IT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_FIND_TOURN_IT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT(Protocol_MSG_LOBBYETC_FIND_TOURN_IT&&);
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT& operator=(Protocol_MSG_LOBBYETC_FIND_TOURN_IT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT(const Protocol_MSG_LOBBYETC_FIND_TOURN_IT&) = default;
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT& operator=(const Protocol_MSG_LOBBYETC_FIND_TOURN_IT&) = default;
#endif
#endif
		};

		struct ReacquisitionBody
		{
			// M(st44) - M(aamsTicketId,when,reacquisition,cost)
			PString aamsTicketId;
			SrvTime when;
			UINT32 reacquisition;
			UINT32 cost;

			ReacquisitionBody();
			void clear();
			bool equals(const ReacquisitionBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			ReacquisitionBody(ReacquisitionBody&&);
			ReacquisitionBody& operator=(ReacquisitionBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			ReacquisitionBody(const ReacquisitionBody&) = default;
			ReacquisitionBody& operator=(const ReacquisitionBody&) = default;
#endif
#endif
		};

		struct ItTournBody
		{
			// M(4<M(st44)>) - M(numReacquisitions<M(aamsTicketId,when,reacquisition,cost)>)
			Atf::LAtfVector< ReacquisitionBody, 4 > reacquisitions;

			ItTournBody();
			void clear();
			bool equals(const ItTournBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			ItTournBody(ItTournBody&&);
			ItTournBody& operator=(ItTournBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			ItTournBody(const ItTournBody&) = default;
			ItTournBody& operator=(const ItTournBody&) = default;
#endif
#endif
		};

		struct ItTournData
		{
			// 4M(4<M(st44)>) - tournId,M(numReacquisitions<M(aamsTicketId,when,reacquisition,cost)>)
			UINT32 tournId;
			ItTournBody infoBody;

			ItTournData();
			void clear();
			bool equals(const ItTournData&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			ItTournData(ItTournData&&);
			ItTournData& operator=(ItTournData&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			ItTournData(const ItTournData&) = default;
			ItTournData& operator=(const ItTournData&) = default;
#endif
#endif
		};

		struct AddOnBody
		{
			// M(st44) - M(ticketId,when,reacquisitionType,addOn)
			PString ticketId;
			SrvTime when;
			UINT32 reacquisitionType;
			UINT32 addOn;

			AddOnBody();
			void clear();
			bool equals(const AddOnBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			AddOnBody(AddOnBody&&);
			AddOnBody& operator=(AddOnBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			AddOnBody(const AddOnBody&) = default;
			AddOnBody& operator=(const AddOnBody&) = default;
#endif
#endif
		};

		struct ItRingGameBody
		{
			// M(4<M(st44)>) - M(numAddOns<M(ticketId,when,reacquisitionType,addOn)>)
			Atf::LAtfVector< AddOnBody, 4 > addOns;

			ItRingGameBody();
			void clear();
			bool equals(const ItRingGameBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			ItRingGameBody(ItRingGameBody&&);
			ItRingGameBody& operator=(ItRingGameBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			ItRingGameBody(const ItRingGameBody&) = default;
			ItRingGameBody& operator=(const ItRingGameBody&) = default;
#endif
#endif
		};

		struct ItRingGameData
		{
			// 4M(4<M(st44)>) - tableId,M(numAddOns<M(ticketId,when,reacquisitionType,addOn)>)
			UINT32 tableId;
			ItRingGameBody infoBody;

			ItRingGameData();
			void clear();
			bool equals(const ItRingGameData&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			ItRingGameData(ItRingGameData&&);
			ItRingGameData& operator=(ItRingGameData&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			ItRingGameData(const ItRingGameData&) = default;
			ItRingGameData& operator=(const ItRingGameData&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<4M(4<M(st44)>)>4<4M(4<M(st44)>)>] - errCode[errDescr|numTourns<tournId,M(numReacquisitions<M(aamsTicketId,when,reacquisition,cost)>)>,numRingGames<tableId,M(numAddOns<M(ticketId,when,reacquisitionType,addOn)>)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< ItTournData, 4 > tourns;
			Atf::LAtfVector< ItRingGameData, 4 > ringGames;

			Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_FIND_TOURN_IT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_FIND_TOURN_IT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY(Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY&&);
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY& operator=(Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY(const Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY& operator=(const Protocol_MSG_LOBBYETC_FIND_TOURN_IT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST : public Atf::MessageProtocol
		{
			//! s1 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> 4 - notUsed,type <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,locale
			PString notUsed;
			INT8 type;	//see: HAND_HISTORY_* defines in dbm.h  These values could be changed to an enum.

			UINT64 param;	//see: dbm.h

			// 1 week

			// no limit for tournid

			UINT32 numRequested;	//1 only valid value
			UINT64 handId64;	// no limit

			UINT32 locale;	//see: i18n.localedef.h

			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_HISTORY_REQUEST; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_HISTORY_REQUEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST(Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST&&);
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST& operator=(Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST(const Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST& operator=(const Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY : public Atf::MessageProtocol
		{
			// 2[s|s] - errCode[errDescr|email]
			INT16 errCode;

			PString errDescr;

			PString email;

			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY(Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY&&);
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY& operator=(Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY(const Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLIENT_HISTORY_REQUEST_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2 : public Atf::MessageProtocol
		{
			// s - notUsedStr
			PString notUsedStr;

			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_USER_TOURNTICKETS2; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_USER_TOURNTICKETS2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2(Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2&&);
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2& operator=(Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2(const Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2&) = default;
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2& operator=(const Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2&) = default;
#endif
#endif
		};

		struct TicketBody
		{
			// M(4sb4tts4) - M(ticketId,admissionCode,isMulti,ticketTypeValue,issued,expTime,currency,ticketTypeFlags)
			UINT32 ticketId;
			PString admissionCode;
			bool isMulti;
			UINT32 ticketTypeValue;
			SrvTime issued;
			SrvTime expTime;
			PString currency;
			UINT32 ticketTypeFlags;

			TicketBody();
			void clear();
			bool equals(const TicketBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			TicketBody(TicketBody&&);
			TicketBody& operator=(TicketBody&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			TicketBody(const TicketBody&) = default;
			TicketBody& operator=(const TicketBody&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(4sb4tts4)>] - errCode[errString|numTickets<M(ticketId,admissionCode,isMulti,ticketTypeValue,issued,expTime,currency,ticketTypeFlags)>]
			INT16 errCode;

			PString errString;

			Atf::LAtfVector< TicketBody, 4 > tickets;

			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY(Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY&&);
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY& operator=(Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY(const Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY&) = default;
			Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY& operator=(const Protocol_MSG_LOBBYETC_USER_TOURNTICKETS2_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE : public Atf::MessageProtocol
		{
			// 4 - imageId
			UINT32 imageId;	// no limits

			Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errString]
			INT16 errCode;

			PString errString;

			Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY(Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY(const Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_SET_USER_GALLERY_IMAGE_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4444t] - errCode[errString|loginTotal,loginTotalLimit,loginTimeTotalSec,loginTimeLimitMin,userSessionStartTime]
			INT16 errCode;

			PString errString;

			UINT32 loginTotal;
			UINT32 loginTotalLimit;
			UINT32 loginTimeTotalSec;
			UINT32 loginTimeLimitMin;
			SrvTime userSessionStartTime;

			Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY(Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY(const Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_LOGIN_LIMIT_INFO_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct ImageAprovalBody
		{
			// M(444t) - M(imgId,userIntId,flags,whenApproved)
			UINT32 imgId;
			UINT32 userIntId;
			UINT32 flags;
			SrvTime whenApproved;

			ImageAprovalBody();
			void clear();
			bool equals(const ImageAprovalBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(444t)>44b] - errCode[errString|numApprovals<M(imgId,userIntId,flags,whenApproved)>,nRemaining,currentImageId,isGallery]
			INT16 errCode;

			PString errString;

			Atf::LAtfVector< ImageAprovalBody, 4 > approvals;
			UINT32 nRemaining;
			UINT32 currentImageId;
			bool isGallery;

			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY(Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_GET_IMAGE_USER_APPROVALS_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL : public Atf::MessageProtocol
		{
			// 4 - imageId
			UINT32 imageId;	// no limit

			Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errString]
			INT16 errCode;

			PString errString;

			Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY(Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY(const Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_DELETE_IMAGE_APPROVAL_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS : public Atf::MessageProtocol
		{
			// 4 - optionType
			UINT32 optionType;

			Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_CLIENT_OPTIONS; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_CLIENT_OPTIONS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|M(v)] - errCode[errDesc|M(encodedPropStr)]
			INT16 errCode;

			PString errDesc;

			PBlock encodedPropStr;

			Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY(Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY&&);
			Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY& operator=(Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY(const Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY&) = default;
			Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY& operator=(const Protocol_MSG_LOBBY_GET_CLIENT_OPTIONS_REPLY&) = default;
#endif
#endif

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS : public Atf::MessageProtocol
		{
			// M()4 - M(),propType
			Atf::CopyableMsgBody body;	// server does not know the format and saves it to DB directly
			UINT32 propType;

			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_SET_CLIENT_OPTIONS; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_SET_CLIENT_OPTIONS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS(Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS&&);
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS& operator=(Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS(const Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS&) = default;
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS& operator=(const Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS&) = default;
#endif
#endif
		};
		struct Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDesc]
			INT16 errCode;

			PString errDesc;

			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY(Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY&&);
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY& operator=(Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY(const Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY&) = default;
			Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY& operator=(const Protocol_MSG_LOBBY_SET_CLIENT_OPTIONS_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_DISPLAY_ADS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_DISPLAY_ADS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|b] - errCode[errString|displayAds]
			INT16 errCode;

			PString errString;

			bool displayAds;

			Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY(Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY(const Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_DISPLAY_ADS_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_GET_ARJEL_EVENTS : public Atf::MessageProtocol
		{
			// s444ss - notUsedUserId,notUsedUserIntId,notUsedlocale,notUsedlicenseId,notUsedipAddr,frArjelUserHash
			// the message should be empty for new clients.
			// this is for old clients only:
			PString notUsedUserId;
			UINT32 notUsedUserIntId;
			UINT32 notUsedlocale;
			UINT32 notUsedlicenseId;
			PString notUsedipAddr;
			PString frArjelUserHash;

			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_ARJEL_EVENTS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_ARJEL_EVENTS; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_ARJEL_EVENTS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS(Protocol_MSG_LOBBY_GET_ARJEL_EVENTS&&);
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS& operator=(Protocol_MSG_LOBBY_GET_ARJEL_EVENTS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS(const Protocol_MSG_LOBBY_GET_ARJEL_EVENTS&) = default;
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS& operator=(const Protocol_MSG_LOBBY_GET_ARJEL_EVENTS&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errString]
			INT16 errCode;

			PString errString;

			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_ARJEL_EVENTS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_ARJEL_EVENTS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY(Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY&&);
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY& operator=(Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY(const Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY&) = default;
			Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY& operator=(const Protocol_MSG_LOBBY_GET_ARJEL_EVENTS_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_TARGET_NEWS_DESKTOP : public Atf::MessageProtocol
		{
			// b4 - onlyTargetBanner,newsTypeMask
			bool onlyTargetBanner;
			UINT32 newsTypeMask;

			Protocol_MSG_LOBBY_TARGET_NEWS_DESKTOP();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_TARGET_NEWS_DESKTOP&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_TARGET_NEWS_DESKTOP; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_TARGET_NEWS_DESKTOP"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBY_TARGET_NEWS_MOBILE : public Atf::MessageProtocol
		{
			// 44 - clientDownloadSource,newsProductMask
			UINT32 clientDownloadSource;	// flag, no limit on it
			UINT32 newsProductMask;

			Protocol_MSG_LOBBY_TARGET_NEWS_MOBILE();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_TARGET_NEWS_MOBILE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_TARGET_NEWS_MOBILE; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_TARGET_NEWS_MOBILE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBY_GET_USER_CAPS_REPLY : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBY_GET_USER_CAPS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_GET_USER_CAPS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_GET_USER_CAPS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_GET_USER_CAPS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_U_UPDATE_FLAGS_PRIV : public Atf::MessageProtocol
		{
			// 488488 - flags,flags2,flags3,privileges,privileges2,privileges3
			UINT32 flags;
			UINT64 flags2;
			UINT64 flags3;
			UINT32 privileges;
			UINT64 privileges2;
			UINT64 privileges3;

			Protocol_MSG_LOBBYETC_U_UPDATE_FLAGS_PRIV();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_U_UPDATE_FLAGS_PRIV&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_U_UPDATE_FLAGS_PRIV; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_U_UPDATE_FLAGS_PRIV"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// PYR-54689
		struct Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR : public Atf::MessageProtocol
		{
			//!  <FIXME>BrandProt::AvatarImg</FIXME>  -  <FIXME>gameAvatar</FIXME> 
			BrandProt::AvatarImg gameAvatar;

			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_SET_GAME_AVATAR; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_SET_GAME_AVATAR"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR(Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR&&);
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR& operator=(Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR(const Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR&) = default;
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR& operator=(const Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR&) = default;
#endif
#endif
		};

		// PYR-54689
		struct Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errString]
			INT16 errCode;

			PString errString;

			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY(Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY(const Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_SET_GAME_AVATAR_REPLY&) = default;
#endif
#endif
		};

		// client to server
		struct Protocol_MSG_LOBBY_ADMIN_INFO_REPLY : public Atf::MessageProtocol
		{
			// empty message without response

			Protocol_MSG_LOBBY_ADMIN_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_ADMIN_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_ADMIN_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_ADMIN_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4] - errCode[errString|freeBetCount]
			INT16 errCode;

			PString errString;

			UINT32 freeBetCount;

			Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY(Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY(const Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_USER_SPORT_BOOK_INFO_REPLY&) = default;
#endif
#endif
		};

		struct PlayingHistoryMetadata
		{
			// ddsb4b - startDate,endDate,password,includeFPP,reportFormat,isHtmlForClient
			SrvDate startDate;
			SrvDate endDate;
			PString password;
			bool includeFPP;
			UINT32 reportFormat;	// defined as eReportFormat under srvshared/crmserver.h
			bool isHtmlForClient;

			PlayingHistoryMetadata();
			void clear();
			bool equals(const PlayingHistoryMetadata&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			PlayingHistoryMetadata(PlayingHistoryMetadata&&);
			PlayingHistoryMetadata& operator=(PlayingHistoryMetadata&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			PlayingHistoryMetadata(const PlayingHistoryMetadata&) = default;
			PlayingHistoryMetadata& operator=(const PlayingHistoryMetadata&) = default;
#endif
#endif
		};

		struct HandHistoryMetadata
		{
			//! 1 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> 4s - type <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,locale,password
			INT8 type;	//see: HAND_HISTORY_* defines in dbm.h  These values could be changed to an enum.

			UINT64 param;	//see: dbm.h

			// 1 week

			// no limit for tournid

			UINT32 numRequested;	//1 only valid value
			UINT64 handId64;	// no limit

			UINT32 locale;	//see: i18n.localedef.h
			PString password;

			HandHistoryMetadata();
			void clear();
			bool equals(const HandHistoryMetadata&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			HandHistoryMetadata(HandHistoryMetadata&&);
			HandHistoryMetadata& operator=(HandHistoryMetadata&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			HandHistoryMetadata(const HandHistoryMetadata&) = default;
			HandHistoryMetadata& operator=(const HandHistoryMetadata&) = default;
#endif
#endif
		};

		struct AuxHandHistoryMetadata
		{
			//! 441 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> s - locale,timezone,criteriaType <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,password
			INT32 locale;
			UINT32 timezone;	// enum eTimeZone in timezone.h
			BYTE criteriaType;	// 1: by last hands. 2: by last hours. 3: by hand id

			UINT64 param;

			// 1 week

			UINT32 numRequested;	//1 only valid value
			UINT64 handId64;	// no limit

			PString password;

			AuxHandHistoryMetadata();
			void clear();
			bool equals(const AuxHandHistoryMetadata&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			AuxHandHistoryMetadata(AuxHandHistoryMetadata&&);
			AuxHandHistoryMetadata& operator=(AuxHandHistoryMetadata&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			AuxHandHistoryMetadata(const AuxHandHistoryMetadata&) = default;
			AuxHandHistoryMetadata& operator=(const AuxHandHistoryMetadata&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2 : public Atf::MessageProtocol
		{
			// ddsb4b - startDate,endDate,password,includeFPP,reportFormat,isHtmlForClient
			PlayingHistoryMetadata metadata;

			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2(Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2&&);
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2& operator=(Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2(const Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2&) = default;
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2& operator=(const Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY(Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY&&);
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY& operator=(Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY(const Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY&) = default;
			Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY& operator=(const Protocol_MSG_LOBBYETC_PLAYING_HISTORY_AUDIT2_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT : public Atf::MessageProtocol
		{
			//! 44 <FIXME_COND_IF> ddsb4b <FIXME_COND_ELSE> 1 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> 4s <FIXME_COND_ELSE> 441 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> s <FIXME_COND_ENDIF> s4 - reqType,status <FIXME_COND_IF> ,startDate,endDate,password,includeFPP,reportFormat,isHtmlForClient <FIXME_COND_ELSE> ,type <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,locale,password <FIXME_COND_ELSE> ,locale,timezone,criteriaType <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,password <FIXME_COND_ENDIF> ,uri,deliveryMethod
			INT32 reqType;	// enum ePlayHistoryRequestType in LobbyEtc.h
			INT32 status;	// enum ePlayHistoryRequestStatus in LobbyEtc.h

			PlayingHistoryMetadata metadata;

			HandHistoryMetadata hhMetadata;

			AuxHandHistoryMetadata auxHhMetadata;

			PString uri;
			INT32 deliveryMethod;	// enum eReportDeliveryMethod in LobbyEtc.h

			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT(Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT&&);
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT& operator=(Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT(const Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT&) = default;
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT& operator=(const Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PLAY_HISTORY_REPORT&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4ddsb4bsb4] - err[errDescr|status,startDate,endDate,password,includeFPP,reportFormat,isHtmlForClient,uri,showNudge,deliveryMethod]
			INT16 err;

			PString errDescr;

			INT32 status;	// enum ePlayHistoryRequestStatus in LobbyEtc.h
			PlayingHistoryMetadata metadata;
			PString uri;
			bool showNudge;
			INT32 deliveryMethod;	// enum eReportDeliveryMethod in LobbyEtc.h

			Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY(Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY(const Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_LAST_PLAYING_AUDIT_REPORT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE : public Atf::MessageProtocol
		{
			// ddsb4b - startDate,endDate,password,includeFPP,reportFormat,isHtmlForClient
			PlayingHistoryMetadata metadata;

			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE(Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE&&);
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE& operator=(Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE(const Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE&) = default;
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE& operator=(const Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - err[errDescr]
			INT16 err;

			PString errDescr;

			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY(Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY&&);
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY& operator=(Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY(const Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY&) = default;
			Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY& operator=(const Protocol_MSG_LOBBYETC_PLAYING_AUDIT_CLEAR_NUDGE_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST : public Atf::MessageProtocol
		{
			//! 1 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> 4s - type <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,locale,password
			HandHistoryMetadata metadata;

			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST(Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST&&);
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST& operator=(Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST(const Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST& operator=(const Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY(Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY&&);
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY& operator=(Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY(const Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLIENT_HAND_HISTORY_REQUEST_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY : public Atf::MessageProtocol
		{
			//! 2[s|41 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> 4ssb4] - err[errDescr|status,type <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,locale,password,uri,showNudge,deliveryMethod]
			INT16 err;

			PString errDescr;

			INT32 status;	// enum ePlayHistoryRequestStatus in LobbyEtc.h
			HandHistoryMetadata metadata;
			PString uri;
			bool showNudge;
			INT32 deliveryMethod;	// enum eReportDeliveryMethod in LobbyEtc.h

			Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY(Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY(const Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_LAST_HAND_HISTORY_REPORT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE : public Atf::MessageProtocol
		{
			//! 1 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> 4s - type <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,locale,password
			HandHistoryMetadata metadata;

			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE(Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE&&);
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE& operator=(Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE(const Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE&) = default;
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE& operator=(const Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - err[errDescr]
			INT16 err;

			PString errDescr;

			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY(Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY&&);
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY& operator=(Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY(const Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY&) = default;
			Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY& operator=(const Protocol_MSG_LOBBYETC_HAND_HISTORY_CLEAR_NUDGE_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_PREDICTOR_GET_TICKETS : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_PREDICTOR_GET_TICKETS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_PREDICTOR_GET_TICKETS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_PREDICTOR_GET_TICKETS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_PREDICTOR_GET_TICKETS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS : public Atf::MessageProtocol
		{
			// 2[s|b4] - err[errDescr|hasNudge,newTicketCount]
			INT16 err;

			PString errDescr;

			bool hasNudge;
			INT32 newTicketCount;

			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS(Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS&&);
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS& operator=(Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS(const Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS&) = default;
			Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS& operator=(const Protocol_MSG_LOBBYETC_U_CLI_NOTIFY_PREDICTOR_TICKETS&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY : public Atf::MessageProtocol
		{
			//! 2[s|4441 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> ssb4] - err[errDescr|status,locale,timezone,criteriaType <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,password,uri,showNudge,deliveryMethod]
			INT16 err;

			PString errDescr;

			INT32 status;	// enum ePlayHistoryRequestStatus in LobbyEtc.h
			AuxHandHistoryMetadata metadata;
			PString uri;
			bool showNudge;
			INT32 deliveryMethod;	// enum eReportDeliveryMethod in LobbyEtc.h

			Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY(Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY(const Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_LAST_AUX_HAND_HISTORY_REPORT_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE : public Atf::MessageProtocol
		{
			//! 441 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> s - locale,timezone,criteriaType <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,password
			AuxHandHistoryMetadata metadata;

			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE(Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE&&);
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE& operator=(Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE(const Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE&) = default;
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE& operator=(const Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - err[errDescr]
			INT16 err;

			PString errDescr;

			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY(Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY&&);
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY& operator=(Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY(const Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY&) = default;
			Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY& operator=(const Protocol_MSG_LOBBYETC_AUX_HAND_HISTORY_CLEAR_NUDGE_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST : public Atf::MessageProtocol
		{
			//! 441 <FIXME_COND_IF> 8 <FIXME_COND_ELSE> 8 <FIXME_COND_ELSE> 48 <FIXME_COND_ENDIF> s - locale,timezone,criteriaType <FIXME_COND_IF> ,param <FIXME_COND_ELSE> ,param <FIXME_COND_ELSE> ,numRequested,handId64 <FIXME_COND_ENDIF> ,password
			AuxHandHistoryMetadata metadata;

			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST(Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST&&);
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST& operator=(Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST(const Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST& operator=(const Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY(Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY&&);
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY& operator=(Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY(const Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLIENT_AUX_HAND_HISTORY_REQUEST_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_CLI_TOURN_STATS : public Atf::MessageProtocol
		{
			// 14 - type,tournIdOrCount
			BYTE type;
			UINT32 tournIdOrCount;	// Id is not limited

			Protocol_MSG_LOBBYETC_CLI_TOURN_STATS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_TOURN_STATS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_TOURN_STATS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_TOURN_STATS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|s] - errCode[errDescr|email]
			INT16 errCode;

			PString errDescr;

			PString email;

			Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_TOURN_STATS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_TOURN_STATS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY(Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY(const Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_TOURN_STATS_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_VERIFY_PWD : public Atf::MessageProtocol
		{
			// ss - pwd,ssn4
			PString pwd;
			PString ssn4;	//	PYR-79369

			Protocol_MSG_LOBBYETC_VERIFY_PWD();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_VERIFY_PWD&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_VERIFY_PWD; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_VERIFY_PWD"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_VERIFY_PWD(Protocol_MSG_LOBBYETC_VERIFY_PWD&&);
			Protocol_MSG_LOBBYETC_VERIFY_PWD& operator=(Protocol_MSG_LOBBYETC_VERIFY_PWD&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_VERIFY_PWD(const Protocol_MSG_LOBBYETC_VERIFY_PWD&) = default;
			Protocol_MSG_LOBBYETC_VERIFY_PWD& operator=(const Protocol_MSG_LOBBYETC_VERIFY_PWD&) = default;
#endif
#endif
		};
		struct Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_VERIFY_PWD_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_VERIFY_PWD_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY(Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY&&);
			Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY& operator=(Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY(const Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY&) = default;
			Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY& operator=(const Protocol_MSG_LOBBYETC_VERIFY_PWD_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT : public Atf::MessageProtocol
		{
			// sdds4 - notUsedStr,startDate,endDate,password,reportFormat
			PString notUsedStr;
			SrvDate startDate;
			SrvDate endDate;
			PString password;
			UINT32 reportFormat;

			Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT; }
			const char *getMsgIdString() const override { return "MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT(Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT&&);
			Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT& operator=(Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT(const Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT&) = default;
			Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT& operator=(const Protocol_MSG_LOBBY_RESPONSIBLE_GAMING_HISTORY_AUDIT&) = default;
#endif
#endif
		};

		// LobbyEtc -> RAM middle tier
		struct Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY_CONFIRM : public Atf::MessageProtocol
		{
			// 2 - errCode
			INT16 errCode;

			Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY_CONFIRM();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY_CONFIRM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY_CONFIRM; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY_CONFIRM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// PYR-77065
		// LobbyEtc->clients notifications
		struct Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF : public Atf::MessageProtocol
		{
			// 48s - sessionDurationSec,sessionWinLoss,currency
			UINT32 sessionDurationSec;
			INT64 sessionWinLoss;	// positive - win, negative - loss
			PString currency;

			Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_SE_SESSION_NOTIF; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_SE_SESSION_NOTIF"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF(Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF&&);
			Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF& operator=(Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF(const Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF&) = default;
			Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF& operator=(const Protocol_MSG_LOBBYETC_CLI_SE_SESSION_NOTIF&) = default;
#endif
#endif
		};

		// PYR-77065
		struct Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// PYR-77065
		struct Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4] - errCode[errString|intervalMin]
			INT16 errCode;

			PString errString;

			INT32 intervalMin;

			Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY(Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY(const Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_GET_SESSION_POPUP_INTERVAL_REPLY&) = default;
#endif
#endif
		};

		// PYR-77065
		struct Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL : public Atf::MessageProtocol
		{
			// 4 - intervalMin
			INT32 intervalMin;

			Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// PYR-77065
		struct Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4] - errCode[errString|intervalMin]
			INT16 errCode;

			PString errString;

			INT32 intervalMin;

			Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY(Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY(const Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_SET_SESSION_POPUP_INTERVAL_REPLY&) = default;
#endif
#endif
		};

		// PYR-78513
		struct Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA : public Atf::MessageProtocol
		{
			// empty

			Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// PYR-78513
		struct Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY : public Atf::MessageProtocol
		{
			// 2[s|t8sb] - errCode[errString|prevLoginTime,winLoss,currency,isFirstLoginSession]
			INT16 errCode;

			PString errString;

			SrvTime prevLoginTime;
			INT64 winLoss;
			PString currency;
			bool isFirstLoginSession;	// PYR-83695

			Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY(Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY(const Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_SESSION_WINLOSS_DATA_REPLY&) = default;
#endif
#endif
		};

		// PYR-82345
		struct Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN : public Atf::MessageProtocol
		{
			// ssb - appsFlyerId,mobileAppId,lat
			PString appsFlyerId;
			PString mobileAppId;
			bool lat;

			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SIGNAL_EVENT_LOGIN; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SIGNAL_EVENT_LOGIN"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN&&);
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN& operator=(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN&) = default;
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN& operator=(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN&) = default;
#endif
#endif
		};

		// PYR-82345
		struct Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errString]
			INT16 errCode;

			PString errString;

			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY&&);
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY& operator=(Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY&) = default;
			Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY& operator=(const Protocol_MSG_LOBBYETC_SIGNAL_EVENT_LOGIN_REPLY&) = default;
#endif
#endif
		};

		struct Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS : public Atf::MessageProtocol
		{
			// empty message

			Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_MY_STARS_COUNTERS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_MY_STARS_COUNTERS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4444] - errCode[errString|freeSpinCounter,instantBonusCounter,freeBetCounter,prizeGameCounter]
			INT16 errCode;

			PString errString;

			INT32 freeSpinCounter;
			INT32 instantBonusCounter;
			INT32 freeBetCounter;
			INT32 prizeGameCounter;

			Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY(Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY&&);
			Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY& operator=(Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY(const Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY& operator=(const Protocol_MSG_LOBBYETC_GET_MY_STARS_COUNTERS_REPLY&) = default;
#endif
#endif
		};
		struct Protocol_MSG_LOBBYETC_CLI_GET_ASSETS : public Atf::MessageProtocol
		{
			// 4<s> - numAssetTypes<assetTypes>
			Atf::LAtfVector< PString, 4 > assetTypes;	// sanity check

			Protocol_MSG_LOBBYETC_CLI_GET_ASSETS();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_GET_ASSETS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_GET_ASSETS; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_GET_ASSETS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_GET_ASSETS(Protocol_MSG_LOBBYETC_CLI_GET_ASSETS&&);
			Protocol_MSG_LOBBYETC_CLI_GET_ASSETS& operator=(Protocol_MSG_LOBBYETC_CLI_GET_ASSETS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_GET_ASSETS(const Protocol_MSG_LOBBYETC_CLI_GET_ASSETS&) = default;
			Protocol_MSG_LOBBYETC_CLI_GET_ASSETS& operator=(const Protocol_MSG_LOBBYETC_CLI_GET_ASSETS&) = default;
#endif
#endif
		};

	};	// end of namespace cli

	namespace geo
	{
		// client to server
		struct Protocol_MSG_LOBBYETC_CLI_NOTIF_MOBILE_VERIFIED : public Atf::MessageProtocol
		{

			Protocol_MSG_LOBBYETC_CLI_NOTIF_MOBILE_VERIFIED();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_NOTIF_MOBILE_VERIFIED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_NOTIF_MOBILE_VERIFIED; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_NOTIF_MOBILE_VERIFIED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// client to server
		struct Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY : public Atf::MessageProtocol
		{
			// 2[s|s] - errCode[errString|responseStr]
			INT16 errCode;

			PString errString;

			PString responseStr;

			Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY(Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY&&);
			Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY& operator=(Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY(const Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY&) = default;
			Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY& operator=(const Protocol_MSG_LOBBYETC_GEOCOMPLY_LOCATE_REPLY&) = default;
#endif
#endif
		};

		// client to server
		struct Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errString]
			INT16 errCode;

			PString errString;

			Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY(Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY&&);
			Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY& operator=(Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY(const Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY&) = default;
			Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY& operator=(const Protocol_MSG_LOBBYETC_CLI_REQUEST_USER_LOCAID_CONSENT_REPLY&) = default;
#endif
#endif
		};
	};	// namespace geo

	namespace starsCrm
	{
		// PYR-106825: StarsCRM to LobbyEtc
		struct Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES : public Atf::MessageProtocol
		{
			// empty

			Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// PYR-106825
		struct Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<s>] - errCode[errString|numRmBlockedCountriesStates<rmBlockedCountriesStates>]
			INT16 errCode;

			PString errString;

			Atf::LAtfVector< PString, 4 > rmBlockedCountriesStates;

			Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY; }
			const char *getMsgIdString() const override { return "MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY(Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY&&);
			Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY& operator=(Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY(const Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY&) = default;
			Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY& operator=(const Protocol_MSG_LOBBYETC_REQ_RM_BLOCKED_COUNTRIES_STATES_REPLY&) = default;
#endif
#endif
		};
	};
};

#endif
