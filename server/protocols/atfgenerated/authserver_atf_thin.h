/**
 * authserver_atf_thin.h
 *
 * This file was auto-generated from authserver_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor -thin authserver_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_AUTHSERVER_ATF_THIN_H
#define ATF_PROTOCOL_DEFFILE_AUTHSERVER_ATF_THIN_H

#include "MsgAuthPlayer.h"
#include "auth.h"


#include "ThinAtfUserDefStructs.h"

namespace Authserver
{
	class ProtocolFactory
	{
	public:
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	/*
	   IMPORTANT: All the reply messages (*_A_*) are not tested by either creator of this file or QA.
	   If client wants to use them, they must be thoroughly tested. Also server's notification messages
	   to client are not included.
	 */

	namespace cli
	{
		struct Protocol_AUTH_Q_LOGIN_RSA
		{
			// ss - rsaPin,rsaCode
			PString rsaPin;
			PString rsaCode;

			Protocol_AUTH_Q_LOGIN_RSA();
			void clear();
			bool equals(const Protocol_AUTH_Q_LOGIN_RSA&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_LOGIN_RSA; }
			static const char *getMsgIdString() { return "AUTH_Q_LOGIN_RSA"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_Q_LOGIN_RSA(Protocol_AUTH_Q_LOGIN_RSA&&);
			Protocol_AUTH_Q_LOGIN_RSA& operator=(Protocol_AUTH_Q_LOGIN_RSA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_Q_LOGIN_RSA(const Protocol_AUTH_Q_LOGIN_RSA&) = default;
			Protocol_AUTH_Q_LOGIN_RSA& operator=(const Protocol_AUTH_Q_LOGIN_RSA&) = default;
#endif
#endif
		};
		struct Protocol_AUTH_A_LOGIN_RSA
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_LOGIN_RSA();
			void clear();
			bool equals(const Protocol_AUTH_A_LOGIN_RSA&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_LOGIN_RSA; }
			static const char *getMsgIdString() { return "AUTH_A_LOGIN_RSA"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_LOGIN_RSA(Protocol_AUTH_A_LOGIN_RSA&&);
			Protocol_AUTH_A_LOGIN_RSA& operator=(Protocol_AUTH_A_LOGIN_RSA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_LOGIN_RSA(const Protocol_AUTH_A_LOGIN_RSA&) = default;
			Protocol_AUTH_A_LOGIN_RSA& operator=(const Protocol_AUTH_A_LOGIN_RSA&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_LOGIN_OTP
		{
			// ss - otp,pin
			PString otp;
			PString pin;

			Protocol_AUTH_Q_LOGIN_OTP();
			void clear();
			bool equals(const Protocol_AUTH_Q_LOGIN_OTP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_LOGIN_OTP; }
			static const char *getMsgIdString() { return "AUTH_Q_LOGIN_OTP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_Q_LOGIN_OTP(Protocol_AUTH_Q_LOGIN_OTP&&);
			Protocol_AUTH_Q_LOGIN_OTP& operator=(Protocol_AUTH_Q_LOGIN_OTP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_Q_LOGIN_OTP(const Protocol_AUTH_Q_LOGIN_OTP&) = default;
			Protocol_AUTH_Q_LOGIN_OTP& operator=(const Protocol_AUTH_Q_LOGIN_OTP&) = default;
#endif
#endif
		};
		struct Protocol_AUTH_A_LOGIN_OTP
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_LOGIN_OTP();
			void clear();
			bool equals(const Protocol_AUTH_A_LOGIN_OTP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_LOGIN_OTP; }
			static const char *getMsgIdString() { return "AUTH_A_LOGIN_OTP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_LOGIN_OTP(Protocol_AUTH_A_LOGIN_OTP&&);
			Protocol_AUTH_A_LOGIN_OTP& operator=(Protocol_AUTH_A_LOGIN_OTP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_LOGIN_OTP(const Protocol_AUTH_A_LOGIN_OTP&) = default;
			Protocol_AUTH_A_LOGIN_OTP& operator=(const Protocol_AUTH_A_LOGIN_OTP&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_LOGIN_LTD
		{

			Protocol_AUTH_Q_LOGIN_LTD();
			void clear();
			bool equals(const Protocol_AUTH_Q_LOGIN_LTD&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_LOGIN_LTD; }
			static const char *getMsgIdString() { return "AUTH_Q_LOGIN_LTD"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_AUTH_A_LOGIN_LTD
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_LOGIN_LTD();
			void clear();
			bool equals(const Protocol_AUTH_A_LOGIN_LTD&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_LOGIN_LTD; }
			static const char *getMsgIdString() { return "AUTH_A_LOGIN_LTD"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_LOGIN_LTD(Protocol_AUTH_A_LOGIN_LTD&&);
			Protocol_AUTH_A_LOGIN_LTD& operator=(Protocol_AUTH_A_LOGIN_LTD&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_LOGIN_LTD(const Protocol_AUTH_A_LOGIN_LTD&) = default;
			Protocol_AUTH_A_LOGIN_LTD& operator=(const Protocol_AUTH_A_LOGIN_LTD&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_U_LOGOUT_NOW
		{

			Protocol_AUTH_U_LOGOUT_NOW();
			void clear();
			bool equals(const Protocol_AUTH_U_LOGOUT_NOW&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_U_LOGOUT_NOW; }
			static const char *getMsgIdString() { return "AUTH_U_LOGOUT_NOW"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		// no reply

		// NOT SENT BY CLIENT
		struct Protocol_AUTH_Q_GET_LOGIN_METHOD
		{

			Protocol_AUTH_Q_GET_LOGIN_METHOD();
			void clear();
			bool equals(const Protocol_AUTH_Q_GET_LOGIN_METHOD&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_GET_LOGIN_METHOD; }
			static const char *getMsgIdString() { return "AUTH_Q_GET_LOGIN_METHOD"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_AUTH_A_GET_LOGIN_METHOD
		{
			// 2[s|44] - errCode[errDescr|loginMethod,loginPriv]
			INT16 errCode;

			PString errDescr;

			UINT32 loginMethod;
			UINT32 loginPriv;

			Protocol_AUTH_A_GET_LOGIN_METHOD();
			void clear();
			bool equals(const Protocol_AUTH_A_GET_LOGIN_METHOD&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_GET_LOGIN_METHOD; }
			static const char *getMsgIdString() { return "AUTH_A_GET_LOGIN_METHOD"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_GET_LOGIN_METHOD(Protocol_AUTH_A_GET_LOGIN_METHOD&&);
			Protocol_AUTH_A_GET_LOGIN_METHOD& operator=(Protocol_AUTH_A_GET_LOGIN_METHOD&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_GET_LOGIN_METHOD(const Protocol_AUTH_A_GET_LOGIN_METHOD&) = default;
			Protocol_AUTH_A_GET_LOGIN_METHOD& operator=(const Protocol_AUTH_A_GET_LOGIN_METHOD&) = default;
#endif
#endif
		};

		// no longer sent by native client
		struct Protocol_AUTH_Q_SET_LOGIN_METHOD
		{
			// 4ssss - loginMethod,password,sid,rsaPin,rsaCode
			UINT32 loginMethod;
			PString password;
			PString sid;
			PString rsaPin;
			PString rsaCode;

			Protocol_AUTH_Q_SET_LOGIN_METHOD();
			void clear();
			bool equals(const Protocol_AUTH_Q_SET_LOGIN_METHOD&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_SET_LOGIN_METHOD; }
			static const char *getMsgIdString() { return "AUTH_Q_SET_LOGIN_METHOD"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_Q_SET_LOGIN_METHOD(Protocol_AUTH_Q_SET_LOGIN_METHOD&&);
			Protocol_AUTH_Q_SET_LOGIN_METHOD& operator=(Protocol_AUTH_Q_SET_LOGIN_METHOD&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_Q_SET_LOGIN_METHOD(const Protocol_AUTH_Q_SET_LOGIN_METHOD&) = default;
			Protocol_AUTH_Q_SET_LOGIN_METHOD& operator=(const Protocol_AUTH_Q_SET_LOGIN_METHOD&) = default;
#endif
#endif
		};
		struct Protocol_AUTH_A_SET_LOGIN_METHOD
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_SET_LOGIN_METHOD();
			void clear();
			bool equals(const Protocol_AUTH_A_SET_LOGIN_METHOD&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_SET_LOGIN_METHOD; }
			static const char *getMsgIdString() { return "AUTH_A_SET_LOGIN_METHOD"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_SET_LOGIN_METHOD(Protocol_AUTH_A_SET_LOGIN_METHOD&&);
			Protocol_AUTH_A_SET_LOGIN_METHOD& operator=(Protocol_AUTH_A_SET_LOGIN_METHOD&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_SET_LOGIN_METHOD(const Protocol_AUTH_A_SET_LOGIN_METHOD&) = default;
			Protocol_AUTH_A_SET_LOGIN_METHOD& operator=(const Protocol_AUTH_A_SET_LOGIN_METHOD&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_SET_LOGIN_METHOD_EX
		{
			// 4ssss - loginMethod,password,sid,rsaPin,rsaCode
			UINT32 loginMethod;
			PString password;	// hashed pwd
			PString sid;
			PString rsaPin;
			PString rsaCode;

			Protocol_AUTH_Q_SET_LOGIN_METHOD_EX();
			void clear();
			bool equals(const Protocol_AUTH_Q_SET_LOGIN_METHOD_EX&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_SET_LOGIN_METHOD_EX; }
			static const char *getMsgIdString() { return "AUTH_Q_SET_LOGIN_METHOD_EX"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_Q_SET_LOGIN_METHOD_EX(Protocol_AUTH_Q_SET_LOGIN_METHOD_EX&&);
			Protocol_AUTH_Q_SET_LOGIN_METHOD_EX& operator=(Protocol_AUTH_Q_SET_LOGIN_METHOD_EX&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_Q_SET_LOGIN_METHOD_EX(const Protocol_AUTH_Q_SET_LOGIN_METHOD_EX&) = default;
			Protocol_AUTH_Q_SET_LOGIN_METHOD_EX& operator=(const Protocol_AUTH_Q_SET_LOGIN_METHOD_EX&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_SET_NEWINSTALL_VALIDATION
		{
			// b - enable
			bool enable;

			Protocol_AUTH_Q_SET_NEWINSTALL_VALIDATION();
			void clear();
			bool equals(const Protocol_AUTH_Q_SET_NEWINSTALL_VALIDATION&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_SET_NEWINSTALL_VALIDATION; }
			static const char *getMsgIdString() { return "AUTH_Q_SET_NEWINSTALL_VALIDATION"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION();
			void clear();
			bool equals(const Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_SET_NEWINSTALL_VALIDATION; }
			static const char *getMsgIdString() { return "AUTH_A_SET_NEWINSTALL_VALIDATION"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION(Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION&&);
			Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION& operator=(Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION(const Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION&) = default;
			Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION& operator=(const Protocol_AUTH_A_SET_NEWINSTALL_VALIDATION&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_GENERATE_PSP
		{

			Protocol_AUTH_Q_GENERATE_PSP();
			void clear();
			bool equals(const Protocol_AUTH_Q_GENERATE_PSP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_GENERATE_PSP; }
			static const char *getMsgIdString() { return "AUTH_Q_GENERATE_PSP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_AUTH_A_GENERATE_PSP
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_GENERATE_PSP();
			void clear();
			bool equals(const Protocol_AUTH_A_GENERATE_PSP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_GENERATE_PSP; }
			static const char *getMsgIdString() { return "AUTH_A_GENERATE_PSP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_GENERATE_PSP(Protocol_AUTH_A_GENERATE_PSP&&);
			Protocol_AUTH_A_GENERATE_PSP& operator=(Protocol_AUTH_A_GENERATE_PSP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_GENERATE_PSP(const Protocol_AUTH_A_GENERATE_PSP&) = default;
			Protocol_AUTH_A_GENERATE_PSP& operator=(const Protocol_AUTH_A_GENERATE_PSP&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_SET_PSP
		{
			// s - newPsp
			PString newPsp;

			Protocol_AUTH_Q_SET_PSP();
			void clear();
			bool equals(const Protocol_AUTH_Q_SET_PSP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_SET_PSP; }
			static const char *getMsgIdString() { return "AUTH_Q_SET_PSP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_Q_SET_PSP(Protocol_AUTH_Q_SET_PSP&&);
			Protocol_AUTH_Q_SET_PSP& operator=(Protocol_AUTH_Q_SET_PSP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_Q_SET_PSP(const Protocol_AUTH_Q_SET_PSP&) = default;
			Protocol_AUTH_Q_SET_PSP& operator=(const Protocol_AUTH_Q_SET_PSP&) = default;
#endif
#endif
		};
		struct Protocol_AUTH_A_SET_PSP
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_SET_PSP();
			void clear();
			bool equals(const Protocol_AUTH_A_SET_PSP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_SET_PSP; }
			static const char *getMsgIdString() { return "AUTH_A_SET_PSP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_SET_PSP(Protocol_AUTH_A_SET_PSP&&);
			Protocol_AUTH_A_SET_PSP& operator=(Protocol_AUTH_A_SET_PSP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_SET_PSP(const Protocol_AUTH_A_SET_PSP&) = default;
			Protocol_AUTH_A_SET_PSP& operator=(const Protocol_AUTH_A_SET_PSP&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_CHANGE_PSP
		{
			// ss - oldPsp,newPsp
			PString oldPsp;
			PString newPsp;

			Protocol_AUTH_Q_CHANGE_PSP();
			void clear();
			bool equals(const Protocol_AUTH_Q_CHANGE_PSP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_CHANGE_PSP; }
			static const char *getMsgIdString() { return "AUTH_Q_CHANGE_PSP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_Q_CHANGE_PSP(Protocol_AUTH_Q_CHANGE_PSP&&);
			Protocol_AUTH_Q_CHANGE_PSP& operator=(Protocol_AUTH_Q_CHANGE_PSP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_Q_CHANGE_PSP(const Protocol_AUTH_Q_CHANGE_PSP&) = default;
			Protocol_AUTH_Q_CHANGE_PSP& operator=(const Protocol_AUTH_Q_CHANGE_PSP&) = default;
#endif
#endif
		};
		struct Protocol_AUTH_A_CHANGE_PSP
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_CHANGE_PSP();
			void clear();
			bool equals(const Protocol_AUTH_A_CHANGE_PSP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_CHANGE_PSP; }
			static const char *getMsgIdString() { return "AUTH_A_CHANGE_PSP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_CHANGE_PSP(Protocol_AUTH_A_CHANGE_PSP&&);
			Protocol_AUTH_A_CHANGE_PSP& operator=(Protocol_AUTH_A_CHANGE_PSP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_CHANGE_PSP(const Protocol_AUTH_A_CHANGE_PSP&) = default;
			Protocol_AUTH_A_CHANGE_PSP& operator=(const Protocol_AUTH_A_CHANGE_PSP&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_ACTIVATE_RSA
		{
			// 4ss - serialNumber,rsaPin,rsaCode
			UINT32 serialNumber;	// no limit
			PString rsaPin;
			PString rsaCode;

			Protocol_AUTH_Q_ACTIVATE_RSA();
			void clear();
			bool equals(const Protocol_AUTH_Q_ACTIVATE_RSA&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_ACTIVATE_RSA; }
			static const char *getMsgIdString() { return "AUTH_Q_ACTIVATE_RSA"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_Q_ACTIVATE_RSA(Protocol_AUTH_Q_ACTIVATE_RSA&&);
			Protocol_AUTH_Q_ACTIVATE_RSA& operator=(Protocol_AUTH_Q_ACTIVATE_RSA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_Q_ACTIVATE_RSA(const Protocol_AUTH_Q_ACTIVATE_RSA&) = default;
			Protocol_AUTH_Q_ACTIVATE_RSA& operator=(const Protocol_AUTH_Q_ACTIVATE_RSA&) = default;
#endif
#endif
		};
		struct Protocol_AUTH_A_ACTIVATE_RSA
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_ACTIVATE_RSA();
			void clear();
			bool equals(const Protocol_AUTH_A_ACTIVATE_RSA&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_ACTIVATE_RSA; }
			static const char *getMsgIdString() { return "AUTH_A_ACTIVATE_RSA"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_ACTIVATE_RSA(Protocol_AUTH_A_ACTIVATE_RSA&&);
			Protocol_AUTH_A_ACTIVATE_RSA& operator=(Protocol_AUTH_A_ACTIVATE_RSA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_ACTIVATE_RSA(const Protocol_AUTH_A_ACTIVATE_RSA&) = default;
			Protocol_AUTH_A_ACTIVATE_RSA& operator=(const Protocol_AUTH_A_ACTIVATE_RSA&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_CHECK_RSA
		{
			// 4 - serialNumber
			UINT32 serialNumber;	// no limit

			Protocol_AUTH_Q_CHECK_RSA();
			void clear();
			bool equals(const Protocol_AUTH_Q_CHECK_RSA&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_CHECK_RSA; }
			static const char *getMsgIdString() { return "AUTH_Q_CHECK_RSA"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_AUTH_A_CHECK_RSA
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_CHECK_RSA();
			void clear();
			bool equals(const Protocol_AUTH_A_CHECK_RSA&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_CHECK_RSA; }
			static const char *getMsgIdString() { return "AUTH_A_CHECK_RSA"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_CHECK_RSA(Protocol_AUTH_A_CHECK_RSA&&);
			Protocol_AUTH_A_CHECK_RSA& operator=(Protocol_AUTH_A_CHECK_RSA&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_CHECK_RSA(const Protocol_AUTH_A_CHECK_RSA&) = default;
			Protocol_AUTH_A_CHECK_RSA& operator=(const Protocol_AUTH_A_CHECK_RSA&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_GENERATE_OTP
		{

			Protocol_AUTH_Q_GENERATE_OTP();
			void clear();
			bool equals(const Protocol_AUTH_Q_GENERATE_OTP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_GENERATE_OTP; }
			static const char *getMsgIdString() { return "AUTH_Q_GENERATE_OTP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_AUTH_A_GENERATE_OTP
		{
			// 2[s|s] - errCode[errDescr|mobileNum]
			INT16 errCode;

			PString errDescr;

			PString mobileNum;

			Protocol_AUTH_A_GENERATE_OTP();
			void clear();
			bool equals(const Protocol_AUTH_A_GENERATE_OTP&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_GENERATE_OTP; }
			static const char *getMsgIdString() { return "AUTH_A_GENERATE_OTP"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_GENERATE_OTP(Protocol_AUTH_A_GENERATE_OTP&&);
			Protocol_AUTH_A_GENERATE_OTP& operator=(Protocol_AUTH_A_GENERATE_OTP&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_GENERATE_OTP(const Protocol_AUTH_A_GENERATE_OTP&) = default;
			Protocol_AUTH_A_GENERATE_OTP& operator=(const Protocol_AUTH_A_GENERATE_OTP&) = default;
#endif
#endif
		};

		struct Protocol_AUTH_Q_LOGIN_EMAIL_NOTIFICATION
		{
			// b - setOrRemove
			bool setOrRemove;

			Protocol_AUTH_Q_LOGIN_EMAIL_NOTIFICATION();
			void clear();
			bool equals(const Protocol_AUTH_Q_LOGIN_EMAIL_NOTIFICATION&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_Q_LOGIN_EMAIL_NOTIFICATION; }
			static const char *getMsgIdString() { return "AUTH_Q_LOGIN_EMAIL_NOTIFICATION"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION();
			void clear();
			bool equals(const Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return AUTH_A_LOGIN_EMAIL_NOTIFICATION; }
			static const char *getMsgIdString() { return "AUTH_A_LOGIN_EMAIL_NOTIFICATION"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION(Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION&&);
			Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION& operator=(Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION(const Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION&) = default;
			Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION& operator=(const Protocol_AUTH_A_LOGIN_EMAIL_NOTIFICATION&) = default;
#endif
#endif
		};
	};
};

#endif
