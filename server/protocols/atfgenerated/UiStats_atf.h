/**
 * UiStats_atf.h
 *
 * This file was auto-generated from UiStats_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: UiStats_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_UISTATS_ATF_H
#define ATF_PROTOCOL_DEFFILE_UISTATS_ATF_H

#include "pplib.h"
#include "clientplatforms.h"
#include "sites.h"
#include "dali/protocol.h"
#include "brands.h"
#include "uistats.h"


#include "UserDefStructs.h"

namespace UiStats
{
	class ProtocolFactory
	{
	public:
		static Atf::MessageProtocol* createMessageProtocolObject(const char *_nameSpace, UINT32 _msgId);
		static bool validateProtocolMessageFromJSONString(const char *_nameSpace, UINT32 _msgId, const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	struct DeviceToken
	{
		// M(v) - M(mobileToken)
		PBlock mobileToken;

		DeviceToken();
		void clear();
		bool equals(const DeviceToken&) const;
		const char *toTraceString(PString& _str) const;
		const char *toXmlString(const char *_element, PString& _str) const;
		bool fromXmlString(const PString& _str);
		void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
		void parseMsg(CommMsgParser& _parser);
		const char *toJSONString(PString& _str) const;
		void fromJSONString(const PString& _str);
		static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
	};

	// processClientRequest
	namespace cli
	{
		// This message is obsolete and supported only by legacy client
		struct Protocol_MSG_UISTATS_SAVE_USER_STATS : public Atf::MessageProtocol
		{
			// s - eventData
			PString eventData;

			Protocol_MSG_UISTATS_SAVE_USER_STATS();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_SAVE_USER_STATS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_SAVE_USER_STATS; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_SAVE_USER_STATS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_SAVE_USER_STATS_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_UISTATS_SAVE_USER_STATS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_SAVE_USER_STATS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_SAVE_USER_STATS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_SAVE_USER_STATS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
	};

	// processMobileAuthRequest
	namespace cli_mobile
	{
		// This message is obsolete
		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP : public Atf::MessageProtocol
		{
			// 4M(v)444 - deviceId,M(mobileToken),oldDeviceId,notificationType,deviceLocale
			UINT32 deviceId;	// Represents id, no need to limit
			DeviceToken deviceToken;
			UINT32 oldDeviceId;	// Represents id, no need to limit
			UINT32 notificationType;	// Represents mask enum on mobile client. Currently uses 3 bits
			UINT32 deviceLocale;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_REPLY; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2 : public Atf::MessageProtocol
		{
			// 4M(v)4444 - deviceId,M(mobileToken),oldDeviceId,notificationType,deviceLocale,platformId
			UINT32 deviceId;	// Represents id, no need to limit
			DeviceToken deviceToken;
			UINT32 oldDeviceId;	// Represents id, no need to limit
			UINT32 notificationType;	// Represents mask enum on mobile client. Currently uses 3 bits
			UINT32 deviceLocale;
			UINT32 platformId;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_OWNERSHIP_2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// This message is obsolete
		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED : public Atf::MessageProtocol
		{
			// 44 - deviceId,platformId
			UINT32 deviceId;	// Represents id, no need to limit
			UINT32 platformId;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED_REPLY; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_LAST_ACCESSED_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_MOBILE_RATE_ME : public Atf::MessageProtocol
		{
			// 4 - rating
			INT32 rating;	// Confirmed with mobile client team

			Protocol_MSG_UISTATS_MOBILE_RATE_ME();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_RATE_ME&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_RATE_ME; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_RATE_ME"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_MOBILE_RATE_ME_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_UISTATS_MOBILE_RATE_ME_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_RATE_ME_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_RATE_ME_REPLY; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_RATE_ME_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
	};

	// processMobileUnauthRequest
	namespace cli_mobileUnauth
	{
		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_REGISTRATION : public Atf::MessageProtocol
		{
			// 4M(v)s44444s - deviceId,M(mobileToken),installId,platformId,siteId,notificationType,deviceLocale,brandId,appKey
			UINT32 deviceId;	// Represents id, no need to limit
			DeviceToken deviceToken;
			PString installId;
			UINT32 platformId;
			UINT32 siteId;
			UINT32 notificationType;	// Represents mask enum on mobile client. Currently uses 3 bits
			UINT32 deviceLocale;
			UINT32 brandId;
			PString appKey;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_REGISTRATION();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_REGISTRATION&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_REGISTRATION; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_REGISTRATION"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_UISTATS_MOBILE_DEVICE_REGISTRATION_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4] - errCode[errDescr|deviceId]
			INT16 errCode;

			PString errDescr;

			UINT32 deviceId;

			Protocol_MSG_UISTATS_MOBILE_DEVICE_REGISTRATION_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_UISTATS_MOBILE_DEVICE_REGISTRATION_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_UISTATS_MOBILE_DEVICE_REGISTRATION_REPLY; }
			const char *getMsgIdString() const override { return "MSG_UISTATS_MOBILE_DEVICE_REGISTRATION_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
	};
};

#endif
