/**
 * VipStore_atf.h
 *
 * This file was auto-generated from VipStore_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: VipStore_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_VIPSTORE_ATF_H
#define ATF_PROTOCOL_DEFFILE_VIPSTORE_ATF_H

#include "VipStoreCommon.h"
#include "cashier.h"
#include "FppStoreOrder.h"


#include "UserDefStructs.h"

namespace VipStore
{
	class ProtocolFactory
	{
	public:
		static Atf::MessageProtocol* createMessageProtocolObject(const char *_nameSpace, UINT32 _msgId);
		static bool validateProtocolMessageFromJSONString(const char *_nameSpace, UINT32 _msgId, const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	namespace cli
	{
		struct VipStoreAlternateClientAddress
		{
			// 4ssssssssss - addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode
			UINT32 addrId;
			PString userId;
			PString fullName;
			PString addr1;
			PString addr2;
			PString city;
			PString state;
			PString country;
			PString code;
			PString phone;
			PString fiscalCode;

			VipStoreAlternateClientAddress();
			void clear();
			bool equals(const VipStoreAlternateClientAddress&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct FppStoreOrder
		{
			// 44ssssst4<s>4ss4444ssssssssss4 - orderId,price,userId,itemDescr,status,trackingId,comment,when,numSpecs<specs>,itemId,shipper,trackingUrl,itemQuantity,cartId,fulfillmentId,addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode,flags
			UINT32 orderId;
			UINT32 price;
			PString userId;
			PString itemDescr;
			PString status;
			PString trackingId;
			PString comment;
			CommSrvTime when;
			Atf::LAtfVector< PString, 4 > specs;
			UINT32 itemId;
			PString shipper;
			PString trackingUrl;
			UINT32 itemQuantity;
			UINT32 cartId;
			UINT32 fulfillmentId;
			VipStoreAlternateClientAddress altAddr;
			UINT32 flags;

			FppStoreOrder();
			void clear();
			bool equals(const FppStoreOrder&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct OrderHistoryDigestData
		{
			// 44 - itemId,numPurchased
			UINT32 itemId;
			UINT32 numPurchased;

			OrderHistoryDigestData();
			void clear();
			bool equals(const OrderHistoryDigestData&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY2 : public Atf::MessageProtocol
		{
			// s - notUsedStr
			PString notUsedStr;	// used to be userid

			Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY2();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_ORDER_HISTORY2; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_ORDER_HISTORY2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY2_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<44ssssst4<s>4ss4444ssssssssss4>4<44ssssst4<s>4ss4444ssssssssss4>] - errCode[errStr|numOrders<orderId,price,userId,itemDescr,status,trackingId,comment,when,numSpecs<specs>,itemId,shipper,trackingUrl,itemQuantity,cartId,fulfillmentId,addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode,flags>,numPreMidgrationOrders<orderId,price,userId,itemDescr,status,trackingId,comment,when,numSpecs<specs>,itemId,shipper,trackingUrl,itemQuantity,cartId,fulfillmentId,addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode,flags>]
			INT16 errCode;

			PString errStr;

			Atf::LAtfVector< FppStoreOrder, 4 > orders;
			Atf::LAtfVector< FppStoreOrder, 4 > preMidgrationOrders;

			Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_ORDER_HISTORY2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_ORDER_HISTORY2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST : public Atf::MessageProtocol
		{
			// s - userid
			PString userid;

			Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<44>] - errCode[errStr|numData<itemId,numPurchased>]
			INT16 errCode;

			PString errStr;

			Atf::LAtfVector< OrderHistoryDigestData, 4 > data;

			Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_ORDER_HISTORY_DIGEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_PREPURCHASE_ITEM : public Atf::MessageProtocol
		{
			// s4s44ssssssssss - notUsedStr,itemId,couponCode,itemQuantity,addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode
			PString notUsedStr;	// used to be userid
			UINT32 itemId;
			PString couponCode;	// client does not limit the length correctly (should be 20 max)
			UINT32 itemQuantity;
			VipStoreAlternateClientAddress alternateAddress;

			Protocol_MSG_VIPSTORE_PREPURCHASE_ITEM();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_PREPURCHASE_ITEM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_PREPURCHASE_ITEM; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_PREPURCHASE_ITEM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_PREPURCHASE_ITEM_REPLY : public Atf::MessageProtocol
		{
			// 2[s|444] - errCode[errStr|itemCost,couponDiscount,refund]
			INT16 errCode;

			PString errStr;

			UINT32 itemCost;
			UINT32 couponDiscount;
			UINT32 refund;	// not sure what this should be called?

			Protocol_MSG_VIPSTORE_PREPURCHASE_ITEM_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_PREPURCHASE_ITEM_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_PREPURCHASE_ITEM_REPLY; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_PREPURCHASE_ITEM_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_PURCHASE_ITEM : public Atf::MessageProtocol
		{
			// s44<s>ss44ssssssssss - parsedUserId,itemId,numSpecs<specs>,userPhone,couponCode,itemQuantity,addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode
			PString parsedUserId;
			UINT32 itemId;
			Atf::LAtfVector< PString, 4 > specs;
			PString userPhone;
			PString couponCode;	// client does not limit the length correctly (should be 20 max)
			UINT32 itemQuantity;
			VipStoreAlternateClientAddress alternateAddress;

			Protocol_MSG_VIPSTORE_PURCHASE_ITEM();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_PURCHASE_ITEM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_PURCHASE_ITEM; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_PURCHASE_ITEM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_PURCHASE_ITEM_REPLY : public Atf::MessageProtocol
		{
			// 2[s|84444b] - errCode[errStr|fppBalance,totalCost,discount,couponRemainder,giftCardSpecialType,isInstantBonus]
			INT16 errCode;

			PString errStr;

			UINT64 fppBalance;
			UINT32 totalCost;
			UINT32 discount;
			UINT32 couponRemainder;
			UINT32 giftCardSpecialType;
			bool isInstantBonus;

			Protocol_MSG_VIPSTORE_PURCHASE_ITEM_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_PURCHASE_ITEM_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_PURCHASE_ITEM_REPLY; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_PURCHASE_ITEM_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct InvItemStockCli2
		{
			// M(b4b4<s>) - M(available,stockCount,unlimitedStock,numSpecs<specs>)
			bool available;
			INT32 stockCount;
			bool unlimitedStock;
			Atf::LAtfVector< PString, 4 > specs;

			InvItemStockCli2();
			void clear();
			bool equals(const InvItemStockCli2&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_INV_GET_ITEM_STOCK2 : public Atf::MessageProtocol
		{
			// 44s - itemId,specialType,unusedCouponCode
			UINT32 itemId;
			UINT32 specialType;
			PString unusedCouponCode;	// this string is not used by server any more but current client still sends it

			Protocol_MSG_VIPSTORE_INV_GET_ITEM_STOCK2();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_INV_GET_ITEM_STOCK2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_INV_GET_ITEM_STOCK2; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_INV_GET_ITEM_STOCK2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_INV_GET_ITEM_STOCK2_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4<M(b4b4<s>)>] - errCode[errStr|numStocks<M(available,stockCount,unlimitedStock,numSpecs<specs>)>]
			INT16 errCode;

			PString errStr;

			Atf::LAtfVector< InvItemStockCli2, 4 > stocks;

			Protocol_MSG_VIPSTORE_INV_GET_ITEM_STOCK2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_INV_GET_ITEM_STOCK2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_INV_GET_ITEM_STOCK2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_INV_GET_ITEM_STOCK2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_USER_CANCEL_ORDER : public Atf::MessageProtocol
		{
			// s4 - parsedUserId,orderId
			PString parsedUserId;
			UINT32 orderId;

			Protocol_MSG_VIPSTORE_USER_CANCEL_ORDER();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_CANCEL_ORDER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_CANCEL_ORDER; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_CANCEL_ORDER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// this may not be correct
		struct Protocol_MSG_VIPSTORE_USER_CANCEL_ORDER_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4] - errCode[errStr|userIntId]
			INT16 errCode;

			PString errStr;

			UINT32 userIntId;

			Protocol_MSG_VIPSTORE_USER_CANCEL_ORDER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_CANCEL_ORDER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_CANCEL_ORDER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_CANCEL_ORDER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_VIPSTORE_USER_CANCEL_ORDERS : public Atf::MessageProtocol
		{
			// s4<4> - parsedUserId,numOrderIds<orderIds>
			PString parsedUserId;
			Atf::LAtfVector< UINT32, 4 > orderIds;

			Protocol_MSG_VIPSTORE_USER_CANCEL_ORDERS();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_CANCEL_ORDERS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_CANCEL_ORDERS; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_CANCEL_ORDERS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// this may not be correct
		struct Protocol_MSG_VIPSTORE_USER_CANCEL_ORDERS_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4] - errCode[errStr|userIntId]
			INT16 errCode;

			PString errStr;

			UINT32 userIntId;

			Protocol_MSG_VIPSTORE_USER_CANCEL_ORDERS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_VIPSTORE_USER_CANCEL_ORDERS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_VIPSTORE_USER_CANCEL_ORDERS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_VIPSTORE_USER_CANCEL_ORDERS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES : public Atf::MessageProtocol
		{

			Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES();
			void clear() override;
			bool equals(const Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return VIPSTORE_GET_USER_ALT_ADDRESSES; }
			const char *getMsgIdString() const override { return "VIPSTORE_GET_USER_ALT_ADDRESSES"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES_REPLY : public Atf::MessageProtocol
		{
			// 2[s|44<4ssssssssss>] - errCode[errStr|maxSuggestedAltAddrLimit,numAltAddresses<addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode>]
			INT16 errCode;

			PString errStr;

			UINT32 maxSuggestedAltAddrLimit;
			Atf::LAtfVector< VipStoreAlternateClientAddress, 4 > altAddresses;

			Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES_REPLY();
			void clear() override;
			bool equals(const Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return VIPSTORE_GET_USER_ALT_ADDRESSES_REPLY; }
			const char *getMsgIdString() const override { return "VIPSTORE_GET_USER_ALT_ADDRESSES_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES2 : public Atf::MessageProtocol
		{
			// s - unusedStr
			PString unusedStr;	// this string is not used by server any more but current client still sends it

			Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES2();
			void clear() override;
			bool equals(const Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return VIPSTORE_GET_USER_ALT_ADDRESSES2; }
			const char *getMsgIdString() const override { return "VIPSTORE_GET_USER_ALT_ADDRESSES2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES2_REPLY : public Atf::MessageProtocol
		{
			// 2[s|44<4ssssssssss>] - errCode[errStr|maxSuggestedAltAddrLimit,numAltAddresses<addrId,userId,fullName,addr1,addr2,city,state,country,code,phone,fiscalCode>]
			INT16 errCode;

			PString errStr;

			UINT32 maxSuggestedAltAddrLimit;
			Atf::LAtfVector< VipStoreAlternateClientAddress, 4 > altAddresses;

			Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES2_REPLY();
			void clear() override;
			bool equals(const Protocol_VIPSTORE_GET_USER_ALT_ADDRESSES2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return VIPSTORE_GET_USER_ALT_ADDRESSES2_REPLY; }
			const char *getMsgIdString() const override { return "VIPSTORE_GET_USER_ALT_ADDRESSES2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_VIPSTORE_OBSOLETE_USER_ALT_ADDRESS : public Atf::MessageProtocol
		{
			// 4 - addrId
			UINT32 addrId;

			Protocol_VIPSTORE_OBSOLETE_USER_ALT_ADDRESS();
			void clear() override;
			bool equals(const Protocol_VIPSTORE_OBSOLETE_USER_ALT_ADDRESS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return VIPSTORE_OBSOLETE_USER_ALT_ADDRESS; }
			const char *getMsgIdString() const override { return "VIPSTORE_OBSOLETE_USER_ALT_ADDRESS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_VIPSTORE_OBSOLETE_USER_ALT_ADDRESS_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errStr]
			INT16 errCode;

			PString errStr;

			Protocol_VIPSTORE_OBSOLETE_USER_ALT_ADDRESS_REPLY();
			void clear() override;
			bool equals(const Protocol_VIPSTORE_OBSOLETE_USER_ALT_ADDRESS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return VIPSTORE_OBSOLETE_USER_ALT_ADDRESS_REPLY; }
			const char *getMsgIdString() const override { return "VIPSTORE_OBSOLETE_USER_ALT_ADDRESS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
	};
};

#endif
