/**
 * etcdbm_atf_thin.h
 *
 * This file was auto-generated from etcdbm_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor -thin etcdbm_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_ETCDBM_ATF_THIN_H
#define ATF_PROTOCOL_DEFFILE_ETCDBM_ATF_THIN_H

// ===========================================================
// Copyright (C) 2018 Stars Technologies Services  All rights reserved.
// ===========================================================

#include "etc/etcdbm.h"


#include "ThinAtfUserDefStructs.h"

namespace EtcDbmATF
{
	class ProtocolFactory
	{
	public:
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	struct UserActivity
	{
		// M(84t41144244824s4s) - M(gameId,userIntId,eventTime,gameCategory,handType,limit,minPlayers,maxPlayers,playersPerTable,loBet,hiBet,buyIn,speed,tournVariant,strRef,flags,currency)
		UINT64 gameId;	// all
		UINT32 userIntId;	// all
		SrvTime eventTime;	// all
		UINT32 gameCategory;	// all
		BYTE handType;	// all
		BYTE limit;	// all
		UINT32 minPlayers;	// SNG
		UINT32 maxPlayers;	// MTT, SAG, SNG
		UINT16 playersPerTable;	// all
		UINT32 loBet;	// all, low bet for stud etc, small blind for holdem, omaha etc
		UINT32 hiBet;	// all, high bet for stud etc, big blind for holdem, omaha etc
		UINT64 buyIn;	// MTT, SAG, SNG
		UINT16 speed;	// MTT, SAG, SNG
		UINT32 tournVariant;	// MTT, SAG, SNG
		PString strRef;	// MTT, SAG, SNG
		UINT32 flags;	// all, see enum  ActivityFlagTypes in personalization.h
		PString currency;	// all

		UserActivity();
		void clear();
		bool equals(const UserActivity&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		UserActivity(UserActivity&&);
		UserActivity& operator=(UserActivity&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		UserActivity(const UserActivity&) = default;
		UserActivity& operator=(const UserActivity&) = default;
#endif
#endif
	};

	struct Protocol_ETCDBM_Q_GET_USER_ACTIVITY
	{
		// 4 - userIntId
		UINT32 userIntId;

		Protocol_ETCDBM_Q_GET_USER_ACTIVITY();
		void clear();
		bool equals(const Protocol_ETCDBM_Q_GET_USER_ACTIVITY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return ETCDBM_Q_GET_USER_ACTIVITY; }
		static const char *getMsgIdString() { return "ETCDBM_Q_GET_USER_ACTIVITY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
	};

	struct Protocol_ETCDBM_A_GET_USER_ACTIVITY
	{
		// 2[s|4<M(84t41144244824s4s)>] - errCode[errDesc|numUserActivity<M(gameId,userIntId,eventTime,gameCategory,handType,limit,minPlayers,maxPlayers,playersPerTable,loBet,hiBet,buyIn,speed,tournVariant,strRef,flags,currency)>]
		UINT16 errCode;

		PString errDesc;

		ThinAtf::LAtfVector< UserActivity, 4 > userActivity;

		Protocol_ETCDBM_A_GET_USER_ACTIVITY();
		void clear();
		bool equals(const Protocol_ETCDBM_A_GET_USER_ACTIVITY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return ETCDBM_A_GET_USER_ACTIVITY; }
		static const char *getMsgIdString() { return "ETCDBM_A_GET_USER_ACTIVITY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_ETCDBM_A_GET_USER_ACTIVITY(Protocol_ETCDBM_A_GET_USER_ACTIVITY&&);
		Protocol_ETCDBM_A_GET_USER_ACTIVITY& operator=(Protocol_ETCDBM_A_GET_USER_ACTIVITY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_ETCDBM_A_GET_USER_ACTIVITY(const Protocol_ETCDBM_A_GET_USER_ACTIVITY&) = default;
		Protocol_ETCDBM_A_GET_USER_ACTIVITY& operator=(const Protocol_ETCDBM_A_GET_USER_ACTIVITY&) = default;
#endif
#endif
	};

	struct Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY
	{
		// M(84t41144244824s4s) - M(gameId,userIntId,eventTime,gameCategory,handType,limit,minPlayers,maxPlayers,playersPerTable,loBet,hiBet,buyIn,speed,tournVariant,strRef,flags,currency)
		UserActivity activity;

		Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY();
		void clear();
		bool equals(const Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return ETCDBM_Q_INSERT_USER_ACTIVITY; }
		static const char *getMsgIdString() { return "ETCDBM_Q_INSERT_USER_ACTIVITY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY(Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY&&);
		Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY& operator=(Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY(const Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY&) = default;
		Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY& operator=(const Protocol_ETCDBM_Q_INSERT_USER_ACTIVITY&) = default;
#endif
#endif
	};

	struct Protocol_ETCDBM_A_INSERT_USER_ACTIVITY
	{
		// 2[s] - errCode[errDesc]
		UINT16 errCode;

		PString errDesc;

		Protocol_ETCDBM_A_INSERT_USER_ACTIVITY();
		void clear();
		bool equals(const Protocol_ETCDBM_A_INSERT_USER_ACTIVITY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return ETCDBM_A_INSERT_USER_ACTIVITY; }
		static const char *getMsgIdString() { return "ETCDBM_A_INSERT_USER_ACTIVITY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_ETCDBM_A_INSERT_USER_ACTIVITY(Protocol_ETCDBM_A_INSERT_USER_ACTIVITY&&);
		Protocol_ETCDBM_A_INSERT_USER_ACTIVITY& operator=(Protocol_ETCDBM_A_INSERT_USER_ACTIVITY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_ETCDBM_A_INSERT_USER_ACTIVITY(const Protocol_ETCDBM_A_INSERT_USER_ACTIVITY&) = default;
		Protocol_ETCDBM_A_INSERT_USER_ACTIVITY& operator=(const Protocol_ETCDBM_A_INSERT_USER_ACTIVITY&) = default;
#endif
#endif
	};
};

#endif
