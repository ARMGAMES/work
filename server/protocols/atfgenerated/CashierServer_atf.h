/**
 * CashierServer_atf.h
 *
 * This file was auto-generated from CashierServer_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: CashierServer_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_CASHIERSERVER_ATF_H
#define ATF_PROTOCOL_DEFFILE_CASHIERSERVER_ATF_H

// From protocols/atfgenerated folder call
// perl.exe ../../atf/genprot.pl CashierServer_atf.txt
// and
// perl.exe ../../atf/genprot.pl -genMoveConstructor -thin CashierServer_atf.txt

#include "cashier.h"
#include "dbm.h"
#include "lobby.h"
#include "commonmacros.h"
#include "Common_atf.h"


#include "UserDefStructs.h"

namespace CashierServer
{
	class ProtocolFactory
	{
	public:
		static Atf::MessageProtocol* createMessageProtocolObject(const char *_nameSpace, UINT32 _msgId);
		static bool validateProtocolMessageFromJSONString(const char *_nameSpace, UINT32 _msgId, const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	//////////////////////////////////// COMMON STRUCTS ////////////////////////////
	namespace common_structs
	{
		struct SetUserRollStatus
		{
			// 444 - userRollId,curStatus,action
			UINT32 userRollId;	// no limit
			INT32 curStatus;	// enum eUserRollStatus
			INT32 action;

			SetUserRollStatus();
			void clear();
			bool equals(const SetUserRollStatus&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct SetUserRollStatusReply
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			SetUserRollStatusReply();
			void clear();
			bool equals(const SetUserRollStatusReply&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct SetGameTicketStatus
		{
			// 844 - gameTicketId,curStatus,action
			UINT64 gameTicketId;	// no limit
			INT32 curStatus;
			INT32 action;	// eGameTicketAction

			SetGameTicketStatus();
			void clear();
			bool equals(const SetGameTicketStatus&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct SetGameTicketStatusReply
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			SetGameTicketStatusReply();
			void clear();
			bool equals(const SetGameTicketStatusReply&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierRollBody	// reply only
		{
			// M(44s4s4s44444) - M(rollId,rollAmount,bonusCurrency,rollAmountInAcctCur,acctCurrency,cashPriceInAcctCur,acctCurrency2,rollProducts,clearPointsInCentsRounded,clearBets,redemptionLimit,clearStakes)
			//if (rollId)
			//{
			UINT32 rollId;
			INT32 rollAmount;
			PString bonusCurrency;
			INT32 rollAmountInAcctCur;
			PString acctCurrency;
			INT32 cashPriceInAcctCur;
			PString acctCurrency2;
			UINT32 rollProducts;
			INT32 clearPointsInCentsRounded;
			INT32 clearBets;
			INT32 redemptionLimit;
			INT32 clearStakes;
			//}

			CashierRollBody();
			void clear();
			bool equals(const CashierRollBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct PaysystemLimit
		{
			// 1s4444ss44s4b4 - paySystemByte,paysystemName,minDeposit,maxCashinMonthly,maxCashinWeekly,maxCashinDaily,feeStr,empty,maxDeposits,depositsHours,userLimitText,maxCashin1Trans,fastDepositIsOk,psAvailFlagToClient
			BYTE paySystemByte;
			PString paysystemName;
			INT32 minDeposit;
			INT32 maxCashinMonthly;
			INT32 maxCashinWeekly;
			INT32 maxCashinDaily;
			PString feeStr;
			PString empty;
			INT32 maxDeposits;
			INT32 depositsHours;
			PString userLimitText;
			INT32 maxCashin1Trans;
			bool fastDepositIsOk;
			UINT32 psAvailFlagToClient;

			PaysystemLimit();
			void clear();
			bool equals(const PaysystemLimit&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct TransactionHistoryCacheItem	// PYR-79696
		{
			// M(ts44s4ss4s1s4) - M(whenAccountWasImpacted,typeDescr,transAcctAmount,obsoleteSystemFee,cardMaskedOrReference,transId,transBalanceCurrency,descriptor,transConverted,transCurrency,transCardTypeByte,referenceHint,historyFlags)
			SrvTime whenAccountWasImpacted;
			PString typeDescr;
			INT32 transAcctAmount;
			UINT32 obsoleteSystemFee;	// always 0
			PString cardMaskedOrReference;
			UINT32 transId;
			PString transBalanceCurrency;	// normalized
			PString descriptor;
			INT32 transConverted;
			PString transCurrency;
			BYTE transCardTypeByte;
			PString referenceHint;
			UINT32 historyFlags;	// eCashierHistoryFlags

			TransactionHistoryCacheItem();
			void clear();
			bool equals(const TransactionHistoryCacheItem&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};
	};
	//////////////////////////////////// AUTHENTICATED CLIENT CONNECTION ////////////////////////////
	namespace cli
	{
		//--------------------------------------------- MSG_CASHIER_CHIPS_INFO2 (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CHIPS_INFO2 : public Atf::MessageProtocol	// 5283
		{
			// ss4 - userId,clientVersionInfo,infoFlags
			PString userId;
			PString clientVersionInfo;	// 1000 looks like a reasonable assumption
			UINT32 infoFlags;	/*min 0*/

			Protocol_MSG_CASHIER_CHIPS_INFO2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHIPS_INFO2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHIPS_INFO2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHIPS_INFO2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct PhoneValidationInfo	// reply only
		{
			// 1ssss - result,contryPhoneCode,verifiedPhoneNumber,dialingInfo,phoneNumber
			BYTE result;
			PString contryPhoneCode;
			PString verifiedPhoneNumber;
			PString dialingInfo;
			PString phoneNumber;

			PhoneValidationInfo();
			void clear();
			bool equals(const PhoneValidationInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct UserBalanceInfo	// reply only
		{
			// M(4s444444444444) - M(balanceFlags,currency,availForSpending,unclearedForSpending,availForCashout,unclearedForCashout,owedChips,tChips,wChips,chips,markedForCashoutOnly,userRollsWalletAmount,fsbTotalBetsNumber,userRollsAllocAmount)
			UINT32 balanceFlags;
			PString currency;
			INT32 availForSpending;
			INT32 unclearedForSpending;
			INT32 availForCashout;
			INT32 unclearedForCashout;
			INT32 owedChips;
			INT32 tChips;
			INT32 wChips;
			INT32 chips;
			INT32 markedForCashoutOnly;
			INT32 userRollsWalletAmount;
			INT32 fsbTotalBetsNumber;
			INT32 userRollsAllocAmount;

			UserBalanceInfo();
			void clear();
			bool equals(const UserBalanceInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct UserFundsInfo	// reply only
		{
			// M(s4) - M(currency,amount)
			PString currency;
			INT32 amount;

			UserFundsInfo();
			void clear();
			bool equals(const UserFundsInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct UserNonUsdCurrency	// reply only
		{
			// M(s) - M(name)
			PString name;

			UserNonUsdCurrency();
			void clear();
			bool equals(const UserNonUsdCurrency&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierExtraInfo	// reply only
		{
			//! 4 <FIXME_COND_IF> M(s88) <FIXME_COND_ELSE> M(b) <FIXME_COND_ENDIF>  - type <FIXME_COND_IF> ,M(currency,greekDailyGameProfit,greekNotAvailForCashout) <FIXME_COND_ELSE> ,M(hasCashoutHistory) <FIXME_COND_ENDIF> 
			INT32 type;	// enum eCashierExtraInfoType from cashier.h

			PString currency;
			INT64 greekDailyGameProfit;
			INT64 greekNotAvailForCashout;

			bool hasCashoutHistory;

			CashierExtraInfo();
			void clear();
			bool equals(const CashierExtraInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CHIPS_INFO2_REPLY : public Atf::MessageProtocol	// 5284
		{
			//! 2[s|M(ssssssssdM(1ssss)sss4< <FIXME>Common::AtfShared::UserPropertyBody</FIXME> >sM(1ssss)t)4414444114<M(4s444444444444)>4<M(s4)>4<M(s)>s4414488s44<4 <FIXME_COND_IF> M(s88) <FIXME_COND_ELSE> M(b) <FIXME_COND_ENDIF> >4<M(44s4s4s44444)>48M()8] - errCode[errDescr|M(email,addr1,addr2,city,state,country,zipCode,fullName,birthDate,M(result,contryPhoneCode,verifiedPhoneNumber,dialingInfo,phoneNumber),firstName,onlyLastName,fiscalCode,numUserProperties< <FIXME>Common::AtfShared::UserPropertyBody</FIXME> >,sex,M(result,contryPhoneCode,verifiedPhoneNumber,dialingInfo,phoneNumber),registered),flags,bitMask,realMoneyOk,vipStatus,playChips,allocPlayChips,fpWithCents,showBonusButton,showBonusButton2,numBalances<M(balanceFlags,currency,availForSpending,unclearedForSpending,availForCashout,unclearedForCashout,owedChips,tChips,wChips,chips,markedForCashoutOnly,userRollsWalletAmount,fsbTotalBetsNumber,userRollsAllocAmount)>,numFunds<M(currency,amount)>,numNonUsdCurrencies<M(name)>,defaultCurrencyForCountry,totalBalanceInPreferredCurrency,totalTBalanceInPreferredCurrency,fastDepositPaysystemByte,beProtectedFromGaming,beUnusedLossLimit,playChips2,allocPlayChips2,fulltiltUserId,ftCashoutMinLimit,numCashierExtraInfo<type <FIXME_COND_IF> ,M(currency,greekDailyGameProfit,greekNotAvailForCashout) <FIXME_COND_ELSE> ,M(hasCashoutHistory) <FIXME_COND_ENDIF> >,numUserRolls<M(rollId,rollAmount,bonusCurrency,rollAmountInAcctCur,acctCurrency,cashPriceInAcctCur,acctCurrency2,rollProducts,clearPointsInCentsRounded,clearBets,redemptionLimit,clearStakes)>,totalForCashoutInPrefCur,flags3,M(),totalBalanceInUsd]
			INT16 errCode;

			PString errDescr;

			// userInfoBody

			PString email;	// from chipsInfo
			PString addr1;
			PString addr2;
			PString city;
			PString state;
			PString country;
			PString zipCode;
			PString fullName;
			SrvDate birthDate;

			PhoneValidationInfo homePhoneValidation;

			PString firstName;	// from chipsInfo
			PString onlyLastName;
			PString fiscalCode;	// from chipsInfo

			Atf::LAtfVector< Common::AtfShared::UserPropertyBody, 4 > userProperties;

			PString sex;	// from chipsInfo

			PhoneValidationInfo mobilePhoneValidation;

			SrvTime registered;

			UINT32 flags;
			UINT32 bitMask;
			BYTE realMoneyOk;	// from chipsInfo
			INT32 vipStatus;	// from chipsInfo
			INT32 playChips;	// from chipsInfo
			INT32 allocPlayChips;	// from chipsInfo
			INT32 fpWithCents;
			BYTE showBonusButton;
			BYTE showBonusButton2;

			Atf::LAtfVector< UserBalanceInfo, 4 > balances;
			Atf::LAtfVector< UserFundsInfo, 4 > funds;
			Atf::LAtfVector< UserNonUsdCurrency, 4 > nonUsdCurrencies;

			PString defaultCurrencyForCountry;
			INT32 totalBalanceInPreferredCurrency;
			INT32 totalTBalanceInPreferredCurrency;
			BYTE fastDepositPaysystemByte;
			INT32 beProtectedFromGaming;
			INT32 beUnusedLossLimit;
			INT64 playChips2;	// the same from chipsInfo
			INT64 allocPlayChips2;	// the same from chipsInfo
			PString fulltiltUserId;
			INT32 ftCashoutMinLimit;	// obsolete, left for backwards compat PYR-45667 PYR-25157

			Atf::LAtfVector< CashierExtraInfo, 4 > cashierExtraInfo;
			Atf::LAtfVector< common_structs::CashierRollBody, 4 > userRolls;

			INT32 totalForCashoutInPrefCur;
			UINT64 flags3;	// from chipsInfo

			// FIXME: here should be nacData in case if license == Italy

			INT64 totalBalanceInUsd;

			Protocol_MSG_CASHIER_CHIPS_INFO2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHIPS_INFO2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHIPS_INFO2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHIPS_INFO2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody2(CommMsgParser& _parser);
			static void validateAnonymousMsgBody2(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody3(CommMsgParser& _parser);
			static void validateAnonymousMsgBody3(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct PaymentSpecificDataOne
		{
			//! 4 <FIXME_COND_IF> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(4) <FIXME_COND_ELSE> M(sssssssss) <FIXME_COND_ENDIF>  - dataId <FIXME_COND_IF> ,M(worldpay3DS2_referenceId,worldpay3DS2_windowSize) <FIXME_COND_ELSE> ,M(starswallet_mTan) <FIXME_COND_ELSE> ,M(cbsUrl,cbsUrl_wc2mt) <FIXME_COND_ELSE> ,M(applePay_encrPaymentToken) <FIXME_COND_ELSE> ,M(childTransId) <FIXME_COND_ELSE> ,M(clientAcceptHeader,clientJavaEnabled,clientScreenColorDepth,clientScreenHeight,clientScreenWidth,clientUserAgent,clientTzOffsetInMin,clientBrowserLocale,clientChallengeWinSize) <FIXME_COND_ENDIF> 
			// enum ePaymentSpecificData

			// PYR-80344
			// PYR-51865
			// PYR-36843
			// PYR-90717 PYR-117084
			// PYR-80351
			// PYR-80352
			UINT32 dataId;

			PString worldpay3DS2_referenceId;
			PString worldpay3DS2_windowSize;

			PString starswallet_mTan;

			PString cbsUrl;
			PString cbsUrl_wc2mt;

			PString applePay_encrPaymentToken;

			UINT32 childTransId;

			PString clientAcceptHeader;
			PString clientJavaEnabled;
			PString clientScreenColorDepth;
			PString clientScreenHeight;
			PString clientScreenWidth;
			PString clientUserAgent;
			PString clientTzOffsetInMin;
			PString clientBrowserLocale;	// ISO 639 language code. (3 char or 2 char)
			PString clientChallengeWinSize;

			PaymentSpecificDataOne();
			void clear();
			bool equals(const PaymentSpecificDataOne&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody2(CommMsgParser& _parser);
			static void validateAnonymousMsgBody2(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody3(CommMsgParser& _parser);
			static void validateAnonymousMsgBody3(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody4(CommMsgParser& _parser);
			static void validateAnonymousMsgBody4(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody5(CommMsgParser& _parser);
			static void validateAnonymousMsgBody5(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct PaymentSpecificDataVec
		{
			//! M(4<4 <FIXME_COND_IF> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(4) <FIXME_COND_ELSE> M(sssssssss) <FIXME_COND_ENDIF> >) - M(numVec<dataId <FIXME_COND_IF> ,M(worldpay3DS2_referenceId,worldpay3DS2_windowSize) <FIXME_COND_ELSE> ,M(starswallet_mTan) <FIXME_COND_ELSE> ,M(cbsUrl,cbsUrl_wc2mt) <FIXME_COND_ELSE> ,M(applePay_encrPaymentToken) <FIXME_COND_ELSE> ,M(childTransId) <FIXME_COND_ELSE> ,M(clientAcceptHeader,clientJavaEnabled,clientScreenColorDepth,clientScreenHeight,clientScreenWidth,clientUserAgent,clientTzOffsetInMin,clientBrowserLocale,clientChallengeWinSize) <FIXME_COND_ENDIF> >)
			Atf::LAtfVector< PaymentSpecificDataOne, 4 > vec;

			PaymentSpecificDataVec();
			void clear();
			bool equals(const PaymentSpecificDataVec&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CASHIN_CC (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CASHIN_CC : public Atf::MessageProtocol	// 5011
		{
			//! s41ss2141sss4sdssbss4bbb444 <FIXME_COND_IF> M(b4s) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M() <FIXME_COND_ENDIF> vM(4<4 <FIXME_COND_IF> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(4) <FIXME_COND_ELSE> M(sssssssss) <FIXME_COND_ENDIF> >) - userId,amount,paySystemByte,cardNum,cardCvv,expYear,expMonth,bonusId,doNotCancelCashouts,currency,issueNum,startDate,converted,secNum,bDate,dLicense,userPhoneAch,saveCardInfoRequested,bonusCode,balanceCurrency,clientBalance,fastDepositTransaction,saveInfoForFastDeposit,ignoreRepeatedDeclines,cardInfoId,awardId,clientDepositFlags <FIXME_COND_IF> ,M(isLoadAmountProvided,loadAmount,geoIpInfo) <FIXME_COND_ELSE> ,M(depositPassword) <FIXME_COND_ELSE> ,M() <FIXME_COND_ENDIF> ,encryptedCardNumAndCvv,M(numVec<dataId <FIXME_COND_IF> ,M(worldpay3DS2_referenceId,worldpay3DS2_windowSize) <FIXME_COND_ELSE> ,M(starswallet_mTan) <FIXME_COND_ELSE> ,M(cbsUrl,cbsUrl_wc2mt) <FIXME_COND_ELSE> ,M(applePay_encrPaymentToken) <FIXME_COND_ELSE> ,M(childTransId) <FIXME_COND_ELSE> ,M(clientAcceptHeader,clientJavaEnabled,clientScreenColorDepth,clientScreenHeight,clientScreenWidth,clientUserAgent,clientTzOffsetInMin,clientBrowserLocale,clientChallengeWinSize) <FIXME_COND_ENDIF> >)
			PString userId;
			INT32 amount;
			BYTE paySystemByte;
			PString cardNum;
			PString cardCvv;
			UINT16 expYear;	// 0 can be specified if paysystem does not require an expiration date
			BYTE expMonth;	// 0 can be specified if paysystem does not require an expiration date
			UINT32 bonusId;	// no limit
			BYTE doNotCancelCashouts;	// obsolete
			PString currency;
			PString issueNum;
			PString startDate;
			INT32 converted;
			PString secNum;	// SSN
			CommSrvDate bDate;
			PString dLicense;
			PString userPhoneAch;
			bool saveCardInfoRequested;
			PString bonusCode;
			PString balanceCurrency;
			INT32 clientBalance;
			bool fastDepositTransaction;
			bool saveInfoForFastDeposit;
			bool ignoreRepeatedDeclines;
			UINT32 cardInfoId;	// no limit
			UINT32 awardId;	// no limit
			UINT32 clientDepositFlags;	/*min 0*/

			bool isLoadAmountProvided;
			INT32 loadAmount;
			PString geoIpInfo;

			PString depositPassword;

			// empty

			PBlock encryptedCardNumAndCvv;	//parseGuardEncryptedCardNumAndCvv
			PaymentSpecificDataVec paymentSpecificDataVec;

			Protocol_MSG_CASHIER_CASHIN_CC();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_CC&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_CC; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_CC"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody2(CommMsgParser& _parser);
			static void validateAnonymousMsgBody2(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CASHIN_CC_CONFIRM (cli) ------------------------------------------
		// server to client
		struct Protocol_MSG_CASHIER_CASHIN_CC_CONFIRM : public Atf::MessageProtocol	// 5012
		{
			// 2[s|4s] - errCode[errDescr|transId,empty]
			INT16 errCode;

			PString errDescr;

			UINT32 transId;
			PString empty;

			Protocol_MSG_CASHIER_CASHIN_CC_CONFIRM();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_CC_CONFIRM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_CC_CONFIRM; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_CC_CONFIRM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CASHIN_CC_COMPLETE (cli) ------------------------------------------
		struct CashinResultInfo	// reply only
		{
			// 114s4 - type,action,amount,reference,systemFee
			BYTE type;
			BYTE action;
			INT32 amount;
			PString reference;
			INT32 systemFee;

			CashinResultInfo();
			void clear();
			bool equals(const CashinResultInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CASHIN_CC_COMPLETE : public Atf::MessageProtocol	// 5013, cashier->client
		{
			// 2[s14bss|4144<114s4>4s1bs] - errCode[errDescr,cardTypeByte,transId,dadEligible,errDescrForClient,balanceCurrency|transId,transStatusForClient,totalAmount,numResultInfos<type,action,amount,reference,systemFee>,rejectExplanationCode,urlForUser,cardTypeByte,dadEligible,errorTemplateText]
			INT16 errCode;

			PString errDescr;
			BYTE cardTypeByte;	// only for cases where (trans->cashierFlags & CashierCashTransaction::eRequestAlternativePaysystem) != 0
			UINT32 transId;
			bool dadEligible;
			PString errDescrForClient;	// same as errDescr
			PString balanceCurrency;

			BYTE transStatusForClient;
			INT32 totalAmount;
			Atf::LAtfVector< CashinResultInfo, 4 > resultInfos;
			UINT32 rejectExplanationCode;
			PString urlForUser;

			PString errorTemplateText;

			Protocol_MSG_CASHIER_CASHIN_CC_COMPLETE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_CC_COMPLETE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_CC_COMPLETE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_CC_COMPLETE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CASHOUT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CASHOUT : public Atf::MessageProtocol	// 5005
		{
			// s411ss4ss48 - userId,amount,paySystem,bonusAware,userPhone,currency,convRate,balanceCurrency,reference,clientBalance_ignored,convRate64
			PString userId;
			INT32 amount;
			BYTE paySystem;
			BYTE bonusAware;
			PString userPhone;
			PString currency;
			INT32 convRate;
			PString balanceCurrency;
			PString reference;
			INT32 clientBalance_ignored;	// not used by server
			INT64 convRate64;	// 10^12 (one trillion) equals to 100M base multiplied by 100K (so far Iranian Rial has the worst ratio - 20K to 1USD)

			Protocol_MSG_CASHIER_CASHOUT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHOUT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHOUT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHOUT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct ResultInfos
		{
			// 114s4 - type,action,amount,reference,systemFee
			BYTE type;
			BYTE action;
			INT32 amount;
			PString reference;
			INT32 systemFee;

			ResultInfos();
			void clear();
			bool equals(const ResultInfos&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		// server to client
		struct Protocol_MSG_CASHIER_CASHOUT_COMPLETE : public Atf::MessageProtocol	// 5008
		{
			// 2[s|4144<114s4>1ss] - errCode[errDescr|transId,statusByte,returnedAmount,numResultInfos<type,action,amount,reference,systemFee>,parentPaySystem,empty,balanceCurrency]
			INT16 errCode;

			PString errDescr;

			UINT32 transId;
			BYTE statusByte;
			INT32 returnedAmount;

			Atf::LAtfVector< ResultInfos, 4 > resultInfos;

			BYTE parentPaySystem;
			PString empty;
			PString balanceCurrency;

			Protocol_MSG_CASHIER_CASHOUT_COMPLETE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHOUT_COMPLETE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHOUT_COMPLETE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHOUT_COMPLETE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_HISTORY2 (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_HISTORY2 : public Atf::MessageProtocol	// 5277
		{
			// s44 - userId,nLastDays,requestFlags
			PString userId;
			UINT32 nLastDays;	// decreased from 10000 per EugeneK request
			UINT32 requestFlags;	/*min 0*/ // 0 = include trans amount in type, anything else - don't include (gui client uses 1)

			Protocol_MSG_CASHIER_HISTORY2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_HISTORY2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_HISTORY2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_HISTORY2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashTransactionWithReferenceBody	// reply only
		{
			// M(s44s4ss4s1s4) - M(typeDescr,transAcctAmount,zero,cardMaskedOrReference,transId,normalizedBalanceCurrency,descriptor,transConverted,transCurrency,cardTypeByte,referenceHint,historyFlags)
			PString typeDescr;
			INT32 transAcctAmount;
			UINT32 zero;
			PString cardMaskedOrReference;
			UINT32 transId;
			PString normalizedBalanceCurrency;
			PString descriptor;
			INT32 transConverted;
			PString transCurrency;
			BYTE cardTypeByte;
			PString referenceHint;
			UINT32 historyFlags;

			CashTransactionWithReferenceBody();
			void clear();
			bool equals(const CashTransactionWithReferenceBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_HISTORY2_REPLY : public Atf::MessageProtocol	// 5278
		{
			// 2[s|4<M(s44s4ss4s1s4)>] - errCode[errDescr|numTransactions<M(typeDescr,transAcctAmount,zero,cardMaskedOrReference,transId,normalizedBalanceCurrency,descriptor,transConverted,transCurrency,cardTypeByte,referenceHint,historyFlags)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashTransactionWithReferenceBody, 4 > transactions;

			Protocol_MSG_CASHIER_HISTORY2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_HISTORY2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_HISTORY2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_HISTORY2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_USER_BONUSHIST_NEW (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_USER_BONUSHIST_NEW : public Atf::MessageProtocol	// 5105
		{
			// s - userId
			PString userId;

			Protocol_MSG_CASHIER_USER_BONUSHIST_NEW();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_USER_BONUSHIST_NEW&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_USER_BONUSHIST_NEW; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_USER_BONUSHIST_NEW"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct UserBonusBody	// reply only
		{
			// M(st444444ts444) - M(bonusName,when,createdTransId,bonusAmount,fppToCollect,fppCollected,credited,creditTransId,expDate,currency,bonusInTickets,creditedTickets,bonusClearedFlags)
			PString bonusName;
			CommSrvTime when;
			UINT32 createdTransId;
			INT32 bonusAmount;
			INT32 fppToCollect;
			INT32 fppCollected;
			INT32 credited;
			UINT32 creditTransId;
			CommSrvTime expDate;
			PString currency;
			INT32 bonusInTickets;
			INT32 creditedTickets;
			UINT32 bonusClearedFlags;

			UserBonusBody();
			void clear();
			bool equals(const UserBonusBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_USER_BONUSHIST_NEW_REPLY : public Atf::MessageProtocol	// 5106
		{
			// 2[s|4<M(st444444ts444)>s] - errCode[errDescr|numBonuses<M(bonusName,when,createdTransId,bonusAmount,fppToCollect,fppCollected,credited,creditTransId,expDate,currency,bonusInTickets,creditedTickets,bonusClearedFlags)>,bonusDescr]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< UserBonusBody, 4 > bonuses;
			PString bonusDescr;	// one long html formatted line for desktop client

			Protocol_MSG_CASHIER_USER_BONUSHIST_NEW_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_USER_BONUSHIST_NEW_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_USER_BONUSHIST_NEW_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_USER_BONUSHIST_NEW_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PRE_CASHIN2 (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PRE_CASHIN2 : public Atf::MessageProtocol	// 5041
		{
			// s41sssM(44)4bsv - userId,accountAmount,bytePaySystem,processorCurrency,bonusCode,accountCurrency,M(validationDigits,validationAttempts),processorAmount,nonZeroPaysystemFeeApplies,cardNum,encryptedCardNum
			PString userId;	// legacy, should not be used for authentication
			INT32 accountAmount;
			BYTE bytePaySystem;
			PString processorCurrency;
			PString bonusCode;	// was BONUS_CODE_LEN, but client can somehow send 27
			PString accountCurrency;

			UINT32 validationDigits;
			UINT32 validationAttempts;

			INT32 processorAmount;
			bool nonZeroPaysystemFeeApplies;
			PString cardNum;
			PBlock encryptedCardNum;

			Protocol_MSG_CASHIER_PRE_CASHIN2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PRE_CASHIN2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PRE_CASHIN2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PRE_CASHIN2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierTicketBody	// reply only
		{
			// M(s4) - M(admission,ticketsCount)
			PString admission;
			INT32 ticketsCount;

			CashierTicketBody();
			void clear();
			bool equals(const CashierTicketBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierGatewayDisclaimerBodyOne	// reply only
		{
			// M(s) - M(text)
			PString text;

			CashierGatewayDisclaimerBodyOne();
			void clear();
			bool equals(const CashierGatewayDisclaimerBodyOne&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierGatewayDisclaimerBody	// reply only
		{
			// M(ss4<M(s)>) - M(header,text,numButtons<M(text)>)
			//if (conn.precashinGateway.length() > 0)
			//{
			PString header;
			PString text;
			Atf::LAtfVector< CashierGatewayDisclaimerBodyOne, 4 > buttons;
			//}

			CashierGatewayDisclaimerBody();
			void clear();
			bool equals(const CashierGatewayDisclaimerBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PRE_CASHIN2_REPLY : public Atf::MessageProtocol	// 5042
		{
			// 2[s|444444stts44444ts444bM(4<M(s4)>)M(44s4s4s44444)M(ss4<M(s)>)] - errCode[errDescr|bestBonusAmount,bestBonusFppToEarn,availAmount,bestBonusId,bestBonusPercent,bestBonusMaxAvailableAmount,bestBonusName,bestBonusStart,bestBonusEnd,bestBonusUrl,zero,bestBonusReleasePortion,bestBonusFppReleasePortion,bestBonusBonusFlags,bestBonusMaxNumDepositsLeft,bestBonusLastAllowedDepositTime,bestBonusCurrency,bestBonusDaysToDeposit,bestBonusMaxDepositNumber,acctAmount,beDepositExceedsLossLimit,M(numTicketOnlyBonusBodies<M(admission,ticketsCount)>),M(rollId,rollAmount,bonusCurrency,rollAmountInAcctCur,acctCurrency,cashPriceInAcctCur,acctCurrency2,rollProducts,clearPointsInCentsRounded,clearBets,redemptionLimit,clearStakes),M(header,text,numButtons<M(text)>)]
			INT16 errCode;

			PString errDescr;

			INT32 bestBonusAmount;
			INT32 bestBonusFppToEarn;
			INT32 availAmount;
			UINT32 bestBonusId;
			INT32 bestBonusPercent;
			INT32 bestBonusMaxAvailableAmount;
			PString bestBonusName;
			CommSrvTime bestBonusStart;
			CommSrvTime bestBonusEnd;
			PString bestBonusUrl;
			UINT32 zero;
			INT32 bestBonusReleasePortion;
			INT32 bestBonusFppReleasePortion;
			UINT32 bestBonusBonusFlags;
			UINT32 bestBonusMaxNumDepositsLeft;
			CommSrvTime bestBonusLastAllowedDepositTime;
			PString bestBonusCurrency;
			INT32 bestBonusDaysToDeposit;
			INT32 bestBonusMaxDepositNumber;
			INT32 acctAmount;
			bool beDepositExceedsLossLimit;
			Atf::LAtfVector< CashierTicketBody, 4 > ticketOnlyBonusBodies;

			common_structs::CashierRollBody rollMsgBody;
			CashierGatewayDisclaimerBody disclaimerMsgBody;

			Protocol_MSG_CASHIER_PRE_CASHIN2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PRE_CASHIN2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PRE_CASHIN2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PRE_CASHIN2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CASHIN_NT : public Atf::MessageProtocol	// 5034
		{
			// sss441sbss4s4bbb444 - userId,netAccount,secureId,transAmount,bonusId,doNotCancel_ignored,bank_acct_num,saveCardInfoRequested,bonusCode,currency,converted,balanceCurrency,clientBalance_ignored,fastDepositTransaction,saveInfoForFastDeposit,ignoreRepeatedDeclines,cardInfoId,awardId,clientDepositFlags
			PString userId;
			PString netAccount;	// trans cardnum
			PString secureId;
			INT32 transAmount;
			UINT32 bonusId;	// no limit
			BYTE doNotCancel_ignored;	// not used by server
			PString bank_acct_num;
			bool saveCardInfoRequested;
			PString bonusCode;
			PString currency;
			INT32 converted;
			PString balanceCurrency;
			INT32 clientBalance_ignored;	// not used by server
			bool fastDepositTransaction;
			bool saveInfoForFastDeposit;
			bool ignoreRepeatedDeclines;
			UINT32 cardInfoId;	// no limit
			UINT32 awardId;	// no limit
			UINT32 clientDepositFlags;	/*min 0*/

			Protocol_MSG_CASHIER_CASHIN_NT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_NT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_NT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_NT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// server to client
		struct Protocol_MSG_CASHIER_CASHIN_NT_CONFIRM : public Atf::MessageProtocol	// 5035
		{
			// 2[s|4] - errCode[errDescr|transId]
			INT16 errCode;

			PString errDescr;

			UINT32 transId;

			Protocol_MSG_CASHIER_CASHIN_NT_CONFIRM();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_NT_CONFIRM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_NT_CONFIRM; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_NT_CONFIRM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Cashier3DSecureRedirectionParams	// reply only
		{
			// ss - first,second
			PString first;
			PString second;

			Cashier3DSecureRedirectionParams();
			void clear();
			bool equals(const Cashier3DSecureRedirectionParams&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierCashinCompleteSpecificInfoBody	// reply only
		{
			//! 4 <FIXME_COND_IF> M() <FIXME_COND_ELSE> M(s) <FIXME_COND_ENDIF>  - type <FIXME_COND_IF> ,M() <FIXME_COND_ELSE> ,M(text) <FIXME_COND_ENDIF> 
			UINT32 type;	// eCashinCompleteSpecificInfo_UnverifiedPayment

			// empty

			PString text;

			CashierCashinCompleteSpecificInfoBody();
			void clear();
			bool equals(const CashierCashinCompleteSpecificInfoBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CASHIN_NT_COMPLETE : public Atf::MessageProtocol	// 5036 (reply)
		{
			// 2[s|4144<114s4>4ssssbss4s4<ss>] - errCode[errDescr|transId,transStatusByte,totalAmount,numResultInfos<type,action,amount,reference,systemFee>,rejectExplanationCode,errorInfo,ntUrl,ntUrlMsg,ntPhone,dadEligible,rejectMsg,transBalanceCurrency,transConverted,transCurrency,numThreeDSecureRedirectionParams<first,second>]
			INT16 errCode;

			PString errDescr;

			UINT32 transId;
			BYTE transStatusByte;
			INT32 totalAmount;

			Atf::LAtfVector< ResultInfos, 4 > resultInfos;

			UINT32 rejectExplanationCode;
			PString errorInfo;
			PString ntUrl;
			PString ntUrlMsg;
			PString ntPhone;
			bool dadEligible;
			PString rejectMsg;
			// replyAfterErrorString
			PString transBalanceCurrency;
			INT32 transConverted;
			PString transCurrency;
			Atf::LAtfVector< Cashier3DSecureRedirectionParams, 4 > threeDSecureRedirectionParams;

			Protocol_MSG_CASHIER_CASHIN_NT_COMPLETE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_NT_COMPLETE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_NT_COMPLETE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_NT_COMPLETE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// doesn't have a reply
		struct Protocol_MSG_CASHIER_CASHIN_CC_REDIRECTED : public Atf::MessageProtocol	// 5126
		{
			// 444s - transId,amount,isError,errDescr
			UINT32 transId;	// no limit
			INT32 amount;
			INT32 isError;
			PString errDescr;

			Protocol_MSG_CASHIER_CASHIN_CC_REDIRECTED();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_CC_REDIRECTED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_CC_REDIRECTED; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_CC_REDIRECTED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PRE_CASHOUT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PRE_CASHOUT : public Atf::MessageProtocol	// 5045
		{
			// s4sb1 - userId,cashoutAmount,balanceCurrency,isForFTPkr,userRollbackOption
			PString userId;
			INT32 cashoutAmount;
			PString balanceCurrency;	// should be CURRENCY_LEN. Seems to be some client bug due to UTF
			bool isForFTPkr;
			BYTE userRollbackOption;	// PYR-85939, PYR-87069 - eUserRollbackOption - for Admin tool; Client should pass 0 as it's ignored by Cashier

			Protocol_MSG_CASHIER_PRE_CASHOUT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PRE_CASHOUT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PRE_CASHOUT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PRE_CASHOUT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CardRollback	// reply only
		{
			// ss4 - cardType,cardMasked,amount
			PString cardType;
			PString cardMasked;
			INT32 amount;

			CardRollback();
			void clear();
			bool equals(const CardRollback&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CardRollbackExtBody	// reply only
		{
			// M(ss418s444) - M(cardType,cardMasked,amount,cardTypeByte,convRate64,cardCurrency,processorAmount,cardId,flagsForClient)
			PString cardType;
			PString cardMasked;
			INT32 amount;
			BYTE cardTypeByte;
			INT64 convRate64;
			PString cardCurrency;
			INT32 processorAmount;
			UINT32 cardId;
			UINT32 flagsForClient;

			CardRollbackExtBody();
			void clear();
			bool equals(const CardRollbackExtBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashoutOptionBody	// reply only
		{
			// M(1tss4b4ss8sb44) - M(cardTypeByte,when,maskedReference,currCode,convRate,isAllowed,limitAmount,explanation,psForCashoutI18n,coConvRate,additionalText,isTagged,cardId,coFlagsForClient)
			BYTE cardTypeByte;
			CommSrvTime when;
			PString maskedReference;
			PString currCode;
			UINT32 convRate;
			bool isAllowed;
			INT32 limitAmount;
			PString explanation;
			PString psForCashoutI18n;
			INT64 coConvRate;
			PString additionalText;
			bool isTagged;
			UINT32 cardId;
			UINT32 coFlagsForClient;

			CashoutOptionBody();
			void clear();
			bool equals(const CashoutOptionBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PRE_CASHOUT_REPLY : public Atf::MessageProtocol	// 5046
		{
			// 2[s|1ss4442s22<ss4>4<M(1tss4b4ss8sb44)>4<M(ss418s444)>4] - errCode[errDescr|needsBonusWarning,bonusName,bonusUrl,bonusPercent,bonusMaxAmount,estimatedRollback,zero,userPhone,zero2,numRollbacks<cardType,cardMasked,amount>,numCashoutOptions<M(cardTypeByte,when,maskedReference,currCode,convRate,isAllowed,limitAmount,explanation,psForCashoutI18n,coConvRate,additionalText,isTagged,cardId,coFlagsForClient)>,numRollbacksExt<M(cardType,cardMasked,amount,cardTypeByte,convRate64,cardCurrency,processorAmount,cardId,flagsForClient)>,preCashoutReplyFlags]
			INT16 errCode;

			PString errDescr;

			BYTE needsBonusWarning;
			PString bonusName;
			PString bonusUrl;
			INT32 bonusPercent;
			INT32 bonusMaxAmount;
			INT32 estimatedRollback;
			INT16 zero;	// obsolete: lastCashins are ignored on client's side
			PString userPhone;	// obsolete: ignores since #7862
			INT16 zero2;	// obsolete functionality of composeCashoutOptions() always 0
			Atf::LAtfVector< CardRollback, 2 > rollbacks;
			Atf::LAtfVector< CashoutOptionBody, 4 > cashoutOptions;
			Atf::LAtfVector< CardRollbackExtBody, 4 > rollbacksExt;
			UINT32 preCashoutReplyFlags;

			Protocol_MSG_CASHIER_PRE_CASHOUT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PRE_CASHOUT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PRE_CASHOUT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PRE_CASHOUT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_VIP_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_VIP_INFO : public Atf::MessageProtocol	// 5076
		{
			// s - userId
			PString userId;

			Protocol_MSG_CASHIER_VIP_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VIP_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VIP_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VIP_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct VipLevelBody
		{
			// M(4444444) - M(statusId,type,minFpp,fppBonusRate,vipToKeepYearlyStatus,lastMonthForYearly,missableMonthsYearly)
			INT32 statusId;
			INT32 type;
			INT32 minFpp;
			INT32 fppBonusRate;
			INT32 vipToKeepYearlyStatus;
			INT32 lastMonthForYearly;
			INT32 missableMonthsYearly;

			VipLevelBody();
			void clear();
			bool equals(const VipLevelBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct StellarBonusLevel
		{
			// 444 - groupId,vppThreshold,amount
			UINT32 groupId;
			INT32 vppThreshold;
			INT32 amount;

			StellarBonusLevel();
			void clear();
			bool equals(const StellarBonusLevel&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_VIP_INFO_REPLY : public Atf::MessageProtocol	// 5077
		{
			// 2[s|444<444>4444<M(4444444)>8] - errCode[errDescr|zero,lastMonthForYearlyOld,numStellarBonuses<groupId,vppThreshold,amount>,previousYearVPP,zero2,dailyCnt,numVipLevelBodies<M(statusId,type,minFpp,fppBonusRate,vipToKeepYearlyStatus,lastMonthForYearly,missableMonthsYearly)>,ltVppInCents]
			INT16 errCode;

			PString errDescr;

			UINT32 zero;	// Is obsolete after Aug 9 '12 build
			INT32 lastMonthForYearlyOld;	// TODO: obsolete after PYR-21602 is fixed for Sep '12 build and old Clients are no longer a concern.
			Atf::LAtfVector< StellarBonusLevel, 4 > stellarBonuses;
			INT32 previousYearVPP;
			UINT32 zero2;	// milestoneBonusLevels, PYR-20663, not used by the Client
			INT32 dailyCnt;
			Atf::LAtfVector< VipLevelBody, 4 > vipLevelBodies;
			INT64 ltVppInCents;

			Protocol_MSG_CASHIER_VIP_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VIP_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VIP_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VIP_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SAVED_CARD (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SAVED_CARD : public Atf::MessageProtocol	// 5080
		{
			// ss4 - userId,paySystem,cardInfoId
			PString userId;
			PString paySystem;
			UINT32 cardInfoId;	// no limit

			Protocol_MSG_CASHIER_SAVED_CARD();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVED_CARD&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVED_CARD; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVED_CARD"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SAVED_CARD_REPLY : public Atf::MessageProtocol	// 5081
		{
			// 2[s|4sssss21v] - errCode[errDescr|infoId,userId,paySystem,plainCardNumForOldClient,ssNumPlain,dLicensePlain,expYear,expMonth,encryptedCardNum]
			INT16 errCode;

			PString errDescr;

			UINT32 infoId;
			PString userId;
			PString paySystem;
			PString plainCardNumForOldClient;
			PString ssNumPlain;
			PString dLicensePlain;
			UINT16 expYear;
			BYTE expMonth;
			PBlock encryptedCardNum;

			Protocol_MSG_CASHIER_SAVED_CARD_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVED_CARD_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVED_CARD_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVED_CARD_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_DAD_REQUEST (cli) ------------------------------------------
		struct DadRequest
		{
			// 4sss4 - requestType,userId,phoneToContact,timeToContact,transactionId
			UINT32 requestType;	// eLiveSupportRequestType
			PString userId;
			PString phoneToContact;
			PString timeToContact;
			UINT32 transactionId;	// no limit

			DadRequest();
			void clear();
			bool equals(const DadRequest&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_DAD_REQUEST : public Atf::MessageProtocol	// 5092
		{
			// 4sss4 - requestType,userId,phoneToContact,timeToContact,transactionId
			DadRequest dadRequest;

			Protocol_MSG_CASHIER_DAD_REQUEST();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DAD_REQUEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DAD_REQUEST; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DAD_REQUEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_DAD_REQUEST_REPLY : public Atf::MessageProtocol	// 5093 // same as MSG_CASHIER_FRMIGRATION_LIVESUPPORT_REPLY
		{
			// 2[s|4] - errCode[errDescr|requestType]
			INT16 errCode;

			PString errDescr;

			UINT32 requestType;

			Protocol_MSG_CASHIER_DAD_REQUEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DAD_REQUEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DAD_REQUEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DAD_REQUEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_FRMIGRATION_LIVESUPPORT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_FRMIGRATION_LIVESUPPORT : public Atf::MessageProtocol	// 5358
		{
			// 4sss4 - requestType,userId,phoneToContact,timeToContact,transactionId
			DadRequest dadRequest;

			Protocol_MSG_CASHIER_FRMIGRATION_LIVESUPPORT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_LIVESUPPORT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_LIVESUPPORT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_LIVESUPPORT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_FRMIGRATION_LIVESUPPORT_REPLY : public Atf::MessageProtocol	// 5359 // same as MSG_CASHIER_DAD_REQUEST_REPLY
		{
			// 2[s|4] - errCode[errDescr|requestType]
			INT16 errCode;

			PString errDescr;

			UINT32 requestType;

			Protocol_MSG_CASHIER_FRMIGRATION_LIVESUPPORT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_LIVESUPPORT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_LIVESUPPORT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_LIVESUPPORT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_WIRE_REQUEST (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_WIRE_REQUEST : public Atf::MessageProtocol	// 5101
		{
			// s4sss - userId,procAmount,currency_not,bonusCode,personalInfo
			PString userId;
			INT32 procAmount;
			PString currency_not;	// ignored
			PString bonusCode;
			PString personalInfo;	//#7378 - fiscalNumber

			Protocol_MSG_CASHIER_WIRE_REQUEST();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_WIRE_REQUEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_WIRE_REQUEST; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_WIRE_REQUEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_WIRE_REQUEST_REPLY : public Atf::MessageProtocol	// 5102
		{
			// 2[s|sssssssss] - errCode[errDescr|paymentReference,accountHolder,bankName,city,swift,specialId,bankAcct,country,additionalRef]
			INT16 errCode;

			PString errDescr;

			PString paymentReference;
			PString accountHolder;
			PString bankName;
			PString city;
			PString swift;
			PString specialId;
			PString bankAcct;
			PString country;
			PString additionalRef;

			Protocol_MSG_CASHIER_WIRE_REQUEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_WIRE_REQUEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_WIRE_REQUEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_WIRE_REQUEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_BPAY_REQUEST (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_BPAY_REQUEST : public Atf::MessageProtocol	// 5195
		{
			// s4sss - userId,procAmount,currency_not,bonusCode,personalInfo
			PString userId;
			INT32 procAmount;
			PString currency_not;
			PString bonusCode;
			PString personalInfo;

			Protocol_MSG_CASHIER_BPAY_REQUEST();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BPAY_REQUEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BPAY_REQUEST; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BPAY_REQUEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_BPAY_REQUEST_REPLY : public Atf::MessageProtocol	// 5196
		{
			// 2[s|ss] - errCode[errDescr|paymentReference,billerId]
			INT16 errCode;

			PString errDescr;

			PString paymentReference;
			PString billerId;

			Protocol_MSG_CASHIER_BPAY_REQUEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BPAY_REQUEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BPAY_REQUEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BPAY_REQUEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_INIT_WIRECARD_DEPOSIT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_INIT_WIRECARD_DEPOSIT : public Atf::MessageProtocol	// 5305, PYR-11583
		{
			// s4ss - userId,amount,currency,bonusCode
			PString userId;
			INT32 amount;
			PString currency;
			PString bonusCode;

			Protocol_MSG_CASHIER_INIT_WIRECARD_DEPOSIT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_INIT_WIRECARD_DEPOSIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_INIT_WIRECARD_DEPOSIT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_INIT_WIRECARD_DEPOSIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_INIT_WIRECARD_DEPOSIT_REPLY : public Atf::MessageProtocol	// 5306
		{
			// 2[s|s] - errCode[errDescr|popUpText]
			INT16 errCode;

			PString errDescr;

			PString popUpText;

			Protocol_MSG_CASHIER_INIT_WIRECARD_DEPOSIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_INIT_WIRECARD_DEPOSIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_INIT_WIRECARD_DEPOSIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_INIT_WIRECARD_DEPOSIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_AGE_CHECK_UK (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_AGE_CHECK_UK : public Atf::MessageProtocol	// 5113
		{
			// sssdsssssssssssdsssss4 - title,fullName,gender,dateOfBirth,address,city,zip,state,country,passportNumber1,passportNumber2,passportNumber3,passportNumber4,passportNumber5,passportNumber6,passportExprireDate,driverNumber1,driverNumber2,driverNumber3,driverNumber4,driverpostcode,attemptNumber
			PString title;
			PString fullName;
			PString gender;	/*GENDER_LEN*/ // Can be up to 6 bytes for older clients ('Male', 'Female')
			CommSrvDate dateOfBirth;
			PString address;
			PString city;
			PString zip;
			PString state;
			PString country;
			PString passportNumber1;
			PString passportNumber2;
			PString passportNumber3;
			PString passportNumber4;
			PString passportNumber5;
			PString passportNumber6;
			CommSrvDate passportExprireDate;
			PString driverNumber1;
			PString driverNumber2;
			PString driverNumber3;
			PString driverNumber4;
			PString driverpostcode;
			UINT32 attemptNumber;	/*min 0*/

			Protocol_MSG_CASHIER_AGE_CHECK_UK();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AGE_CHECK_UK&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AGE_CHECK_UK; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AGE_CHECK_UK"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_AGE_CHECK_UK_REPLY : public Atf::MessageProtocol	// 5114
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_AGE_CHECK_UK_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AGE_CHECK_UK_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AGE_CHECK_UK_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AGE_CHECK_UK_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_AGEVERIVICATION2 (cli) ------------------------------------------
		struct AgeVerificationCommonBody	// request only
		{
			// M(4ssdssssssss) - M(title,fullName,gender,dateOfBirth,address,city,zip,state,country,phone,firstName,lastName)
			INT32 title;
			PString fullName;
			PString gender;
			CommSrvDate dateOfBirth;
			PString address;
			PString city;
			PString zip;
			PString state;
			PString country;
			PString phone;
			PString firstName;
			PString lastName;

			AgeVerificationCommonBody();
			void clear();
			bool equals(const AgeVerificationCommonBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct AgeVerificationPassportBody	// request only, can be empty
		{
			// M(ssssssd) - M(passportNumber1,passportNumber2,passportNumber3,passportNumber4,passportNumber5,passportNumber6,passportExprireDate)
			PString passportNumber1;
			PString passportNumber2;
			PString passportNumber3;
			PString passportNumber4;
			PString passportNumber5;
			PString passportNumber6;
			CommSrvDate passportExprireDate;

			AgeVerificationPassportBody();
			void clear();
			bool equals(const AgeVerificationPassportBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct AgeVerificationDrivLicBody	// request only, can be empty
		{
			// M(sssss) - M(driverLicenseCountry,driverNumber1,driverNumber2,driverNumber3,driverNumber4)
			PString driverLicenseCountry;
			PString driverNumber1;
			PString driverNumber2;
			PString driverNumber3;
			PString driverNumber4;

			AgeVerificationDrivLicBody();
			void clear();
			bool equals(const AgeVerificationDrivLicBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_AGEVERIVICATION2 : public Atf::MessageProtocol	// 5436
		{
			// M(4ssdssssssss)M(ssssssd)M(sssss) - M(title,fullName,gender,dateOfBirth,address,city,zip,state,country,phone,firstName,lastName),M(passportNumber1,passportNumber2,passportNumber3,passportNumber4,passportNumber5,passportNumber6,passportExprireDate),M(driverLicenseCountry,driverNumber1,driverNumber2,driverNumber3,driverNumber4)
			AgeVerificationCommonBody common;
			AgeVerificationPassportBody passport;
			AgeVerificationDrivLicBody drivLic;

			Protocol_MSG_CASHIER_AGEVERIVICATION2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AGEVERIVICATION2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AGEVERIVICATION2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AGEVERIVICATION2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct AgeVerificationDrivLicCountryBody	// reply only
		{
			// M(s) - M(country)
			PString country;

			AgeVerificationDrivLicCountryBody();
			void clear();
			bool equals(const AgeVerificationDrivLicCountryBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_AGEVERIVICATION2_REPLY : public Atf::MessageProtocol	// 5437
		{
			// 2[s|4<M(s)>] - errCode[errDescr|numAgeCheckDrivLicCountries<M(country)>]
			INT16 errCode;

			PString errDescr;	// ignored in case of ERR_AGEVERIFICATION_NEEDS_DATA

			Atf::LAtfVector< AgeVerificationDrivLicCountryBody, 4 > ageCheckDrivLicCountries;	// for ERR_AGEVERIFICATION_NEEDS_DATA

			Protocol_MSG_CASHIER_AGEVERIVICATION2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AGEVERIVICATION2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AGEVERIVICATION2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AGEVERIVICATION2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_AGEVERIVICATION2_CANCEL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_AGEVERIVICATION2_CANCEL : public Atf::MessageProtocol	// 5438
		{
			// empty

			Protocol_MSG_CASHIER_AGEVERIVICATION2_CANCEL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AGEVERIVICATION2_CANCEL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AGEVERIVICATION2_CANCEL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AGEVERIVICATION2_CANCEL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_AGEVERIVICATION2_CANCEL_REPLY : public Atf::MessageProtocol	// 5439
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_AGEVERIVICATION2_CANCEL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AGEVERIVICATION2_CANCEL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AGEVERIVICATION2_CANCEL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AGEVERIVICATION2_CANCEL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CHECK_PAYSYSTEM (cli) ------------------------------------------
		//--------------------------------------------- MSG_CASHIER_CHECK_PAYSYSTEM2 (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CHECK_PAYSYSTEM : public Atf::MessageProtocol	// 5127 (obsolete)
		{
			// 1s411111 - paySystemByte,requestCurrency,cardInfoId,notUsedNum1,notUsedNum2,notUsedNum3,notUsedNum4,notUsedNum5
			BYTE paySystemByte;
			PString requestCurrency;
			UINT32 cardInfoId;	// no limit
			BYTE notUsedNum1;	// added for older clients sending 5 extra bytes
			BYTE notUsedNum2;
			BYTE notUsedNum3;
			BYTE notUsedNum4;
			BYTE notUsedNum5;

			Protocol_MSG_CASHIER_CHECK_PAYSYSTEM();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHECK_PAYSYSTEM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHECK_PAYSYSTEM; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHECK_PAYSYSTEM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierAvailableCurrency	// response only
		{
			// M(s88) - M(currency,depositRate64,depositRate64Inverted)
			PString currency;
			UINT64 depositRate64;
			UINT64 depositRate64Inverted;

			CashierAvailableCurrency();
			void clear();
			bool equals(const CashierAvailableCurrency&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierFeeBody	// response only
		{
			// M(4444441) - M(graceDepositsPeriodDays,graceDeposits,leftGraceDeposits,calcRate_x_100K,calcMinFee,calcMaxFee,altPaysystemByte)
			INT32 graceDepositsPeriodDays;
			INT32 graceDeposits;
			INT32 leftGraceDeposits;
			INT32 calcRate_x_100K;
			INT32 calcMinFee;
			INT32 calcMaxFee;
			BYTE altPaysystemByte;

			CashierFeeBody();
			void clear();
			bool equals(const CashierFeeBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierPredefinedButtonsBody	// response only
		{
			// M(4<4>4) - M(numRoundedValidSuggestedAmounts<roundedValidSuggestedAmounts>,selectedInd)
			Atf::LAtfVector< INT32, 4 > roundedValidSuggestedAmounts;
			INT32 selectedInd;

			CashierPredefinedButtonsBody();
			void clear();
			bool equals(const CashierPredefinedButtonsBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierOpenValueBody	// response only
		{
			// M(b) - M(openValue)
			bool openValue;	// ???
			// fastDepositAmountInProcCur FIXME

			CashierOpenValueBody();
			void clear();
			bool equals(const CashierOpenValueBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierDepositCurrencyBody	// response only
		{
			// M(sM(4<4>4)M(b)) - M(processorCurr,M(numRoundedValidSuggestedAmounts<roundedValidSuggestedAmounts>,selectedInd),M(openValue))
			PString processorCurr;
			CashierPredefinedButtonsBody predefinedButtons;
			CashierOpenValueBody openValue;

			CashierDepositCurrencyBody();
			void clear();
			bool equals(const CashierDepositCurrencyBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierPrepopulatedCodeBody	// response only
		{
			// M(s) - M(bonusCode)
			PString bonusCode;

			CashierPrepopulatedCodeBody();
			void clear();
			bool equals(const CashierPrepopulatedCodeBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierSubType	// response only
		{
			// ss44<s> - productId,subTypeName,logoImageId,numCurrencies<currencies>
			PString productId;
			PString subTypeName;
			UINT32 logoImageId;
			Atf::LAtfVector< PString, 4 > currencies;

			CashierSubType();
			void clear();
			bool equals(const CashierSubType&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierUrlPair	// response only
		{
			// ss4 - openAccountStr,signUpLink,linkFlags
			PString openAccountStr;
			PString signUpLink;
			UINT32 linkFlags;

			CashierUrlPair();
			void clear();
			bool equals(const CashierUrlPair&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierAgeVerifyOne	// response only
		{
			// 4s - id_type,id_descr
			UINT32 id_type;
			PString id_descr;

			CashierAgeVerifyOne();
			void clear();
			bool equals(const CashierAgeVerifyOne&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierPaysystemReply	// 5128
		{
			// 2[s|1bs4<ss44<s>>4<ss4>b4<4s>444<M(s88)>b444bbM(444)b4M(4<M(sM(4<4>4)M(b))>)M()4<M(s)>] - errCode[errDescr|paySystemByte,isAvailable,paysystemMessage,numSubTypes<productId,subTypeName,logoImageId,numCurrencies<currencies>>,numUrlPairs<openAccountStr,signUpLink,linkFlags>,ageVerifyNeeded,numAgeVerifications<id_type,id_descr>,ageVerifyProcessorId,daysToClear,numAvailableCurrencies<M(currency,depositRate64,depositRate64Inverted)>,bonusWithCodeExists,validationFailuresThreshold,selfImposedLimit,allowedAmount,fastDepositIsOk,isItPs4AuthUser,M(maxCashinDaily,maxCashinWeekly,maxCashinMonthly),paysystemFeeApplies,cardNumLength,M(numDepositAvailableCurrencies<M(processorCurr,M(numRoundedValidSuggestedAmounts<roundedValidSuggestedAmounts>,selectedInd),M(openValue))>),M(),numPrepopulatedCodes<M(bonusCode)>]
			INT16 errCode;

			PString errDescr;

			BYTE paySystemByte;
			bool isAvailable;
			PString paysystemMessage;
			Atf::LAtfVector< CashierSubType, 4 > subTypes;
			Atf::LAtfVector< CashierUrlPair, 4 > urlPairs;
			bool ageVerifyNeeded;
			Atf::LAtfVector< CashierAgeVerifyOne, 4 > ageVerifications;
			UINT32 ageVerifyProcessorId;
			INT32 daysToClear;
			Atf::LAtfVector< CashierAvailableCurrency, 4 > availableCurrencies;
			bool bonusWithCodeExists;
			UINT32 validationFailuresThreshold;
			INT32 selfImposedLimit;
			INT32 allowedAmount;
			bool fastDepositIsOk;
			bool isItPs4AuthUser;

			INT32 maxCashinDaily;
			INT32 maxCashinWeekly;
			INT32 maxCashinMonthly;

			bool paysystemFeeApplies;
			//if (paysystemFeeApplies == true)
			//{
			//	CashierFeeBody fee;
			//}
			INT32 cardNumLength;
			// suggestedDepositBody

			//INT32 numOfProcessorCurrencies;
			Atf::LAtfVector< CashierDepositCurrencyBody, 4 > depositAvailableCurrencies;
			// paysystemSpecificBody

			// FIXME

			Atf::LAtfVector< CashierPrepopulatedCodeBody, 4 > prepopulatedCodes;

			CashierPaysystemReply();
			void clear();
			bool equals(const CashierPaysystemReply&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody2(CommMsgParser& _parser);
			static void validateAnonymousMsgBody2(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CHECK_PAYSYSTEM_REPLY : public Atf::MessageProtocol	// 5128
		{
			// 2[s|1bs4<ss44<s>>4<ss4>b4<4s>444<M(s88)>b444bbM(444)b4M(4<M(sM(4<4>4)M(b))>)M()4<M(s)>] - errCode[errDescr|paySystemByte,isAvailable,paysystemMessage,numSubTypes<productId,subTypeName,logoImageId,numCurrencies<currencies>>,numUrlPairs<openAccountStr,signUpLink,linkFlags>,ageVerifyNeeded,numAgeVerifications<id_type,id_descr>,ageVerifyProcessorId,daysToClear,numAvailableCurrencies<M(currency,depositRate64,depositRate64Inverted)>,bonusWithCodeExists,validationFailuresThreshold,selfImposedLimit,allowedAmount,fastDepositIsOk,isItPs4AuthUser,M(maxCashinDaily,maxCashinWeekly,maxCashinMonthly),paysystemFeeApplies,cardNumLength,M(numDepositAvailableCurrencies<M(processorCurr,M(numRoundedValidSuggestedAmounts<roundedValidSuggestedAmounts>,selectedInd),M(openValue))>),M(),numPrepopulatedCodes<M(bonusCode)>]
			CashierPaysystemReply reply;

			Protocol_MSG_CASHIER_CHECK_PAYSYSTEM_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHECK_PAYSYSTEM_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHECK_PAYSYSTEM_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHECK_PAYSYSTEM_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// NOTE: both currency and amount are optional
		// It is a known situation that fastDepositData body can be present, but empty
		struct FastDepositDataBody	// request, all members should have limits
		{
			// M(s4) - M(currency,amount)
			PString currency;	// CURRENCY_LEN: client sends longer string, possibly due to UTF encoding
			INT32 amount;

			FastDepositDataBody();
			void clear();
			bool equals(const FastDepositDataBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CHECK_PAYSYSTEM2 : public Atf::MessageProtocol	// 5554
		{
			// 1s4M(s4) - paySystemByte,requestCurrency,cardInfoId,M(currency,amount)
			BYTE paySystemByte;
			PString requestCurrency;
			UINT32 cardInfoId;	// no limit
			FastDepositDataBody fastDepositData;

			Protocol_MSG_CASHIER_CHECK_PAYSYSTEM2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHECK_PAYSYSTEM2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHECK_PAYSYSTEM2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHECK_PAYSYSTEM2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CHECK_PAYSYSTEM2_REPLY : public Atf::MessageProtocol	// 5555
		{
			// 2[s|1bs4<ss44<s>>4<ss4>b4<4s>444<M(s88)>b444bbM(444)b4M(4<M(sM(4<4>4)M(b))>)M()4<M(s)>] - errCode[errDescr|paySystemByte,isAvailable,paysystemMessage,numSubTypes<productId,subTypeName,logoImageId,numCurrencies<currencies>>,numUrlPairs<openAccountStr,signUpLink,linkFlags>,ageVerifyNeeded,numAgeVerifications<id_type,id_descr>,ageVerifyProcessorId,daysToClear,numAvailableCurrencies<M(currency,depositRate64,depositRate64Inverted)>,bonusWithCodeExists,validationFailuresThreshold,selfImposedLimit,allowedAmount,fastDepositIsOk,isItPs4AuthUser,M(maxCashinDaily,maxCashinWeekly,maxCashinMonthly),paysystemFeeApplies,cardNumLength,M(numDepositAvailableCurrencies<M(processorCurr,M(numRoundedValidSuggestedAmounts<roundedValidSuggestedAmounts>,selectedInd),M(openValue))>),M(),numPrepopulatedCodes<M(bonusCode)>]
			CashierPaysystemReply reply;

			Protocol_MSG_CASHIER_CHECK_PAYSYSTEM2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHECK_PAYSYSTEM2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHECK_PAYSYSTEM2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHECK_PAYSYSTEM2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CASHIN_HOSTED (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CASHIN_HOSTED : public Atf::MessageProtocol	// 5133
		{
			//! s4s41s4s1s4sbbb444vM(4<4 <FIXME_COND_IF> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(ss) <FIXME_COND_ELSE> M(s) <FIXME_COND_ELSE> M(4) <FIXME_COND_ELSE> M(sssssssss) <FIXME_COND_ENDIF> >) - userId,amount,currency,converted,paySystemByte,productId,bonusId,bonusCode,doNotCancelCashouts,balanceCurrency,clientBalance,cardNum,saveCardInfoRequested,fastDepositTransaction,saveInfoForFastDeposit,cardInfoId,awardId,clientDepositFlags,encryptedCardNum,M(numVec<dataId <FIXME_COND_IF> ,M(worldpay3DS2_referenceId,worldpay3DS2_windowSize) <FIXME_COND_ELSE> ,M(starswallet_mTan) <FIXME_COND_ELSE> ,M(cbsUrl,cbsUrl_wc2mt) <FIXME_COND_ELSE> ,M(applePay_encrPaymentToken) <FIXME_COND_ELSE> ,M(childTransId) <FIXME_COND_ELSE> ,M(clientAcceptHeader,clientJavaEnabled,clientScreenColorDepth,clientScreenHeight,clientScreenWidth,clientUserAgent,clientTzOffsetInMin,clientBrowserLocale,clientChallengeWinSize) <FIXME_COND_ENDIF> >)
			PString userId;
			INT32 amount;
			PString currency;
			INT32 converted;
			BYTE paySystemByte;
			PString productId;
			UINT32 bonusId;	// no limit
			PString bonusCode;
			BYTE doNotCancelCashouts;	// obsolete
			PString balanceCurrency;
			INT32 clientBalance;	// #14701 for arjel
			PString cardNum;
			bool saveCardInfoRequested;
			bool fastDepositTransaction;
			bool saveInfoForFastDeposit;
			UINT32 cardInfoId;	// PYR-24538 if !=0 then transaction was initiated with given saved cardinfo.infoid record // no limit
			UINT32 awardId;	// PYR-24840 if !=0 then transaction was initiated with promised upsell award // no limit
			UINT32 clientDepositFlags;	/*min 0*/
			PBlock encryptedCardNum;
			PaymentSpecificDataVec paymentSpecificDataVec;

			Protocol_MSG_CASHIER_CASHIN_HOSTED();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_HOSTED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_HOSTED; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_HOSTED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// server to client
		struct Protocol_MSG_CASHIER_CASHIN_HOSTED_REDIRECT : public Atf::MessageProtocol	// 5134
		{
			// 2[s|ss4s1] - errCode[errDescr|formMethod,formAction,transId,xTransStr,cardTypeByte]
			INT16 errCode;

			PString errDescr;

			PString formMethod;
			PString formAction;
			UINT32 transId;
			PString xTransStr;
			BYTE cardTypeByte;

			Protocol_MSG_CASHIER_CASHIN_HOSTED_REDIRECT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CASHIN_HOSTED_REDIRECT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CASHIN_HOSTED_REDIRECT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CASHIN_HOSTED_REDIRECT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_HOSTED_DONE : public Atf::MessageProtocol	// 5135
		{
			// s4sb - userId,transId,xTransStr,isDone
			PString userId;
			UINT32 transId;	// no limit
			PString xTransStr;
			bool isDone;

			Protocol_MSG_CASHIER_HOSTED_DONE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_HOSTED_DONE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_HOSTED_DONE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_HOSTED_DONE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// FIXME: placing in a namespace doesn't seem to work
		/*namespace workarounds
		   {
		   Message MSG_CASHIER_HOSTED_DONE_REPLY // 5135 (the same as above, it's a 'well-known old feature')
		   {
		   INT16 errCode;
		   if(errCode)
		   {
		   PString errDescr;
		   }
		   else
		   {
		// empty
		   }
		   };
		   };*/

		//--------------------------------------------- MSG_CASHIER_SUGGEST_PAYSYSTEMS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SUGGEST_PAYSYSTEMS : public Atf::MessageProtocol	// 5313
		{
			// 14 - paysystemRejectedByte,rejectedTransId
			BYTE paysystemRejectedByte;
			UINT32 rejectedTransId;	// no limit

			Protocol_MSG_CASHIER_SUGGEST_PAYSYSTEMS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SUGGEST_PAYSYSTEMS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SUGGEST_PAYSYSTEMS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SUGGEST_PAYSYSTEMS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierSuggestedPaysystem	// reply only
		{
			// M(1s) - M(cardTypeByte,usedDescription)
			BYTE cardTypeByte;
			PString usedDescription;

			CashierSuggestedPaysystem();
			void clear();
			bool equals(const CashierSuggestedPaysystem&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SUGGEST_PAYSYSTEMS_REPLY : public Atf::MessageProtocol	// 5314
		{
			// 2[s|4<M(1s)>] - errCode[errDescr|numSuggestions<M(cardTypeByte,usedDescription)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierSuggestedPaysystem, 4 > suggestions;

			Protocol_MSG_CASHIER_SUGGEST_PAYSYSTEMS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SUGGEST_PAYSYSTEMS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SUGGEST_PAYSYSTEMS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SUGGEST_PAYSYSTEMS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS : public Atf::MessageProtocol	// 5613, PYR-62719
		{
			// empty

			Protocol_MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierRecentDepositBody	// reply only
		{
			// M(14stt4s4s) - M(paysystemByte,transId,maskedCardNum,started,completed,fxAmount,fxCurrency,converted,currency)
			BYTE paysystemByte;
			UINT32 transId;
			PString maskedCardNum;
			SrvTime started;
			SrvTime completed;
			INT32 fxAmount;
			PString fxCurrency;
			INT32 converted;
			PString currency;

			CashierRecentDepositBody();
			void clear();
			bool equals(const CashierRecentDepositBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS_REPLY : public Atf::MessageProtocol	// 5614
		{
			// 2[s|4<M(14stt4s4s)>] - errCode[errDescr|numDeposits<M(paysystemByte,transId,maskedCardNum,started,completed,fxAmount,fxCurrency,converted,currency)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierRecentDepositBody, 4 > deposits;

			Protocol_MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RECENT_SUCCESSFUL_DEPOSITS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_RESCUE_PAYSYSTEMS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_RESCUE_PAYSYSTEMS : public Atf::MessageProtocol	// 5616
		{
			// empty

			Protocol_MSG_CASHIER_GET_RESCUE_PAYSYSTEMS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RESCUE_PAYSYSTEMS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RESCUE_PAYSYSTEMS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RESCUE_PAYSYSTEMS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierRescuePaysystem	// reply only
		{
			// M(14) - M(paysystemByte,flags)
			BYTE paysystemByte;
			UINT32 flags;	// enum eRescuePaysystemFlags

			CashierRescuePaysystem();
			void clear();
			bool equals(const CashierRescuePaysystem&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_RESCUE_PAYSYSTEMS_REPLY : public Atf::MessageProtocol	// 5617
		{
			// 2[s|4<M(14)>] - errCode[errDescr|numPaysystems<M(paysystemByte,flags)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierRescuePaysystem, 4 > paysystems;

			Protocol_MSG_CASHIER_GET_RESCUE_PAYSYSTEMS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RESCUE_PAYSYSTEMS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RESCUE_PAYSYSTEMS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RESCUE_PAYSYSTEMS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_VERIFY_AGE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_VERIFY_AGE : public Atf::MessageProtocol	// 5138
		{
			// 4sssdssssssss4s44 - clientReqId,userId,fullName,gender,dateOfBirth,phone,address,city,zip,county,state,country,SSN4,idType,id,contextAttemptNumber,requestPurpose
			UINT32 clientReqId;	// no limit
			PString userId;
			PString fullName;
			PString gender;
			CommSrvDate dateOfBirth;
			PString phone;
			PString address;
			PString city;
			PString zip;
			PString county;
			PString state;
			PString country;
			PString SSN4;
			UINT32 idType;	// enum eAgeVerificationPersonalIdType, NOTE: max is 8, values 5,6,7 do not exist now
			PString id;
			UINT32 contextAttemptNumber;	/*min 0*/
			UINT32 requestPurpose;

			Protocol_MSG_CASHIER_VERIFY_AGE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VERIFY_AGE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VERIFY_AGE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VERIFY_AGE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_VERIFY_AGE_REPLY : public Atf::MessageProtocol	// 5139
		{
			// 2s4 - errCode,errDescr,resultId
			INT16 errCode;
			PString errDescr;
			UINT32 resultId;

			Protocol_MSG_CASHIER_VERIFY_AGE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VERIFY_AGE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VERIFY_AGE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VERIFY_AGE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PAYSYSTEMS_AVAIL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL : public Atf::MessageProtocol	// 5149
		{
			// s - currency
			PString currency;

			Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_AVAIL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_AVAIL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct PaysystemLimitBody
		{
			// M(1s4444ss44s4b4) - M(paySystemByte,paysystemName,minDeposit,maxCashinMonthly,maxCashinWeekly,maxCashinDaily,feeStr,empty,maxDeposits,depositsHours,userLimitText,maxCashin1Trans,fastDepositIsOk,psAvailFlagToClient)
			common_structs::PaysystemLimit limit;

			PaysystemLimitBody();
			void clear();
			bool equals(const PaysystemLimitBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_REPLY : public Atf::MessageProtocol	// 5150
		{
			// 2[s|4<M(1s4444ss44s4b4)>b] - errCode[errDescr|numLimits<M(paySystemByte,paysystemName,minDeposit,maxCashinMonthly,maxCashinWeekly,maxCashinDaily,feeStr,empty,maxDeposits,depositsHours,userLimitText,maxCashin1Trans,fastDepositIsOk,psAvailFlagToClient)>,dadPreDepositAvailable]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< PaysystemLimitBody, 4 > limits;
			bool dadPreDepositAvailable;

			Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_AVAIL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_AVAIL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PAYSYSTEMS_AVAIL_PM (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PM : public Atf::MessageProtocol	// 5493
		{
			// empty

			Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PM();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_AVAIL_PM; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_AVAIL_PM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierPaySystemLimitExBody
		{
			// M(1M(1s4444ss44s4b4)b4) - M(paySystemByte,M(paySystemByte,paysystemName,minDeposit,maxCashinMonthly,maxCashinWeekly,maxCashinDaily,feeStr,empty,maxDeposits,depositsHours,userLimitText,maxCashin1Trans,fastDepositIsOk,psAvailFlagToClient),fastDepositIsOk,psAvailFlagToClient)
			BYTE paySystemByte;
			PaysystemLimitBody cashinLimit;
			bool fastDepositIsOk;
			UINT32 psAvailFlagToClient;

			CashierPaySystemLimitExBody();
			void clear();
			bool equals(const CashierPaySystemLimitExBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PM_REPLY : public Atf::MessageProtocol	// 5494
		{
			// 2[s|4<M(1M(1s4444ss44s4b4)b4)>] - errCode[errDescr|numLimits<M(paySystemByte,M(paySystemByte,paysystemName,minDeposit,maxCashinMonthly,maxCashinWeekly,maxCashinDaily,feeStr,empty,maxDeposits,depositsHours,userLimitText,maxCashin1Trans,fastDepositIsOk,psAvailFlagToClient),fastDepositIsOk,psAvailFlagToClient)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierPaySystemLimitExBody, 4 > limits;

			Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PM_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PM_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_AVAIL_PM_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_AVAIL_PM_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO : public Atf::MessageProtocol	// 5389
		{
			// s - currency
			PString currency;

			Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO_REPLY : public Atf::MessageProtocol	// 5390
		{
			// 1sss - pssNum,header,body,footer
			BYTE pssNum;
			PString header;
			PString body;
			PString footer;

			Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_AVAIL_PROMO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct WireHolderBody
		{
			// M(sssssss) - M(fullName,phone,address,city,state,zip,countryCode)
			PString fullName;
			PString phone;
			PString address;
			PString city;
			PString state;
			PString zip;
			PString countryCode;

			WireHolderBody();
			void clear();
			bool equals(const WireHolderBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct WireBankInfoBody
		{
			// M(sssssss) - M(userAccount,currencyCode,iban,swiftCode,bankName,bankAddr,comments)
			PString userAccount;	// content is context specific: might be crypted, might be plain
			PString currencyCode;
			PString iban;
			PString swiftCode;
			PString bankName;
			PString bankAddr;
			PString comments;	// GUI client doesn't have a limit on that field, anything above WIREACCOUNTS_COMMENTS_LEN will be bounced by cashier itself

			WireBankInfoBody();
			void clear();
			bool equals(const WireBankInfoBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO : public Atf::MessageProtocol	// 5170
		{
			// M(sssssss)M(sssssss) - M(fullName,phone,address,city,state,zip,countryCode),M(userAccount,currencyCode,iban,swiftCode,bankName,bankAddr,comments)
			WireHolderBody holder;
			WireBankInfoBody bankinfo;

			Protocol_MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO_REPLY : public Atf::MessageProtocol	// 5171
		{
			// 2s2 - errCode,errReplyInfo,eDbtWireBankValNoError
			INT16 errCode;
			PString errReplyInfo;
			INT16 eDbtWireBankValNoError;

			Protocol_MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVE_WIRE_CASHOUT_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_USER_LIMIT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_USER_LIMIT : public Atf::MessageProtocol	// 5178
		{
			// s - userId
			PString userId;

			Protocol_MSG_CASHIER_GET_USER_LIMIT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_LIMIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_LIMIT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_LIMIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_USER_LIMIT_REPLY : public Atf::MessageProtocol	// 5179
		{
			// 2[s|4t44s84] - errCode[errDescr|weeklyLimit,enforcedUntil,maxUserLimit,minUserLimitInCur,selfLimitCurrency,rateToUsd_x100M,regulatoryWeeklyLimit]
			INT16 errCode;

			PString errDescr;

			INT32 weeklyLimit;
			CommSrvTime enforcedUntil;
			INT32 maxUserLimit;
			INT32 minUserLimitInCur;
			PString selfLimitCurrency;
			INT64 rateToUsd_x100M;	// PYR-76896
			INT32 regulatoryWeeklyLimit;	// PYR-113183 -1 if no regulatory limit

			Protocol_MSG_CASHIER_GET_USER_LIMIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_LIMIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_LIMIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_LIMIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_USER_LIMIT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SET_USER_LIMIT : public Atf::MessageProtocol
		{
			// s448b - userId,weeklyLimit,flags_ignored,flags2_ignored,groupDepositLimit
			PString userId;
			INT32 weeklyLimit;	// -1 removes the limit
			UINT32 flags_ignored;
			UINT64 flags2_ignored;
			bool groupDepositLimit;

			Protocol_MSG_CASHIER_SET_USER_LIMIT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USER_LIMIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USER_LIMIT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USER_LIMIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_USER_LIMIT_REPLY : public Atf::MessageProtocol
		{
			// 2[s|14t] - errCode[errDescr|status,weeklyLimit,enforcedUntil]
			INT16 errCode;

			PString errDescr;

			BYTE status;
			INT32 weeklyLimit;
			SrvTime enforcedUntil;

			Protocol_MSG_CASHIER_SET_USER_LIMIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USER_LIMIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USER_LIMIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USER_LIMIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_USER_LIMIT_EX (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_USER_LIMIT_EX : public Atf::MessageProtocol	// 5427
		{
			// s - userId
			PString userId;	// parsed always

			Protocol_MSG_CASHIER_GET_USER_LIMIT_EX();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_LIMIT_EX&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_LIMIT_EX; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_LIMIT_EX"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct UserLimitReplyBody
		{
			// M(44t4444) - M(type,value,enforcedUntil,maxL,minL,maxValuePropInt,regulatoryLimit)
			UINT32 type;	// enum SelfDepositLimitType in dbm.h
			INT32 value;
			CommSrvTime enforcedUntil;
			INT32 maxL;
			INT32 minL;
			INT32 maxValuePropInt;
			INT32 regulatoryLimit;	// PYR-113183 -1 if no regulatory limit

			UserLimitReplyBody();
			void clear();
			bool equals(const UserLimitReplyBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_USER_LIMIT_EX_REPLY : public Atf::MessageProtocol	// 5428
		{
			// 2[s|M(4t)4M(44t4444)M(44t4444)M(44t4444)s8] - errCode[errDescr|M(quizPropInt,quizPropWhen),size,M(type,value,enforcedUntil,maxL,minL,maxValuePropInt,regulatoryLimit),M(type,value,enforcedUntil,maxL,minL,maxValuePropInt,regulatoryLimit),M(type,value,enforcedUntil,maxL,minL,maxValuePropInt,regulatoryLimit),selfLimitCurrency,rateToUsd_x100M]
			INT16 errCode;

			PString errDescr;

			UINT32 quizPropInt;
			SrvTime quizPropWhen;

			UINT32 size;
			UserLimitReplyBody limitDaily;
			UserLimitReplyBody limitWeekly;
			UserLimitReplyBody limitMonthly;
			PString selfLimitCurrency;
			INT64 rateToUsd_x100M;	// PYR-76896

			Protocol_MSG_CASHIER_GET_USER_LIMIT_EX_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_LIMIT_EX_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_LIMIT_EX_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_LIMIT_EX_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_USER_LIMIT_EX (cli) ------------------------------------------
		struct CashierUserLimit
		{
			// 44 - type,value
			UINT32 type;	// enum SelfDepositLimitType in dbm.h
			INT32 value;

			CashierUserLimit();
			void clear();
			bool equals(const CashierUserLimit&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_USER_LIMIT_EX : public Atf::MessageProtocol
		{
			// M(4484)4M(44)M(44)M(44)b - M(quiz,ignoreFlags1,ignoreFlags2,answers),sz,M(type,value),M(type,value),M(type,value),groupDepositLimit
			UINT32 quiz;
			UINT32 ignoreFlags1;
			UINT64 ignoreFlags2;
			UINT32 answers;

			UINT32 sz;
			CashierUserLimit daily;

			CashierUserLimit weekly;

			CashierUserLimit monthly;

			bool groupDepositLimit;

			Protocol_MSG_CASHIER_SET_USER_LIMIT_EX();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USER_LIMIT_EX&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USER_LIMIT_EX; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USER_LIMIT_EX"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody2(CommMsgParser& _parser);
			static void validateAnonymousMsgBody2(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody3(CommMsgParser& _parser);
			static void validateAnonymousMsgBody3(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct SelfDepositLimitReplyInfo
		{
			// 42s4t4 - type,code,info,curValue,enforcedUntil,newValue
			UINT32 type;	// enum SelfDepositLimitType in dbm.h
			INT16 code;
			PString info;
			INT32 curValue;
			SrvTime enforcedUntil;
			INT32 newValue;

			SelfDepositLimitReplyInfo();
			void clear();
			bool equals(const SelfDepositLimitReplyInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_USER_LIMIT_EX_REPLY : public Atf::MessageProtocol
		{
			// 2[s|4M(42s4t4)M(42s4t4)M(42s4t4)] - errCode[errDescr|sz,M(type,code,info,curValue,enforcedUntil,newValue),M(type,code,info,curValue,enforcedUntil,newValue),M(type,code,info,curValue,enforcedUntil,newValue)]
			INT16 errCode;

			PString errDescr;

			UINT32 sz;	// always 3
			SelfDepositLimitReplyInfo daily;

			SelfDepositLimitReplyInfo weekly;

			SelfDepositLimitReplyInfo monthly;

			Protocol_MSG_CASHIER_SET_USER_LIMIT_EX_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USER_LIMIT_EX_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USER_LIMIT_EX_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USER_LIMIT_EX_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody2(CommMsgParser& _parser);
			static void validateAnonymousMsgBody2(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_UNCLEARED_DEPOSITS2 (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_UNCLEARED_DEPOSITS2 : public Atf::MessageProtocol	// 5269
		{
			// empty

			Protocol_MSG_CASHIER_GET_UNCLEARED_DEPOSITS2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_UNCLEARED_DEPOSITS2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_UNCLEARED_DEPOSITS2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_UNCLEARED_DEPOSITS2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierUnclearedDepositBody
		{
			// M(4s4t4s4s4) - M(transId,psNameTranslated,amountUsd,whenClear,fppLeftToClear,balanceCurrency,balanceAmount,processorCurrency,processorAmount)
			UINT32 transId;
			PString psNameTranslated;
			INT32 amountUsd;
			CommSrvTime whenClear;
			INT32 fppLeftToClear;
			PString balanceCurrency;
			INT32 balanceAmount;
			PString processorCurrency;
			INT32 processorAmount;

			CashierUnclearedDepositBody();
			void clear();
			bool equals(const CashierUnclearedDepositBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_UNCLEARED_DEPOSITS2_REPLY : public Atf::MessageProtocol	// 5270
		{
			// 2[s|4<M(4s4t4s4s4)>44] - errCode[errDescr|numUnclearedDeposits<M(transId,psNameTranslated,amountUsd,whenClear,fppLeftToClear,balanceCurrency,balanceAmount,processorCurrency,processorAmount)>,maxNum,maxSum]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierUnclearedDepositBody, 4 > unclearedDeposits;
			UINT32 maxNum;
			UINT32 maxSum;

			Protocol_MSG_CASHIER_GET_UNCLEARED_DEPOSITS2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_UNCLEARED_DEPOSITS2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_UNCLEARED_DEPOSITS2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_UNCLEARED_DEPOSITS2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_DBT_FIELDS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_DBT_FIELDS : public Atf::MessageProtocol	// 5191
		{
			// s - userId
			PString userId;

			Protocol_MSG_CASHIER_GET_DBT_FIELDS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_DBT_FIELDS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_DBT_FIELDS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_DBT_FIELDS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct OneDbtFieldBody
		{
			// M(sss44s4) - M(fieldName,localizedDescription,fieldValue,maxLen,flag,extra,minLen)
			PString fieldName;
			PString localizedDescription;
			PString fieldValue;
			UINT32 maxLen;
			UINT32 flag;
			PString extra;
			UINT32 minLen;

			OneDbtFieldBody();
			void clear();
			bool equals(const OneDbtFieldBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_DBT_FIELDS_REPLY : public Atf::MessageProtocol	// 5192
		{
			// 2[s|4<M(sss44s4)>4<s>] - errCode[errDescr|numDbtFields<M(fieldName,localizedDescription,fieldValue,maxLen,flag,extra,minLen)>,numCurrencies<currencies>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< OneDbtFieldBody, 4 > dbtFields;
			Atf::LAtfVector< PString, 4 > currencies;

			Protocol_MSG_CASHIER_GET_DBT_FIELDS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_DBT_FIELDS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_DBT_FIELDS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_DBT_FIELDS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct DbtValidateFieldBody	// request
		{
			// M(ss) - M(fieldName,fieldValue)
			PString fieldName;
			PString fieldValue;

			DbtValidateFieldBody();
			void clear();
			bool equals(const DbtValidateFieldBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_DBT_VALIDATE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_DBT_VALIDATE : public Atf::MessageProtocol	// 5193
		{
			// ss4<M(ss)> - userId,currency,numFields<M(fieldName,fieldValue)>
			PString userId;
			PString currency;
			Atf::LAtfVector< DbtValidateFieldBody, 4 > fields;	// PYR-52360

			Protocol_MSG_CASHIER_DBT_VALIDATE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DBT_VALIDATE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DBT_VALIDATE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DBT_VALIDATE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_DBT_VALIDATE_REPLY : public Atf::MessageProtocol	// 5194
		{
			// 2s2 - errCode,errReplyInfo,eDbtWireBankValNoError
			INT16 errCode;
			PString errReplyInfo;
			INT16 eDbtWireBankValNoError;

			Protocol_MSG_CASHIER_DBT_VALIDATE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DBT_VALIDATE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DBT_VALIDATE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DBT_VALIDATE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_AVLS_REQUEST (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_AVLS_REQUEST : public Atf::MessageProtocol	// 5221
		{
			// 4sss44 - requestType,userId,phoneToContact,timeToContact,avSystem,resultId
			UINT32 requestType;	// eLiveSupportRequestType
			PString userId;
			PString phoneToContact;
			PString timeToContact;
			UINT32 avSystem;	// eAgeVerificationSystem
			UINT32 resultId;	// no limit

			Protocol_MSG_CASHIER_AVLS_REQUEST();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AVLS_REQUEST&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AVLS_REQUEST; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AVLS_REQUEST"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_AVLS_REQUEST_REPLY : public Atf::MessageProtocol	// 5222
		{
			// 2[s|4] - errCode[errDescr|requestType]
			INT16 errCode;

			PString errDescr;

			UINT32 requestType;

			Protocol_MSG_CASHIER_AVLS_REQUEST_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_AVLS_REQUEST_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_AVLS_REQUEST_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_AVLS_REQUEST_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_PENDING_CASHOUTS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_PENDING_CASHOUTS : public Atf::MessageProtocol	// 5250
		{
			// b - includeHoldStatus_obsolete
			bool includeHoldStatus_obsolete;

			Protocol_MSG_CASHIER_GET_PENDING_CASHOUTS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_PENDING_CASHOUTS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_PENDING_CASHOUTS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_PENDING_CASHOUTS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct OneTransBody	// reply only
		{
			// M(4s4s4tssb1s) - M(transId,psForCashout,returnedAmount,currency,converted,started,status,balanceCurrency,canBeCancelled,cardTypeByte,maskedReference)
			UINT32 transId;
			PString psForCashout;
			INT32 returnedAmount;
			PString currency;
			INT32 converted;
			CommSrvTime started;
			PString status;
			PString balanceCurrency;
			bool canBeCancelled;
			BYTE cardTypeByte;
			PString maskedReference;

			OneTransBody();
			void clear();
			bool equals(const OneTransBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_PENDING_CASHOUTS_REPLY : public Atf::MessageProtocol	// 5251
		{
			// 4<M(4s4s4tssb1s)> - numCashoutTransactions<M(transId,psForCashout,returnedAmount,currency,converted,started,status,balanceCurrency,canBeCancelled,cardTypeByte,maskedReference)>
			Atf::LAtfVector< OneTransBody, 4 > cashoutTransactions;

			Protocol_MSG_CASHIER_GET_PENDING_CASHOUTS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_PENDING_CASHOUTS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_PENDING_CASHOUTS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_PENDING_CASHOUTS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CANCEL_PENDING_CASHOUTS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CANCEL_PENDING_CASHOUTS : public Atf::MessageProtocol	// 5252
		{
			// 4<4>s - numIdsToCancel<idsToCancel>,bonusCode
			Atf::LAtfVector< UINT32, 4 > idsToCancel;	// PYR-52366
			PString bonusCode;

			Protocol_MSG_CASHIER_CANCEL_PENDING_CASHOUTS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CANCEL_PENDING_CASHOUTS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CANCEL_PENDING_CASHOUTS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CANCEL_PENDING_CASHOUTS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct PendingCashoutStatus
		{
			// 2s - errCode,errDescr
			INT16 errCode;
			PString errDescr;

			PendingCashoutStatus();
			void clear();
			bool equals(const PendingCashoutStatus&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CANCEL_PENDING_CASHOUTS_REPLY : public Atf::MessageProtocol	// 5253
		{
			// 2[s|4<2s>] - errCode[errDescr|numCashoutStatuses<errCode,errDescr>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< PendingCashoutStatus, 4 > cashoutStatuses;

			Protocol_MSG_CASHIER_CANCEL_PENDING_CASHOUTS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CANCEL_PENDING_CASHOUTS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CANCEL_PENDING_CASHOUTS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CANCEL_PENDING_CASHOUTS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_ENVOY_LBT_GET_BANKS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_ENVOY_LBT_GET_BANKS : public Atf::MessageProtocol	// 5261
		{
			// sb1 - procCurrency,forAllCurrencies,paysystemByte
			PString procCurrency;
			bool forAllCurrencies;
			BYTE paysystemByte;

			Protocol_MSG_CASHIER_ENVOY_LBT_GET_BANKS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ENVOY_LBT_GET_BANKS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ENVOY_LBT_GET_BANKS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ENVOY_LBT_GET_BANKS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct EnvoyBankInfoBody	// reply only
		{
			// M(4ssssssssssbsss4s) - M(bankrefId,currency,name,city,address,swift,url,accountNum,iban,benficiary,extraInfo,preferred,paysystem,bankId,comment,flags,country)
			UINT32 bankrefId;
			PString currency;
			PString name;
			PString city;
			PString address;
			PString swift;
			PString url;
			PString accountNum;
			PString iban;
			PString benficiary;
			PString extraInfo;
			bool preferred;
			PString paysystem;
			PString bankId;
			PString comment;
			UINT32 flags;
			PString country;

			EnvoyBankInfoBody();
			void clear();
			bool equals(const EnvoyBankInfoBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ENVOY_LBT_GET_BANKS_REPLY : public Atf::MessageProtocol	// 5262
		{
			// 2[s|4<M(4ssssssssssbsss4s)>] - errCode[errDescr|numBanksForClient<M(bankrefId,currency,name,city,address,swift,url,accountNum,iban,benficiary,extraInfo,preferred,paysystem,bankId,comment,flags,country)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< EnvoyBankInfoBody, 4 > banksForClient;

			Protocol_MSG_CASHIER_ENVOY_LBT_GET_BANKS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ENVOY_LBT_GET_BANKS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ENVOY_LBT_GET_BANKS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ENVOY_LBT_GET_BANKS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_ENVOY_LBT_BANK_SELECTED (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_ENVOY_LBT_BANK_SELECTED : public Atf::MessageProtocol	// 5263
		{
			// s4ssssssssssb4 - bonusCode,bankrefId,currency,name,city,address,swift,url,accountNum,iban,benficiary,extraInfo,preferred,intendedProcAmount
			PString bonusCode;
			UINT32 bankrefId;	// the fields are mostly identical to EnvoyBankInfoBody, but not completely // no limit
			PString currency;
			PString name;
			PString city;
			PString address;
			PString swift;
			PString url;
			PString accountNum;
			PString iban;
			PString benficiary;
			PString extraInfo;
			bool preferred;
			INT32 intendedProcAmount;

			Protocol_MSG_CASHIER_ENVOY_LBT_BANK_SELECTED();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ENVOY_LBT_BANK_SELECTED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ENVOY_LBT_BANK_SELECTED; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ENVOY_LBT_BANK_SELECTED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ENVOY_LBT_BANK_SELECTED_REPLY : public Atf::MessageProtocol	// 5264
		{
			// 2[s|s] - errCode[errDescr|retStr]
			INT16 errCode;

			PString errDescr;

			PString retStr;

			Protocol_MSG_CASHIER_ENVOY_LBT_BANK_SELECTED_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ENVOY_LBT_BANK_SELECTED_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ENVOY_LBT_BANK_SELECTED_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ENVOY_LBT_BANK_SELECTED_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PSTARSPAY_BANK_SELECTED (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PSTARSPAY_BANK_SELECTED : public Atf::MessageProtocol	// 5393
		{
			// s44s - bonusCode,bankRefId,intendedProcAmount,processorCurrency
			PString bonusCode;
			UINT32 bankRefId;	// no limit
			INT32 intendedProcAmount;
			PString processorCurrency;

			Protocol_MSG_CASHIER_PSTARSPAY_BANK_SELECTED();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PSTARSPAY_BANK_SELECTED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PSTARSPAY_BANK_SELECTED; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PSTARSPAY_BANK_SELECTED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PSTARSPAY_BANK_SELECTED_REPLY : public Atf::MessageProtocol	// 5394
		{
			// 2[s|sssbss44ssss] - errCode[errDescr|name,benficiary,sccountNum,useReference,processorExtras,currency,intendedProcAmount,amount,comment,empty,extraInfo,url]
			INT16 errCode;

			PString errDescr;

			PString name;
			PString benficiary;
			PString sccountNum;
			bool useReference;
			PString processorExtras;
			PString currency;
			INT32 intendedProcAmount;
			INT32 amount;
			PString comment;
			PString empty;
			PString extraInfo;
			PString url;

			Protocol_MSG_CASHIER_PSTARSPAY_BANK_SELECTED_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PSTARSPAY_BANK_SELECTED_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PSTARSPAY_BANK_SELECTED_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PSTARSPAY_BANK_SELECTED_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CONVRATES_SUBSET (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CONVRATES_SUBSET : public Atf::MessageProtocol	// 5279
		{
			// 4sb - intActionType,incomingCur,curIsSrcNotDst
			UINT32 intActionType;
			PString incomingCur;
			bool curIsSrcNotDst;

			Protocol_MSG_CASHIER_CONVRATES_SUBSET();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVRATES_SUBSET&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVRATES_SUBSET; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVRATES_SUBSET"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierConvRateBody	// reply only
		{
			// M(s88) - M(outgoingCur,rateFin,inverseRateFin)
			PString outgoingCur;
			UINT64 rateFin;
			UINT64 inverseRateFin;

			CashierConvRateBody();
			void clear();
			bool equals(const CashierConvRateBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CONVRATES_SUBSET_REPLY : public Atf::MessageProtocol	// 5280
		{
			// 2[s|4<M(s88)>] - errCode[errDescr|numConvRates<M(outgoingCur,rateFin,inverseRateFin)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierConvRateBody, 4 > convRates;

			Protocol_MSG_CASHIER_CONVRATES_SUBSET_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVRATES_SUBSET_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVRATES_SUBSET_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVRATES_SUBSET_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_DEFAULT_ACCOUNT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SET_DEFAULT_ACCOUNT : public Atf::MessageProtocol	// 5285
		{
			// s - newDefaultCurrency
			PString newDefaultCurrency;

			Protocol_MSG_CASHIER_SET_DEFAULT_ACCOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_DEFAULT_ACCOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_DEFAULT_ACCOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_DEFAULT_ACCOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_DEFAULT_ACCOUNT_REPLY : public Atf::MessageProtocol	// 5286
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_SET_DEFAULT_ACCOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_DEFAULT_ACCOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_DEFAULT_ACCOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_DEFAULT_ACCOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_NEW_CURRENCY_ACCOUNT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_NEW_CURRENCY_ACCOUNT : public Atf::MessageProtocol	// 5287
		{
			// s - newCurrencyToAdd
			PString newCurrencyToAdd;

			Protocol_MSG_CASHIER_NEW_CURRENCY_ACCOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_NEW_CURRENCY_ACCOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_NEW_CURRENCY_ACCOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_NEW_CURRENCY_ACCOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_NEW_CURRENCY_ACCOUNT_REPLY : public Atf::MessageProtocol	// 5288
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_NEW_CURRENCY_ACCOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_NEW_CURRENCY_ACCOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_NEW_CURRENCY_ACCOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_NEW_CURRENCY_ACCOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_DELETE_CURRENCY_ACCOUNT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_DELETE_CURRENCY_ACCOUNT : public Atf::MessageProtocol	// 5289
		{
			// sb - currencyToDelete,disregradBonuses
			PString currencyToDelete;
			bool disregradBonuses;

			Protocol_MSG_CASHIER_DELETE_CURRENCY_ACCOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DELETE_CURRENCY_ACCOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DELETE_CURRENCY_ACCOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DELETE_CURRENCY_ACCOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_DELETE_CURRENCY_ACCOUNT_REPLY : public Atf::MessageProtocol	// 5290
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_DELETE_CURRENCY_ACCOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DELETE_CURRENCY_ACCOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DELETE_CURRENCY_ACCOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DELETE_CURRENCY_ACCOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER (cli) ------------------------------------------
		struct AccountTransferInfo
		{
			// 4s4s4 - amountSrc,currencySrc,amountDst,currencyDst,chipsType
			INT32 amountSrc;
			PString currencySrc;
			INT32 amountDst;
			PString currencyDst;
			INT32 chipsType;

			AccountTransferInfo();
			void clear();
			bool equals(const AccountTransferInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER : public Atf::MessageProtocol	// 5303
		{
			// 4<4s4s4> - numTransfers<amountSrc,currencySrc,amountDst,currencyDst,chipsType>
			Atf::LAtfVector< AccountTransferInfo, 4 > transfers;	// PYR-52360

			Protocol_MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER_REPLY : public Atf::MessageProtocol	// 5304
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CURRENCY_ACCOUNT_MULTI_TRANSFER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_USER_PRIVS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_USER_PRIVS : public Atf::MessageProtocol	// 5295
		{
			// s - unusedStr
			PString unusedStr;

			Protocol_MSG_CASHIER_GET_USER_PRIVS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_PRIVS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_PRIVS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_PRIVS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierUserPrivs
		{
			// 48bbb8 - privs,privs2,modelessCashierAllowedForUser,forceCashout,dummy,privs3
			UINT32 privs;
			UINT64 privs2;
			bool modelessCashierAllowedForUser;
			bool forceCashout;
			bool dummy;	// always true
			UINT64 privs3;

			CashierUserPrivs();
			void clear();
			bool equals(const CashierUserPrivs&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_USER_PRIVS_REPLY : public Atf::MessageProtocol	// 5296
		{
			// 48bbb8 - privs,privs2,modelessCashierAllowedForUser,forceCashout,dummy,privs3
			CashierUserPrivs privs;

			Protocol_MSG_CASHIER_GET_USER_PRIVS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_PRIVS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_PRIVS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_PRIVS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_USER_PRIVS_2 (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_USER_PRIVS_2 : public Atf::MessageProtocol	// 5556
		{
			// s - unusedStr
			PString unusedStr;

			Protocol_MSG_CASHIER_GET_USER_PRIVS_2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_PRIVS_2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_PRIVS_2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_PRIVS_2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_USER_PRIVS_2_REPLY : public Atf::MessageProtocol	// 5557
		{
			// 2[s|48bbb8] - errCode[errDescr|privs,privs2,modelessCashierAllowedForUser,forceCashout,dummy,privs3]
			INT16 errCode;

			PString errDescr;

			CashierUserPrivs privs;

			Protocol_MSG_CASHIER_GET_USER_PRIVS_2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_PRIVS_2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_PRIVS_2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_PRIVS_2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_REAL_PRE_TRANSFER (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_REAL_PRE_TRANSFER : public Atf::MessageProtocol	// 5293
		{
			// ss4s - userFrom,userTo,amountFrom,currencyFrom
			PString userFrom;
			PString userTo;	// was USER_NAME_LEN, client fails to limit this field
			INT32 amountFrom;
			PString currencyFrom;

			Protocol_MSG_CASHIER_REAL_PRE_TRANSFER();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_REAL_PRE_TRANSFER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_REAL_PRE_TRANSFER; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_REAL_PRE_TRANSFER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_REAL_PRE_TRANSFER_REPLY : public Atf::MessageProtocol	// 5294
		{
			// 2[s|sss14] - errCode[errDescr|userId,city,country,showCity,imageId]
			INT16 errCode;

			PString errDescr;

			PString userId;
			PString city;
			PString country;
			BYTE showCity;
			UINT32 imageId;

			Protocol_MSG_CASHIER_REAL_PRE_TRANSFER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_REAL_PRE_TRANSFER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_REAL_PRE_TRANSFER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_REAL_PRE_TRANSFER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_REAL_TRANSFER (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_REAL_TRANSFER : public Atf::MessageProtocol	// 5297
		{
			// ss4ss - userFrom,userTo,amountFrom,userComment,currencyFrom
			PString userFrom;
			PString userTo;
			INT32 amountFrom;
			PString userComment;
			PString currencyFrom;

			Protocol_MSG_CASHIER_REAL_TRANSFER();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_REAL_TRANSFER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_REAL_TRANSFER; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_REAL_TRANSFER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_REAL_TRANSFER_REPLY : public Atf::MessageProtocol	// 5298
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_REAL_TRANSFER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_REAL_TRANSFER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_REAL_TRANSFER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_REAL_TRANSFER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CREATE_REDEEM_ACCOUNT (cli) ------------------------------------------
		struct CashierRedeemAccountData
		{
			// ss - name,acct
			PString name;
			PString acct;
			// UINT32 userIntId; // NOTE: only for admin connection

			CashierRedeemAccountData();
			void clear();
			bool equals(const CashierRedeemAccountData&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CREATE_REDEEM_ACCOUNT : public Atf::MessageProtocol	// 5311
		{
			// 14<ss> - paysystemByte,numAccounts<name,acct>
			BYTE paysystemByte;
			Atf::LAtfVector< CashierRedeemAccountData, 4 > accounts;	// PYR-52360

			Protocol_MSG_CASHIER_CREATE_REDEEM_ACCOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CREATE_REDEEM_ACCOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CREATE_REDEEM_ACCOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CREATE_REDEEM_ACCOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CREATE_REDEEM_ACCOUNT_REPLY : public Atf::MessageProtocol	// 5312
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_CREATE_REDEEM_ACCOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CREATE_REDEEM_ACCOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CREATE_REDEEM_ACCOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CREATE_REDEEM_ACCOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_USER_ACCT_PROC_REGISTRATION (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_USER_ACCT_PROC_REGISTRATION : public Atf::MessageProtocol	// 5317
		{
			// s1 - userId,paysystemByte
			PString userId;
			BYTE paysystemByte;

			Protocol_MSG_CASHIER_USER_ACCT_PROC_REGISTRATION();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_USER_ACCT_PROC_REGISTRATION&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_USER_ACCT_PROC_REGISTRATION; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_USER_ACCT_PROC_REGISTRATION"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_USER_ACCT_PROC_REGISTRATION_REPLY : public Atf::MessageProtocol	// 5318
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_USER_ACCT_PROC_REGISTRATION_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_USER_ACCT_PROC_REGISTRATION_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_USER_ACCT_PROC_REGISTRATION_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_USER_ACCT_PROC_REGISTRATION_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CHECK_PLI (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CHECK_PLI : public Atf::MessageProtocol	// 5321
		{
			// 1s - paySystemByte,accountCurrency
			BYTE paySystemByte;
			PString accountCurrency;

			Protocol_MSG_CASHIER_CHECK_PLI();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHECK_PLI&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHECK_PLI; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHECK_PLI"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CHECK_PLI_REPLY : public Atf::MessageProtocol	// 5322
		{
			// 2[s|144444] - errCode[errDescr|cardTypeByte,minDepositInCur,maxCashinDaily,maxCashinWeekly,maxCashinMonthly,levelId]
			INT16 errCode;

			PString errDescr;

			BYTE cardTypeByte;
			INT32 minDepositInCur;
			INT32 maxCashinDaily;
			INT32 maxCashinWeekly;
			INT32 maxCashinMonthly;
			UINT32 levelId;

			Protocol_MSG_CASHIER_CHECK_PLI_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHECK_PLI_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHECK_PLI_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHECK_PLI_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_INCREASE_PLI (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_INCREASE_PLI : public Atf::MessageProtocol	// 5323
		{
			// 14 - paySystemByte,nextLevelId
			BYTE paySystemByte;
			UINT32 nextLevelId;	// level id, no limit

			Protocol_MSG_CASHIER_INCREASE_PLI();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_INCREASE_PLI&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_INCREASE_PLI; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_INCREASE_PLI"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_INCREASE_PLI_REPLY : public Atf::MessageProtocol	// 5324
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_INCREASE_PLI_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_INCREASE_PLI_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_INCREASE_PLI_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_INCREASE_PLI_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SEND_USER_DOCS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SEND_USER_DOCS : public Atf::MessageProtocol	// 5325
		{
			// 1 - paySystemByte
			BYTE paySystemByte;

			Protocol_MSG_CASHIER_SEND_USER_DOCS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SEND_USER_DOCS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SEND_USER_DOCS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SEND_USER_DOCS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SEND_USER_DOCS_REPLY : public Atf::MessageProtocol	// 5326
		{
			// 2[s|v] - errCode[errDescr|data]
			INT16 errCode;

			PString errDescr;

			PBlock data;

			Protocol_MSG_CASHIER_SEND_USER_DOCS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SEND_USER_DOCS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SEND_USER_DOCS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SEND_USER_DOCS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PAYSYSTEMS_LIMITS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PAYSYSTEMS_LIMITS : public Atf::MessageProtocol	// 5338
		{
			// 4<1> - numPaySystemBytes<paySystemBytes>
			Atf::LAtfVector< BYTE, 4 > paySystemBytes;	// PYR-52360

			Protocol_MSG_CASHIER_PAYSYSTEMS_LIMITS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_LIMITS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_LIMITS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_LIMITS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct PaysystemLimit2Body	// they reportedly wanted the format to be the same as PaysystemLimit
		{
			// M(s1s4444ss44s4b4) - M(currency,paySystemByte,paysystemName,minDeposit,maxCashinMonthly,maxCashinWeekly,maxCashinDaily,feeStr,empty,maxDeposits,depositsHours,userLimitText,maxCashin1Trans,fastDepositIsOk,psAvailFlagToClient)
			PString currency;	// <-- this field is not in PaysystemLimit
			common_structs::PaysystemLimit limit;

			PaysystemLimit2Body();
			void clear();
			bool equals(const PaysystemLimit2Body&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PAYSYSTEMS_LIMITS_REPLY : public Atf::MessageProtocol	// 5339
		{
			// 2[s|4<M(s1s4444ss44s4b4)>] - errCode[errDescr|numLimits<M(currency,paySystemByte,paysystemName,minDeposit,maxCashinMonthly,maxCashinWeekly,maxCashinDaily,feeStr,empty,maxDeposits,depositsHours,userLimitText,maxCashin1Trans,fastDepositIsOk,psAvailFlagToClient)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< PaysystemLimit2Body, 4 > limits;

			Protocol_MSG_CASHIER_PAYSYSTEMS_LIMITS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PAYSYSTEMS_LIMITS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PAYSYSTEMS_LIMITS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PAYSYSTEMS_LIMITS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CONVERT_ALL_ASSETS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CONVERT_ALL_ASSETS : public Atf::MessageProtocol	// 5341
		{
			//if (0) // is admin connection
			//{
			//	UINT32 adminReqId;
			//	PString userId;
			//	UINT32 conversionFlags;
			//}
			//else
			//{
			// empty
			//}

			Protocol_MSG_CASHIER_CONVERT_ALL_ASSETS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVERT_ALL_ASSETS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVERT_ALL_ASSETS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVERT_ALL_ASSETS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct UserAllAssetsOneBody	// reply only
		{
			// M(44s48) - M(assetType,typedAmount,currency,chipsDst,convRate)
			INT32 assetType;
			INT32 typedAmount;
			PString currency;
			INT32 chipsDst;
			UINT64 convRate;

			UserAllAssetsOneBody();
			void clear();
			bool equals(const UserAllAssetsOneBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct UserAllAssets	// reply only
		{
			// 4s4<M(44s48)> - availDst,currencyDst,numAssets<M(assetType,typedAmount,currency,chipsDst,convRate)>
			INT32 availDst;
			PString currencyDst;
			Atf::LAtfVector< UserAllAssetsOneBody, 4 > assets;

			UserAllAssets();
			void clear();
			bool equals(const UserAllAssets&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CONVERT_ALL_ASSETS_REPLY : public Atf::MessageProtocol	// 5342
		{
			// 2[s|4s4<M(44s48)>] - errCode[errDescr|availDst,currencyDst,numAssets<M(assetType,typedAmount,currency,chipsDst,convRate)>]
			INT16 errCode;

			PString errDescr;

			UserAllAssets allAssets;

			Protocol_MSG_CASHIER_CONVERT_ALL_ASSETS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVERT_ALL_ASSETS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVERT_ALL_ASSETS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVERT_ALL_ASSETS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_RMF_BANKACCOUNT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_RMF_BANKACCOUNT : public Atf::MessageProtocol	// 5343
		{
			// s - unusedStr
			PString unusedStr;

			Protocol_MSG_CASHIER_GET_RMF_BANKACCOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RMF_BANKACCOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RMF_BANKACCOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RMF_BANKACCOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_RMF_BANKACCOUNT_REPLY : public Atf::MessageProtocol	// 5344
		{
			// 2[s|ssbs] - errCode[errDescr|bankName,accountNumberDecrypted,isValid,bankCountry]
			//if(0)
			//{
			//	UINT32 origReqId; // depends on conn props
			//}
			INT16 errCode;

			PString errDescr;

			PString bankName;
			PString accountNumberDecrypted;
			bool isValid;
			PString bankCountry;

			Protocol_MSG_CASHIER_GET_RMF_BANKACCOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RMF_BANKACCOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RMF_BANKACCOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RMF_BANKACCOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_RMF_BANKACCOUNT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SET_RMF_BANKACCOUNT : public Atf::MessageProtocol	// 5345
		{
			// sss - bankName,accountNumberDecrypted,bankCountry
			PString bankName;
			PString accountNumberDecrypted;
			PString bankCountry;

			Protocol_MSG_CASHIER_SET_RMF_BANKACCOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_RMF_BANKACCOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_RMF_BANKACCOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_RMF_BANKACCOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_RMF_BANKACCOUNT_REPLY : public Atf::MessageProtocol	// 5346
		{
			// 2[s|sbM(1s)] - errCode[errDescr|reference,isValid,M(realMoneyOk,accountNumberDecrypted)]
			INT16 errCode;

			PString errDescr;

			PString reference;
			bool isValid;

			BYTE realMoneyOk;
			PString accountNumberDecrypted;

			Protocol_MSG_CASHIER_SET_RMF_BANKACCOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_RMF_BANKACCOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_RMF_BANKACCOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_RMF_BANKACCOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_SPENDING_LIMIT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_SPENDING_LIMIT : public Atf::MessageProtocol	// 5347
		{
			// empty

			Protocol_MSG_CASHIER_GET_SPENDING_LIMIT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_SPENDING_LIMIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_SPENDING_LIMIT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_SPENDING_LIMIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_SPENDING_LIMIT_REPLY : public Atf::MessageProtocol	// 5348
		{
			// 2[s|4444<4>] - errCode[errDescr|spendingLimitOUT,availForSpending,totalBalance,numLimitsArray<limitsArray>]
			INT16 errCode;

			PString errDescr;

			INT32 spendingLimitOUT;
			INT32 availForSpending;
			INT32 totalBalance;
			Atf::LAtfVector< INT32, 4 > limitsArray;

			Protocol_MSG_CASHIER_GET_SPENDING_LIMIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_SPENDING_LIMIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_SPENDING_LIMIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_SPENDING_LIMIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_SPENDING_LIMIT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SET_SPENDING_LIMIT : public Atf::MessageProtocol	// 5349, PYR-33650
		{
			// 448 - spendingLimit,flags_ignored,flags2_ignored
			INT32 spendingLimit;
			UINT32 flags_ignored;	// old clients and web-cashier can send that
			UINT64 flags2_ignored;	// old clients and web-cashier can send that

			Protocol_MSG_CASHIER_SET_SPENDING_LIMIT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_SPENDING_LIMIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_SPENDING_LIMIT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_SPENDING_LIMIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_SPENDING_LIMIT_REPLY : public Atf::MessageProtocol	// 5350
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_SET_SPENDING_LIMIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_SPENDING_LIMIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_SPENDING_LIMIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_SPENDING_LIMIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_FRMIGRATION_CANCEL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_FRMIGRATION_CANCEL : public Atf::MessageProtocol	// 5352
		{
			// 4 - cancelCode
			UINT32 cancelCode;	// eFrMigrationCancelCode (trackCode in client, migrationStep in cashier)

			Protocol_MSG_CASHIER_FRMIGRATION_CANCEL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_CANCEL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_CANCEL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_CANCEL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_FRMIGRATION_CANCEL_REPLY : public Atf::MessageProtocol	// 5353
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_FRMIGRATION_CANCEL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_CANCEL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_CANCEL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_CANCEL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_FRMIGRATION_GET_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_FRMIGRATION_GET_INFO : public Atf::MessageProtocol	// 5354
		{
			// 4s - migrTypeInt,linkedUserId
			UINT32 migrTypeInt;
			PString linkedUserId;	// client doesn't have a limit

			Protocol_MSG_CASHIER_FRMIGRATION_GET_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_GET_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_GET_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_GET_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_FRMIGRATION_GET_INFO_REPLY : public Atf::MessageProtocol	// 5355
		{
			// 2[s|4s4<M(44s48)>4s4<M(44s48)>44444] - errCode[errDescr|availDst,currencyDst,numAssets<M(assetType,typedAmount,currency,chipsDst,convRate)>,availDst,currencyDst,numAssets<M(assetType,typedAmount,currency,chipsDst,convRate)>,fppBalance,vipRewardBonusFpp,monthlyVpp,yearlyVpp,totalCashAmount]
			INT16 errCode;

			PString errDescr;

			UserAllAssets cashAssets;
			UserAllAssets tChipsAssets;
			UINT32 fppBalance;
			UINT32 vipRewardBonusFpp;
			UINT32 monthlyVpp;
			UINT32 yearlyVpp;
			UINT32 totalCashAmount;

			Protocol_MSG_CASHIER_FRMIGRATION_GET_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_GET_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_GET_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_GET_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_FRMIGRATION (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_FRMIGRATION : public Atf::MessageProtocol	// 5356
		{
			// empty

			Protocol_MSG_CASHIER_FRMIGRATION();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_FRMIGRATION_REPLY : public Atf::MessageProtocol	// 5357
		{
			// 2[s|444] - errCode[errDescr|overcreditTransId,migrationId,overcreditAmount]
			INT16 errCode;

			PString errDescr;

			UINT32 overcreditTransId;
			UINT32 migrationId;
			INT32 overcreditAmount;

			Protocol_MSG_CASHIER_FRMIGRATION_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_FRMIGRATION_DEPOSIT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_FRMIGRATION_DEPOSIT : public Atf::MessageProtocol	// 5360
		{
			// b444 - doDeposit,overcreditTransId,migrationId,amount
			bool doDeposit;
			UINT32 overcreditTransId;	// no limit
			UINT32 migrationId;	// no limit
			INT32 amount;

			Protocol_MSG_CASHIER_FRMIGRATION_DEPOSIT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_DEPOSIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_DEPOSIT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_DEPOSIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_FRMIGRATION_DEPOSIT_REPLY : public Atf::MessageProtocol	// 5361
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_FRMIGRATION_DEPOSIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FRMIGRATION_DEPOSIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FRMIGRATION_DEPOSIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FRMIGRATION_DEPOSIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_ESMIGRATION2_CANCEL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_ESMIGRATION2_CANCEL : public Atf::MessageProtocol	// 5443
		{
			// 4 - cancelCode
			UINT32 cancelCode;	// eEsMigrationCancelCode (trackCode in client, migrationStep in cashier)

			Protocol_MSG_CASHIER_ESMIGRATION2_CANCEL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2_CANCEL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2_CANCEL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2_CANCEL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ESMIGRATION2_CANCEL_REPLY : public Atf::MessageProtocol	// 5444
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_ESMIGRATION2_CANCEL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2_CANCEL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2_CANCEL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2_CANCEL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_ESMIGRATION2_GET_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_ESMIGRATION2_GET_INFO : public Atf::MessageProtocol	// 5445
		{
			// empty

			Protocol_MSG_CASHIER_ESMIGRATION2_GET_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2_GET_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2_GET_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2_GET_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ESMIGRATION2_GET_INFO_REPLY : public Atf::MessageProtocol	// 5446
		{
			// 2[s|4s4<M(44s48)>4s4<M(44s48)>44444] - errCode[errDescr|availDst,currencyDst,numAssets<M(assetType,typedAmount,currency,chipsDst,convRate)>,availDst,currencyDst,numAssets<M(assetType,typedAmount,currency,chipsDst,convRate)>,fppBalance,vipRewardBonusFpp,monthlyVpp,yearlyVpp,totalCashAmount]
			INT16 errCode;

			PString errDescr;

			UserAllAssets cashAssets;
			UserAllAssets tChipsAssets;
			UINT32 fppBalance;
			UINT32 vipRewardBonusFpp;
			UINT32 monthlyVpp;
			UINT32 yearlyVpp;
			UINT32 totalCashAmount;

			Protocol_MSG_CASHIER_ESMIGRATION2_GET_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2_GET_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2_GET_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2_GET_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_ESMIGRATION2 (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_ESMIGRATION2 : public Atf::MessageProtocol	// 5447
		{
			// empty

			Protocol_MSG_CASHIER_ESMIGRATION2();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ESMIGRATION2_REPLY : public Atf::MessageProtocol	// 5448
		{
			// 2[s|444s] - errCode[errDescr|overcreditTransId,migrationId,overcreditAmount,voucher]
			INT16 errCode;

			PString errDescr;

			UINT32 overcreditTransId;
			UINT32 migrationId;
			UINT32 overcreditAmount;
			PString voucher;

			Protocol_MSG_CASHIER_ESMIGRATION2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_ESMIGRATION2_DEPOSIT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_ESMIGRATION2_DEPOSIT : public Atf::MessageProtocol	// 5449
		{
			// b444 - doDeposit,overcreditTransId,migrationId,amountEur
			bool doDeposit;
			UINT32 overcreditTransId;	// no limit
			UINT32 migrationId;	// no limit
			INT32 amountEur;

			Protocol_MSG_CASHIER_ESMIGRATION2_DEPOSIT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2_DEPOSIT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2_DEPOSIT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2_DEPOSIT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ESMIGRATION2_DEPOSIT_REPLY : public Atf::MessageProtocol	// 5450
		{
			// 2[s|s] - errCode[errDescr|descrForUser]
			INT16 errCode;

			PString errDescr;

			PString descrForUser;

			Protocol_MSG_CASHIER_ESMIGRATION2_DEPOSIT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ESMIGRATION2_DEPOSIT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ESMIGRATION2_DEPOSIT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ESMIGRATION2_DEPOSIT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_VALIDATION_CANCEL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_VALIDATION_CANCEL : public Atf::MessageProtocol	// 5364
		{
			// 144 - paySystemByte,digits,attempts
			BYTE paySystemByte;
			UINT32 digits;	// it's actually a bitmask, old cardnum string (if exists) gets compared with a new one, letter by letter
			// every '1' bit in the bitmask represents one letter difference, bit position = character position in cardnum
			UINT32 attempts;

			Protocol_MSG_CASHIER_VALIDATION_CANCEL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VALIDATION_CANCEL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VALIDATION_CANCEL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VALIDATION_CANCEL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_VALIDATION_CANCEL_REPLY : public Atf::MessageProtocol	// 5365
		{
			// 2 - errCode
			INT16 errCode;

			Protocol_MSG_CASHIER_VALIDATION_CANCEL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VALIDATION_CANCEL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VALIDATION_CANCEL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VALIDATION_CANCEL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_TCHIPS_PRESALE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_TCHIPS_PRESALE : public Atf::MessageProtocol	// 5378
		{
			// sb44s - anotherUserId,isBuyer,tChips,cash,currency
			PString anotherUserId;	// was USER_NAME_LEN, client fails to limit this field
			bool isBuyer;
			INT32 tChips;
			INT32 cash;
			PString currency;

			Protocol_MSG_CASHIER_TCHIPS_PRESALE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_PRESALE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_PRESALE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_PRESALE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_TCHIPS_PRESALE_REPLY : public Atf::MessageProtocol	// 5379
		{
			// 2[s|ssb44sss1] - errCode[errDescr|seller,buyer,isBuyer,tChips,cash,userId,city,country,showCity]
			INT16 errCode;

			PString errDescr;

			PString seller;
			PString buyer;
			bool isBuyer;
			INT32 tChips;
			INT32 cash;
			PString userId;
			PString city;
			PString country;
			BYTE showCity;

			Protocol_MSG_CASHIER_TCHIPS_PRESALE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_PRESALE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_PRESALE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_PRESALE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_TCHIPS_SALE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_TCHIPS_SALE : public Atf::MessageProtocol	// 5380
		{
			// sb44s - anotherUserId,isBuyer,tChips,cash,currency
			PString anotherUserId;
			bool isBuyer;
			INT32 tChips;
			INT32 cash;
			PString currency;

			Protocol_MSG_CASHIER_TCHIPS_SALE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_SALE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_SALE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_SALE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_TCHIPS_SALE_REPLY : public Atf::MessageProtocol	// 5381
		{
			// 2[s|4] - errCode[errDescr|expirationIntervalSec]
			INT16 errCode;

			PString errDescr;

			INT32 expirationIntervalSec;

			Protocol_MSG_CASHIER_TCHIPS_SALE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_SALE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_SALE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_SALE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_TCHIPS_PRECANCEL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_TCHIPS_PRECANCEL : public Atf::MessageProtocol	// 5382
		{
			// empty

			Protocol_MSG_CASHIER_TCHIPS_PRECANCEL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_PRECANCEL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_PRECANCEL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_PRECANCEL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierTChipsPrecancelOneBody	// reply only
		{
			// M(4s44bts) - M(saleId,anotherUserId,tChips,cash,isStartedByBuyer,validUntil,currency)
			UINT32 saleId;
			PString anotherUserId;
			INT32 tChips;
			INT32 cash;
			bool isStartedByBuyer;
			CommSrvTime validUntil;
			PString currency;

			CashierTChipsPrecancelOneBody();
			void clear();
			bool equals(const CashierTChipsPrecancelOneBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_TCHIPS_PRECANCEL_REPLY : public Atf::MessageProtocol	// 5383
		{
			// 2[s|4<M(4s44bts)>] - errCode[errDescr|numPrecancelEntries<M(saleId,anotherUserId,tChips,cash,isStartedByBuyer,validUntil,currency)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierTChipsPrecancelOneBody, 4 > precancelEntries;

			Protocol_MSG_CASHIER_TCHIPS_PRECANCEL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_PRECANCEL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_PRECANCEL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_PRECANCEL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_TCHIPS_CANCELID (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_TCHIPS_CANCELID : public Atf::MessageProtocol	// 5384
		{
			// 4<4> - numSaleIds<saleIds>
			Atf::LAtfVector< UINT32, 4 > saleIds;	// PYR-52360

			Protocol_MSG_CASHIER_TCHIPS_CANCELID();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_CANCELID&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_CANCELID; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_CANCELID"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashieTChipsSaleBody
		{
			// M(42) - M(saleId,errCode2)
			UINT32 saleId;
			INT16 errCode2;

			CashieTChipsSaleBody();
			void clear();
			bool equals(const CashieTChipsSaleBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_TCHIPS_CANCELID_REPLY : public Atf::MessageProtocol	// 5385
		{
			// 2[s|4<M(42)>] - errCode[errDescr|numSales<M(saleId,errCode2)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashieTChipsSaleBody, 4 > sales;

			Protocol_MSG_CASHIER_TCHIPS_CANCELID_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_CANCELID_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_CANCELID_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_CANCELID_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_TCHIPS_SALE_TO_PSTARS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_TCHIPS_SALE_TO_PSTARS : public Atf::MessageProtocol	// 5386
		{
			// 44s - tChips,cash,currency
			INT32 tChips;
			INT32 cash;
			PString currency;

			Protocol_MSG_CASHIER_TCHIPS_SALE_TO_PSTARS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_SALE_TO_PSTARS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_SALE_TO_PSTARS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_SALE_TO_PSTARS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_TCHIPS_SALE_TO_PSTARS_REPLY : public Atf::MessageProtocol	// 5387
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_TCHIPS_SALE_TO_PSTARS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TCHIPS_SALE_TO_PSTARS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TCHIPS_SALE_TO_PSTARS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TCHIPS_SALE_TO_PSTARS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_TSALE_GET_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_TSALE_GET_INFO : public Atf::MessageProtocol	// 5391
		{
			// empty

			Protocol_MSG_CASHIER_TSALE_GET_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TSALE_GET_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TSALE_GET_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TSALE_GET_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_TSALE_GET_INFO_REPLY : public Atf::MessageProtocol	// 5392
		{
			// 2[s|4b4] - errCode[errDescr|tChipsToCashMinimumRate_x1M,tSaleToPStarsEnabled,tChipsToCashPStarsRate_x1M]
			INT16 errCode;

			PString errDescr;

			INT32 tChipsToCashMinimumRate_x1M;
			bool tSaleToPStarsEnabled;
			INT32 tChipsToCashPStarsRate_x1M;

			Protocol_MSG_CASHIER_TSALE_GET_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TSALE_GET_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TSALE_GET_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TSALE_GET_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO : public Atf::MessageProtocol	// 5395
		{
			// 1 - paySystemByte
			BYTE paySystemByte;

			Protocol_MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierAmountCurrencyBody	// reply only
		{
			// M(4s) - M(amount,currency)
			INT32 amount;
			PString currency;

			CashierAmountCurrencyBody();
			void clear();
			bool equals(const CashierAmountCurrencyBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO_REPLY : public Atf::MessageProtocol	// 5396
		{
			// 2[s|4<M(4s)>] - errCode[errDescr|numInfos<M(amount,currency)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierAmountCurrencyBody, 4 > infos;

			Protocol_MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VOUCHER_AMOUNTCURRENCY_GET_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_FAST_DEPOSIT_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_FAST_DEPOSIT_INFO : public Atf::MessageProtocol	// 5405
		{
			// 44s - fdCallFrom,targetAmount,targetAcctCurrency
			INT32 fdCallFrom;
			INT32 targetAmount;	// -1 is for specifial purpose
			PString targetAcctCurrency;

			Protocol_MSG_CASHIER_GET_FAST_DEPOSIT_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_FAST_DEPOSIT_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_FAST_DEPOSIT_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_FAST_DEPOSIT_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_FAST_DEPOSIT_INFO_REPLY : public Atf::MessageProtocol	// 5406
		{
			// 2[s|1s44s44] - errCode[errDescr|cardTypeByte,paysystemName,status,procAmount,procCurrency,extraAcctAmountNeeded,cardInfoId]
			INT16 errCode;

			PString errDescr;

			BYTE cardTypeByte;
			PString paysystemName;
			INT32 status;
			INT32 procAmount;
			PString procCurrency;
			INT32 extraAcctAmountNeeded;
			UINT32 cardInfoId;

			Protocol_MSG_CASHIER_GET_FAST_DEPOSIT_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_FAST_DEPOSIT_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_FAST_DEPOSIT_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_FAST_DEPOSIT_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO : public Atf::MessageProtocol	// 5407
		{
			// 144s4 - paySystemByte,fdStatus,procAmount,procCurrency,cardInfoId
			BYTE paySystemByte;
			INT32 fdStatus;
			INT32 procAmount;
			PString procCurrency;
			UINT32 cardInfoId;	// no limit

			Protocol_MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO_REPLY : public Atf::MessageProtocol	// 5408
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_UPDATE_FAST_DEPOSIT_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO : public Atf::MessageProtocol	// 5409
		{
			// 1 - paySystemByte
			BYTE paySystemByte;

			Protocol_MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO_REPLY : public Atf::MessageProtocol	// 5410
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DELETE_FAST_DEPOSIT_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_RM_NOK_HELD_FUNDS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_RM_NOK_HELD_FUNDS : public Atf::MessageProtocol	// 5417
		{
			// empty

			Protocol_MSG_CASHIER_GET_RM_NOK_HELD_FUNDS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RM_NOK_HELD_FUNDS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RM_NOK_HELD_FUNDS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RM_NOK_HELD_FUNDS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierHeldTransBody	// reply only
		{
			// M(44st1s) - M(transId,amountAcct,currencyAcct,started,cardTypeByte,paysystemName)
			UINT32 transId;
			INT32 amountAcct;
			PString currencyAcct;
			CommSrvTime started;
			BYTE cardTypeByte;
			PString paysystemName;

			CashierHeldTransBody();
			void clear();
			bool equals(const CashierHeldTransBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_RM_NOK_HELD_FUNDS_REPLY : public Atf::MessageProtocol	// 5418
		{
			// 2[s|4<M(44st1s)>4s4] - errCode[errDescr|numTransactions<M(transId,amountAcct,currencyAcct,started,cardTypeByte,paysystemName)>,totalOnHold,denominatedCurrency,allowToRejectFunds]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierHeldTransBody, 4 > transactions;
			INT32 totalOnHold;	// not used if no transactions
			PString denominatedCurrency;	// not used if no transactions
			UINT32 allowToRejectFunds;	// not used if no transactions

			Protocol_MSG_CASHIER_GET_RM_NOK_HELD_FUNDS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_RM_NOK_HELD_FUNDS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_RM_NOK_HELD_FUNDS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_RM_NOK_HELD_FUNDS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS : public Atf::MessageProtocol	// 5419
		{
			// empty

			Protocol_MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS_REPLY : public Atf::MessageProtocol	// 5420
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_REJECT_RM_NOK_HELD_FUNDS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_SAVED_CARDS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_SAVED_CARDS : public Atf::MessageProtocol	// 5468, PYR-24538
		{
			// empty

			Protocol_MSG_CASHIER_GET_SAVED_CARDS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_SAVED_CARDS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_SAVED_CARDS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_SAVED_CARDS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierOneCardBody	// reply only
		{
			// M(4414ss21ts4) - M(infoId,ccId,paysystemByte,flagsForClient,oldCardNumPlain,maskedCardNum,expYear,expMonth,lastUse,currencyProc,savedProcAmount)
			UINT32 infoId;
			UINT32 ccId;
			BYTE paysystemByte;
			UINT32 flagsForClient;
			PString oldCardNumPlain;
			PString maskedCardNum;
			UINT16 expYear;
			BYTE expMonth;
			CommSrvTime lastUse;
			PString currencyProc;
			INT32 savedProcAmount;

			CashierOneCardBody();
			void clear();
			bool equals(const CashierOneCardBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_SAVED_CARDS_REPLY : public Atf::MessageProtocol	// 5469
		{
			// 2[s|4<M(4414ss21ts4)>] - errCode[errDescr|numCards<M(infoId,ccId,paysystemByte,flagsForClient,oldCardNumPlain,maskedCardNum,expYear,expMonth,lastUse,currencyProc,savedProcAmount)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierOneCardBody, 4 > cards;

			Protocol_MSG_CASHIER_GET_SAVED_CARDS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_SAVED_CARDS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_SAVED_CARDS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_SAVED_CARDS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_DELETE_SAVED_CARD (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_DELETE_SAVED_CARD : public Atf::MessageProtocol	// 5470, PYR-24538
		{
			// 14 - paySystemByte,cardInfoId
			BYTE paySystemByte;
			UINT32 cardInfoId;	// no limit

			Protocol_MSG_CASHIER_DELETE_SAVED_CARD();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DELETE_SAVED_CARD&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DELETE_SAVED_CARD; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DELETE_SAVED_CARD"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_DELETE_SAVED_CARD_REPLY : public Atf::MessageProtocol	// 5471
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_DELETE_SAVED_CARD_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DELETE_SAVED_CARD_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DELETE_SAVED_CARD_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DELETE_SAVED_CARD_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PLAY_TRANSFER (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PLAY_TRANSFER : public Atf::MessageProtocol	// 5477, PYR-26613
		{
			// s8 - userTo,amount64
			PString userTo;
			INT64 amount64;

			Protocol_MSG_CASHIER_PLAY_TRANSFER();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PLAY_TRANSFER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PLAY_TRANSFER; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PLAY_TRANSFER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PLAY_TRANSFER_REPLY : public Atf::MessageProtocol	// 5478
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_PLAY_TRANSFER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PLAY_TRANSFER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PLAY_TRANSFER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PLAY_TRANSFER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_DEPOSIT_CHECK (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_DEPOSIT_CHECK : public Atf::MessageProtocol	// 5475, PYR-24538
		{
			// 18s8s4sv - paySystemByte,procAmount,procCurrency,acctAmount,acctCurrency,requestFlags,cardNum,cardNumEncrypted
			BYTE paySystemByte;
			INT64 procAmount;
			PString procCurrency;
			INT64 acctAmount;
			PString acctCurrency;
			UINT32 requestFlags;	/*min 0*/
			PString cardNum;
			PBlock cardNumEncrypted;	// may be skipped by older clients

			Protocol_MSG_CASHIER_DEPOSIT_CHECK();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DEPOSIT_CHECK&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DEPOSIT_CHECK; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DEPOSIT_CHECK"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierUpsellAwardBody	// response only
		{
			// M(8888) - M(proposedProcAmount,proposedAcctAmount,award,awardInAcctCurrency)
			INT64 proposedProcAmount;
			INT64 proposedAcctAmount;
			INT64 award;
			INT64 awardInAcctCurrency;

			CashierUpsellAwardBody();
			void clear();
			bool equals(const CashierUpsellAwardBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierUpsellBody	// response only
		{
			// M(44ss4<M(8888)>4) - M(awardId,awardType,upsellCaptionText,baseCurrency,numAwards<M(proposedProcAmount,proposedAcctAmount,award,awardInAcctCurrency)>,timerValueSecs)
			UINT32 awardId;
			INT32 awardType;
			PString upsellCaptionText;
			PString baseCurrency;
			Atf::LAtfVector< CashierUpsellAwardBody, 4 > awards;
			INT32 timerValueSecs;

			CashierUpsellBody();
			void clear();
			bool equals(const CashierUpsellBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_DEPOSIT_CHECK_REPLY : public Atf::MessageProtocol	// 5476
		{
			// 2[s|M()4] - errCode[errDescr|M(),replyFlags]
			INT16 errCode;

			PString errDescr;

			// empty upsell body

			UINT32 replyFlags;

			Protocol_MSG_CASHIER_DEPOSIT_CHECK_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_DEPOSIT_CHECK_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_DEPOSIT_CHECK_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_DEPOSIT_CHECK_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_3V_PREREGISTER (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_3V_PREREGISTER : public Atf::MessageProtocol	// 5481, PYR-29055
		{
			// empty

			Protocol_MSG_CASHIER_3V_PREREGISTER();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_3V_PREREGISTER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_3V_PREREGISTER; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_3V_PREREGISTER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_3V_PREREGISTER_REPLY : public Atf::MessageProtocol	// 5482
		{
			// 2[s|s] - errCode[errDescr|signupUrl]
			INT16 errCode;

			PString errDescr;

			PString signupUrl;

			Protocol_MSG_CASHIER_3V_PREREGISTER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_3V_PREREGISTER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_3V_PREREGISTER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_3V_PREREGISTER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_BUY_PM (cli) ------------------------------------------
		struct BuyPmUserBody	// request, can be empty
		{
			// M(ssssssss) - M(addr1,addr2,city,state,country,zipCode,firstName,lastName)
			PString addr1;
			PString addr2;
			PString city;
			PString state;
			PString country;
			PString zipCode;
			PString firstName;
			PString lastName;

			BuyPmUserBody();
			void clear();
			bool equals(const BuyPmUserBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct BuyPmCardBody	// request
		{
			// M(4ss21v) - M(cardInfoId,cardNum,cardCvv,expYear,expMonth,encryptedCardNumAndCvv)
			UINT32 cardInfoId;	// no limit
			PString cardNum;
			PString cardCvv;
			UINT16 expYear;	// 0 can be used for specific payment systems that don't have exp date
			BYTE expMonth;	// 0 can be used for specific payment systems that don't have exp date
			PBlock encryptedCardNumAndCvv;	// old clients may skip that field

			BuyPmCardBody();
			void clear();
			bool equals(const BuyPmCardBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_BUY_PM : public Atf::MessageProtocol	// 5490, PYR-29055
		{
			// 4s8M(ssssssss)1M(4ss21v)bM() - converted,currency,playMoneyPurchaseAmount,M(addr1,addr2,city,state,country,zipCode,firstName,lastName),paySystemByte,M(cardInfoId,cardNum,cardCvv,expYear,expMonth,encryptedCardNumAndCvv),saveCardInfoRequested,M()
			INT32 converted;
			PString currency;
			INT64 playMoneyPurchaseAmount;	// PYR-49042
			BuyPmUserBody userBody;
			BYTE paySystemByte;

			BuyPmCardBody cardBody;
			bool saveCardInfoRequested;

			Atf::CopyableMsgBody cliPsSpecificBodyIn;	// PYR-48920 PayWall data from client

			Protocol_MSG_CASHIER_BUY_PM();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BUY_PM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BUY_PM; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BUY_PM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// server to client
		struct Protocol_MSG_CASHIER_BUY_PM_COMPLETE : public Atf::MessageProtocol	// 5491
		{
			// 2[s|s4] - errCode[errDescr|pmpApprovedPopUp,transId]
			INT16 errCode;

			PString errDescr;

			PString pmpApprovedPopUp;
			UINT32 transId;

			Protocol_MSG_CASHIER_BUY_PM_COMPLETE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BUY_PM_COMPLETE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BUY_PM_COMPLETE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BUY_PM_COMPLETE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// server to client
		struct Protocol_MSG_CASHIER_BUY_PM_CONFIRM : public Atf::MessageProtocol	// 5492
		{
			// 2[s|4s] - errCode[errDescr|transId,message]
			INT16 errCode;

			PString errDescr;

			UINT32 transId;
			PString message;

			Protocol_MSG_CASHIER_BUY_PM_CONFIRM();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BUY_PM_CONFIRM&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BUY_PM_CONFIRM; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BUY_PM_CONFIRM"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_MBOOKERS_REDIRECTED (cli) ------------------------------------------
		// NOTE: doesn't have a reply
		struct Protocol_MSG_CASHIER_MBOOKERS_REDIRECTED : public Atf::MessageProtocol	// 5173
		{
			// 44s - transId,status,errDescr
			UINT32 transId;	// no limit
			UINT32 status;	// no limit, client sends custom error code (platform and/or implementation dependent)
			PString errDescr;

			Protocol_MSG_CASHIER_MBOOKERS_REDIRECTED();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_MBOOKERS_REDIRECTED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_MBOOKERS_REDIRECTED; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_MBOOKERS_REDIRECTED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PM_PURCH_ITEMS_AVAIL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PM_PURCH_ITEMS_AVAIL : public Atf::MessageProtocol	// 5495, PYR-29634
		{
			// 4 - storeId
			UINT32 storeId;	// enum ClientPlayChipsStore

			Protocol_MSG_CASHIER_PM_PURCH_ITEMS_AVAIL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PM_PURCH_ITEMS_AVAIL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PM_PURCH_ITEMS_AVAIL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PM_PURCH_ITEMS_AVAIL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierPurchaseBody	// reply only
		{
			// M(4s8s44) - M(cashPrice,currency,playMoneyAmt,productId,itemFlags,savingRate_x1M)
			INT32 cashPrice;
			PString currency;	// always USD?
			INT64 playMoneyAmt;
			PString productId;
			UINT32 itemFlags;
			INT32 savingRate_x1M;

			CashierPurchaseBody();
			void clear();
			bool equals(const CashierPurchaseBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PM_PURCH_ITEMS_AVAIL_REPLY : public Atf::MessageProtocol	// 5496
		{
			// 2[s|4<M(4s8s44)>] - errCode[errDescr|numPurchases<M(cashPrice,currency,playMoneyAmt,productId,itemFlags,savingRate_x1M)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierPurchaseBody, 4 > purchases;

			Protocol_MSG_CASHIER_PM_PURCH_ITEMS_AVAIL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PM_PURCH_ITEMS_AVAIL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PM_PURCH_ITEMS_AVAIL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PM_PURCH_ITEMS_AVAIL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_BUY_PM_GOOGLE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_BUY_PM_GOOGLE : public Atf::MessageProtocol	// 5497
		{
			// ss - order,signature
			PString order;
			PString signature;

			Protocol_MSG_CASHIER_BUY_PM_GOOGLE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BUY_PM_GOOGLE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BUY_PM_GOOGLE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BUY_PM_GOOGLE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierCommmonBuyPmReply	// reply only
		{
			// 2[s|s4] - errCode[errDescr|pmpApprovedPopUp,transId]
			INT16 errCode;

			PString errDescr;

			PString pmpApprovedPopUp;
			UINT32 transId;

			CashierCommmonBuyPmReply();
			void clear();
			bool equals(const CashierCommmonBuyPmReply&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_BUY_PM_GOOGLE_REPLY : public Atf::MessageProtocol	// 5498
		{
			// 2[s|s4] - errCode[errDescr|pmpApprovedPopUp,transId]
			CashierCommmonBuyPmReply reply;

			Protocol_MSG_CASHIER_BUY_PM_GOOGLE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BUY_PM_GOOGLE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BUY_PM_GOOGLE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BUY_PM_GOOGLE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_BUY_PM_APPLE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_BUY_PM_APPLE : public Atf::MessageProtocol	// 5499
		{
			// s - order
			PString order;

			Protocol_MSG_CASHIER_BUY_PM_APPLE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BUY_PM_APPLE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BUY_PM_APPLE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BUY_PM_APPLE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_BUY_PM_APPLE_REPLY : public Atf::MessageProtocol	// 5500
		{
			// 2[s|s4] - errCode[errDescr|pmpApprovedPopUp,transId]
			CashierCommmonBuyPmReply reply;

			Protocol_MSG_CASHIER_BUY_PM_APPLE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BUY_PM_APPLE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BUY_PM_APPLE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BUY_PM_APPLE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_ASTROPAY_BANKINFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_ASTROPAY_BANKINFO : public Atf::MessageProtocol	// 5501
		{
			// b1 - isForCashout,cardTypeByte
			bool isForCashout;
			BYTE cardTypeByte;

			Protocol_MSG_CASHIER_GET_ASTROPAY_BANKINFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_ASTROPAY_BANKINFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_ASTROPAY_BANKINFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_ASTROPAY_BANKINFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct AstropayDirectUserBankRef	// used in both request and reply
		{
			// 4sssssssss - bankId,bankCode,bankName,bankCurrency,branchName,nicAlias,country,nicValue,bankAccount,accountType
			UINT32 bankId;	// no limit
			PString bankCode;
			PString bankName;
			PString bankCurrency;
			PString branchName;
			PString nicAlias;
			PString country;
			PString nicValue;
			PString bankAccount;
			PString accountType;

			AstropayDirectUserBankRef();
			void clear();
			bool equals(const AstropayDirectUserBankRef&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_ASTROPAY_BANKINFO_REPLY : public Atf::MessageProtocol	// 5502
		{
			// 2[s|24<4sssssssss>] - errCode[errDescr|index,numBankInfos<bankId,bankCode,bankName,bankCurrency,branchName,nicAlias,country,nicValue,bankAccount,accountType>]
			INT16 errCode;

			PString errDescr;

			INT16 index;
			Atf::LAtfVector< AstropayDirectUserBankRef, 4 > bankInfos;

			Protocol_MSG_CASHIER_GET_ASTROPAY_BANKINFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_ASTROPAY_BANKINFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_ASTROPAY_BANKINFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_ASTROPAY_BANKINFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_ASTROPAY_CASHIN (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_ASTROPAY_CASHIN : public Atf::MessageProtocol	// 5503
		{
			// 4s8s1 - bankId,cpf,amount64,bonusCode,cardTypeByte
			UINT32 bankId;	// no limit
			PString cpf;	//uuid
			INT64 amount64;
			PString bonusCode;
			BYTE cardTypeByte;

			Protocol_MSG_CASHIER_ASTROPAY_CASHIN();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ASTROPAY_CASHIN&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ASTROPAY_CASHIN; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ASTROPAY_CASHIN"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ASTROPAY_CASHIN_REDIRECT : public Atf::MessageProtocol	// 5504
		{
			// 2[s|s84sssssssss1] - errCode[errDescr|redirectUrl,amount64,bankId,bankCode,bankName,bankCurrency,branchName,nicAlias,country,nicValue,bankAccount,accountType,cardTypeByte]
			INT16 errCode;

			PString errDescr;

			PString redirectUrl;
			INT64 amount64;
			AstropayDirectUserBankRef bankInfo;
			BYTE cardTypeByte;

			Protocol_MSG_CASHIER_ASTROPAY_CASHIN_REDIRECT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ASTROPAY_CASHIN_REDIRECT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ASTROPAY_CASHIN_REDIRECT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ASTROPAY_CASHIN_REDIRECT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SAVE_ASTROPAY_BANKINFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SAVE_ASTROPAY_BANKINFO : public Atf::MessageProtocol	// 5505
		{
			// 4sssssssss1 - bankId,bankCode,bankName,bankCurrency,branchName,nicAlias,country,nicValue,bankAccount,accountType,cardTypeByte
			AstropayDirectUserBankRef bankInfo;
			BYTE cardTypeByte;

			Protocol_MSG_CASHIER_SAVE_ASTROPAY_BANKINFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVE_ASTROPAY_BANKINFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVE_ASTROPAY_BANKINFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVE_ASTROPAY_BANKINFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SAVE_ASTROPAY_BANKINFO_REPLY : public Atf::MessageProtocol	// 5506
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_SAVE_ASTROPAY_BANKINFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVE_ASTROPAY_BANKINFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVE_ASTROPAY_BANKINFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVE_ASTROPAY_BANKINFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT : public Atf::MessageProtocol	// 5507
		{
			// s - currencyDst
			PString currencyDst;

			Protocol_MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT_REPLY : public Atf::MessageProtocol	// 5508
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVERT_FUNDS_TO_ONE_ACCT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL : public Atf::MessageProtocol	// 5511
		{
			// empty

			Protocol_MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL_REPLY : public Atf::MessageProtocol	// 5512
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GENERATE_ELV_MANDATE_EMAIL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_PAYLUCKY_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_PAYLUCKY_INFO : public Atf::MessageProtocol	// 5513
		{
			// 1 - paySystemByte
			BYTE paySystemByte;

			Protocol_MSG_CASHIER_GET_PAYLUCKY_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_PAYLUCKY_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_PAYLUCKY_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_PAYLUCKY_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_PAYLUCKY_INFO_REPLY : public Atf::MessageProtocol	// 5514
		{
			// 2[s|44] - errCode[errDescr|payLuckyBalance,sightLineMaxBalance]
			INT16 errCode;

			PString errDescr;

			INT32 payLuckyBalance;
			INT32 sightLineMaxBalance;

			Protocol_MSG_CASHIER_GET_PAYLUCKY_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_PAYLUCKY_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_PAYLUCKY_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_PAYLUCKY_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_VANILLA_AMTCURRENCY (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_VANILLA_AMTCURRENCY : public Atf::MessageProtocol	// 5519
		{
			// ss - pin,balanceCurrency
			PString pin;
			PString balanceCurrency;

			Protocol_MSG_CASHIER_GET_VANILLA_AMTCURRENCY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_VANILLA_AMTCURRENCY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_VANILLA_AMTCURRENCY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_VANILLA_AMTCURRENCY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_VANILLA_AMTCURRENCY_REPLY : public Atf::MessageProtocol	// 5520
		{
			// 2[s|4s4ss] - errCode[errDescr|procAmount,procCurrency,balanceAmount,balanceCurrency,pin]
			INT16 errCode;

			PString errDescr;

			UINT32 procAmount;
			PString procCurrency;
			UINT32 balanceAmount;
			PString balanceCurrency;
			PString pin;

			Protocol_MSG_CASHIER_GET_VANILLA_AMTCURRENCY_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_VANILLA_AMTCURRENCY_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_VANILLA_AMTCURRENCY_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_VANILLA_AMTCURRENCY_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PLAY_MONEY_REFILL (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PLAY_MONEY_REFILL : public Atf::MessageProtocol	// 5521, PYR-18558
		{
			// empty

			Protocol_MSG_CASHIER_PLAY_MONEY_REFILL();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PLAY_MONEY_REFILL&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PLAY_MONEY_REFILL; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PLAY_MONEY_REFILL"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierPlayMoneyCommonBody	// reply only
		{
			// M(48888) - M(playChipsRefillPeriodSec,playChipsAllowedForPeriodCents,targetRefillAmountCents,playChipsBalance,availableForRefill)
			INT32 playChipsRefillPeriodSec;
			INT64 playChipsAllowedForPeriodCents;
			INT64 targetRefillAmountCents;
			INT64 playChipsBalance;
			INT64 availableForRefill;

			CashierPlayMoneyCommonBody();
			void clear();
			bool equals(const CashierPlayMoneyCommonBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierPlayMoneyRefillResult	// reply only
		{
			//! 4 <FIXME_COND_IF> M(8t4) <FIXME_COND_ELSE> M(t4) <FIXME_COND_ELSE> M() <FIXME_COND_ENDIF>  - refillResult <FIXME_COND_IF> ,M(refilledAmount,nextRefillTime,deltaSec) <FIXME_COND_ELSE> ,M(nextRefillTime,deltaSec) <FIXME_COND_ELSE> ,M() <FIXME_COND_ENDIF> 
			INT32 refillResult;

			INT64 refilledAmount;
			CommSrvTime nextRefillTime;
			INT32 deltaSec;

			// empty

			CashierPlayMoneyRefillResult();
			void clear();
			bool equals(const CashierPlayMoneyRefillResult&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

		private: // helper functions
			void parseAnonymousMsgBody0(CommMsgParser& _parser);
			static void validateAnonymousMsgBody0(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody1(CommMsgParser& _parser);
			static void validateAnonymousMsgBody1(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			void parseAnonymousMsgBody2(CommMsgParser& _parser);
			static void validateAnonymousMsgBody2(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_REPLY : public Atf::MessageProtocol	// 5522, PYR-18558
		{
			//! 2[s|M(48888)4 <FIXME_COND_IF> M(8t4) <FIXME_COND_ELSE> M(t4) <FIXME_COND_ELSE> M() <FIXME_COND_ENDIF> ] - errCode[errDescr|M(playChipsRefillPeriodSec,playChipsAllowedForPeriodCents,targetRefillAmountCents,playChipsBalance,availableForRefill),refillResult <FIXME_COND_IF> ,M(refilledAmount,nextRefillTime,deltaSec) <FIXME_COND_ELSE> ,M(nextRefillTime,deltaSec) <FIXME_COND_ELSE> ,M() <FIXME_COND_ENDIF> ]
			INT16 errCode;

			PString errDescr;

			CashierPlayMoneyCommonBody common;
			CashierPlayMoneyRefillResult refillResult;

			Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PLAY_MONEY_REFILL_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PLAY_MONEY_REFILL_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO : public Atf::MessageProtocol	// 5573, PYR-47011
		{
			// empty

			Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct AdEventConfBody
		{
			// M(t8) - M(nextAdEventTime,adEventPmRewardAmountCents)
			CommSrvTime nextAdEventTime;
			INT64 adEventPmRewardAmountCents;

			AdEventConfBody();
			void clear();
			bool equals(const AdEventConfBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO_REPLY : public Atf::MessageProtocol	// 5574
		{
			// 2[s|4888tM(t8)] - errCode[errDescr|playChipsRefillPeriodSec,playChipsAllowedForPeriodCents,targetRefillAmountCents,availableForRefill,nextRefillTime,M(nextAdEventTime,adEventPmRewardAmountCents)]
			INT16 errCode;

			PString errDescr;

			INT32 playChipsRefillPeriodSec;
			INT64 playChipsAllowedForPeriodCents;
			INT64 targetRefillAmountCents;
			INT64 availableForRefill;
			CommSrvTime nextRefillTime;
			AdEventConfBody userAdEventConf;	// if userAdEventConf

			Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PLAY_MONEY_REFILL_GET_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PM_WATCH2EARN_START (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PM_WATCH2EARN_START : public Atf::MessageProtocol	// 5575, PYR-45097
		{
			// 48 - triggerType,triggerId
			INT32 triggerType;
			UINT64 triggerId;	// no limit

			Protocol_MSG_CASHIER_PM_WATCH2EARN_START();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PM_WATCH2EARN_START&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PM_WATCH2EARN_START; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PM_WATCH2EARN_START"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PM_WATCH2EARN_START_REPLY : public Atf::MessageProtocol	// 5576
		{
			// 2[s|4t] - errCode[errDescr|eventId,nextAdEventTime]
			INT16 errCode;

			PString errDescr;

			UINT32 eventId;
			CommSrvTime nextAdEventTime;

			Protocol_MSG_CASHIER_PM_WATCH2EARN_START_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PM_WATCH2EARN_START_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PM_WATCH2EARN_START_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PM_WATCH2EARN_START_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_PM_WATCH2EARN_FINISH (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_PM_WATCH2EARN_FINISH : public Atf::MessageProtocol	// 5577, PYR-45097
		{
			// 44ss - eventId,status,xTransStr,infoStr
			UINT32 eventId;	// no limit
			INT32 status;	// enum ePlayMoneyAdWatchResult // PYR-45097
			PString xTransStr;
			PString infoStr;

			Protocol_MSG_CASHIER_PM_WATCH2EARN_FINISH();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PM_WATCH2EARN_FINISH&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PM_WATCH2EARN_FINISH; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PM_WATCH2EARN_FINISH"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_PM_WATCH2EARN_FINISH_REPLY : public Atf::MessageProtocol	// 5578
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_PM_WATCH2EARN_FINISH_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_PM_WATCH2EARN_FINISH_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_PM_WATCH2EARN_FINISH_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_PM_WATCH2EARN_FINISH_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS : public Atf::MessageProtocol	// 5524
		{
			// 4<4> - numPropertyTypes<propertyTypes>
			Atf::LAtfVector< INT32, 4 > propertyTypes;	// enum eUserPropertyType

			Protocol_MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierAccountBalanceBody	// reply only
		{
			// M(s88) - M(currency,chips,tChips)
			PString currency;
			INT64 chips;	// might be negative
			INT64 tChips;

			CashierAccountBalanceBody();
			void clear();
			bool equals(const CashierAccountBalanceBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS_REPLY : public Atf::MessageProtocol	// 5525
		{
			//! 2[s|4< <FIXME>Common::AtfShared::UserPropertyBody</FIXME> >484888s84<M(s88)>8] - errCode[errDescr|numUserProperties< <FIXME>Common::AtfShared::UserPropertyBody</FIXME> >,flags,flags2,privileges,privileges2,privileges3,playChips,defaultCurrency,totalAmountCurr,numAccountBalances<M(currency,chips,tChips)>,flags3]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< Common::AtfShared::UserPropertyBody, 4 > userProperties;
			UINT32 flags;
			UINT64 flags2;
			UINT32 privileges;
			UINT64 privileges2;
			UINT64 privileges3;
			INT64 playChips;
			PString defaultCurrency;
			INT64 totalAmountCurr;
			Atf::LAtfVector< CashierAccountBalanceBody, 4 > accountBalances;
			UINT64 flags3;

			Protocol_MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CHIPS_INFO_WITH_OPTIONS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_CURRENT_USERROLLS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_CURRENT_USERROLLS : public Atf::MessageProtocol	// 5532
		{
			// empty

			Protocol_MSG_CASHIER_GET_CURRENT_USERROLLS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_CURRENT_USERROLLS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_CURRENT_USERROLLS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_CURRENT_USERROLLS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierUserRollBody	// reply only
		{
			// M(44s4444s44444t44s4ss444444) - M(userRollId,status,oneRollDescription,paidFpp,paidCash,initialAmount,currentAmount,currency,surrenderValue,collectedPoints,totalPoints,numOfBets,clearBets,expiration,rollFlags,flags,rollSupportedGamesJson,redemptionLimit,shortEligibleGameNames,longEligibleGameNames,stakes,clearStakes,rollBrandsMask,rollRewardAssetType,rollRewardAssetId,rollVerticalMask)
			UINT32 userRollId;
			INT32 status;
			PString oneRollDescription;
			INT32 paidFpp;
			INT32 paidCash;
			INT32 initialAmount;
			INT32 currentAmount;
			PString currency;
			INT32 surrenderValue;
			INT32 collectedPoints;
			INT32 totalPoints;
			INT32 numOfBets;
			INT32 clearBets;
			CommSrvTime expiration;
			UINT32 rollFlags;
			UINT32 flags;
			PString rollSupportedGamesJson;
			INT32 redemptionLimit;
			PString shortEligibleGameNames;
			PString longEligibleGameNames;
			INT32 stakes;
			INT32 clearStakes;
			UINT32 rollBrandsMask;
			INT32 rollRewardAssetType;
			UINT32 rollRewardAssetId;
			INT32 rollVerticalMask;

			CashierUserRollBody();
			void clear();
			bool equals(const CashierUserRollBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_CURRENT_USERROLLS_REPLY : public Atf::MessageProtocol	// 5533
		{
			// 2[s|4<M(44s4444s44444t44s4ss444444)>4<M(44s4444s44444t44s4ss444444)>] - errCode[errDescr|numUserRolls<M(userRollId,status,oneRollDescription,paidFpp,paidCash,initialAmount,currentAmount,currency,surrenderValue,collectedPoints,totalPoints,numOfBets,clearBets,expiration,rollFlags,flags,rollSupportedGamesJson,redemptionLimit,shortEligibleGameNames,longEligibleGameNames,stakes,clearStakes,rollBrandsMask,rollRewardAssetType,rollRewardAssetId,rollVerticalMask)>,numFreeSpinUserRolls<M(userRollId,status,oneRollDescription,paidFpp,paidCash,initialAmount,currentAmount,currency,surrenderValue,collectedPoints,totalPoints,numOfBets,clearBets,expiration,rollFlags,flags,rollSupportedGamesJson,redemptionLimit,shortEligibleGameNames,longEligibleGameNames,stakes,clearStakes,rollBrandsMask,rollRewardAssetType,rollRewardAssetId,rollVerticalMask)>]
			INT16 errCode;

			PString errDescr;

			Atf::LAtfVector< CashierUserRollBody, 4 > userRolls;
			Atf::LAtfVector< CashierUserRollBody, 4 > freeSpinUserRolls;

			Protocol_MSG_CASHIER_GET_CURRENT_USERROLLS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_CURRENT_USERROLLS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_CURRENT_USERROLLS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_CURRENT_USERROLLS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_USERROLL_STATUS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SET_USERROLL_STATUS : public Atf::MessageProtocol	// 5534
		{
			// 444 - userRollId,curStatus,action
			common_structs::SetUserRollStatus status;

			Protocol_MSG_CASHIER_SET_USERROLL_STATUS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USERROLL_STATUS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USERROLL_STATUS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USERROLL_STATUS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_USERROLL_STATUS_REPLY : public Atf::MessageProtocol	// 5535
		{
			// 2[s] - errCode[errDescr]
			common_structs::SetUserRollStatusReply reply;

			Protocol_MSG_CASHIER_SET_USERROLL_STATUS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USERROLL_STATUS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USERROLL_STATUS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USERROLL_STATUS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_UPDATE_USERROLLS_ORDER (cli) ------------------------------------------
		struct CashierUserRollsOrderOneBody	// request
		{
			// M(4) - M(userRollId)
			UINT32 userRollId;	// no limit

			CashierUserRollsOrderOneBody();
			void clear();
			bool equals(const CashierUserRollsOrderOneBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_UPDATE_USERROLLS_ORDER : public Atf::MessageProtocol	// 5540
		{
			// 4<M(4)> - numUserRollsOrder<M(userRollId)>
			Atf::LAtfVector< CashierUserRollsOrderOneBody, 4 > userRollsOrder;	//  PYR-52360

			Protocol_MSG_CASHIER_UPDATE_USERROLLS_ORDER();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_UPDATE_USERROLLS_ORDER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_UPDATE_USERROLLS_ORDER; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_UPDATE_USERROLLS_ORDER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_UPDATE_USERROLLS_ORDER_REPLY : public Atf::MessageProtocol	// 5541
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_UPDATE_USERROLLS_ORDER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_UPDATE_USERROLLS_ORDER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_UPDATE_USERROLLS_ORDER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_UPDATE_USERROLLS_ORDER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_USER_ALL_PRIVILEGES (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SET_USER_ALL_PRIVILEGES : public Atf::MessageProtocol	// 5546
		{
			// 448888 - privsMaskToSet,privsMaskToClear,privs2MaskToSet,privs2MaskToClear,privs3MaskToSet,privs3MaskToClear
			UINT32 privsMaskToSet;	// all bits permitted, no range validation needed, UserPrivileges in dbm.h
			UINT32 privsMaskToClear;	// no limit
			// note - the calculations below won't overflow as long as people follow guidelines and don't use 63rd bit (it causes issues in DB2)
			UINT64 privs2MaskToSet;	// priv2* defines in dbm.h
			UINT64 privs2MaskToClear;	// no limit
			UINT64 privs3MaskToSet;	// priv3* defines in dbm.h
			UINT64 privs3MaskToClear;	// no limit

			Protocol_MSG_CASHIER_SET_USER_ALL_PRIVILEGES();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USER_ALL_PRIVILEGES&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USER_ALL_PRIVILEGES; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USER_ALL_PRIVILEGES"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_USER_ALL_PRIVILEGES_REPLY : public Atf::MessageProtocol	// 5547
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_SET_USER_ALL_PRIVILEGES_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USER_ALL_PRIVILEGES_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USER_ALL_PRIVILEGES_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USER_ALL_PRIVILEGES_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_TEXT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_TEXT : public Atf::MessageProtocol	// 5548
		{
			// 4 - getTextFlags
			UINT32 getTextFlags;	/*min 0*/

			Protocol_MSG_CASHIER_GET_TEXT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TEXT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TEXT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TEXT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct CashierGetTextRealMoneyPopupBody	// reply only
		{
			// M(sss) - M(localizedTitle,localizedText,localizedButton)
			PString localizedTitle;
			PString localizedText;
			PString localizedButton;

			CashierGetTextRealMoneyPopupBody();
			void clear();
			bool equals(const CashierGetTextRealMoneyPopupBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct CashierGetTextResponseOneBody	// reply only
		{
			// M(4bM(sss)) - M(getTextFlag,processedOk,M(localizedTitle,localizedText,localizedButton))
			INT32 getTextFlag;
			bool processedOk;
			CashierGetTextRealMoneyPopupBody textData;

			CashierGetTextResponseOneBody();
			void clear();
			bool equals(const CashierGetTextResponseOneBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_TEXT_REPLY : public Atf::MessageProtocol	// 5549
		{
			// 4<M(4bM(sss))> - numItems<M(getTextFlag,processedOk,M(localizedTitle,localizedText,localizedButton))>
			Atf::LAtfVector< CashierGetTextResponseOneBody, 4 > items;

			Protocol_MSG_CASHIER_GET_TEXT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TEXT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TEXT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TEXT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SIGHTLINE_SIGNUP (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SIGHTLINE_SIGNUP : public Atf::MessageProtocol	// 5561
		{
			// s - geoIpInfo
			PString geoIpInfo;

			Protocol_MSG_CASHIER_SIGHTLINE_SIGNUP();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SIGHTLINE_SIGNUP&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SIGHTLINE_SIGNUP; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SIGHTLINE_SIGNUP"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SIGHTLINE_SIGNUP_REPLY : public Atf::MessageProtocol	// 5562
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_SIGHTLINE_SIGNUP_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SIGHTLINE_SIGNUP_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SIGHTLINE_SIGNUP_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SIGHTLINE_SIGNUP_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_VALINNARELOAD_SIGNUP (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_VALINNARELOAD_SIGNUP : public Atf::MessageProtocol	// 5567
		{
			// empty

			Protocol_MSG_CASHIER_VALINNARELOAD_SIGNUP();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VALINNARELOAD_SIGNUP&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VALINNARELOAD_SIGNUP; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VALINNARELOAD_SIGNUP"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_VALINNARELOAD_SIGNUP_REPLY : public Atf::MessageProtocol	// 5568
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_VALINNARELOAD_SIGNUP_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VALINNARELOAD_SIGNUP_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VALINNARELOAD_SIGNUP_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VALINNARELOAD_SIGNUP_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_VALINNARELOAD_GET_BARCODE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_VALINNARELOAD_GET_BARCODE : public Atf::MessageProtocol	// 5569
		{
			// empty

			Protocol_MSG_CASHIER_VALINNARELOAD_GET_BARCODE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VALINNARELOAD_GET_BARCODE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VALINNARELOAD_GET_BARCODE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VALINNARELOAD_GET_BARCODE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_VALINNARELOAD_GET_BARCODE_REPLY : public Atf::MessageProtocol	// 5570
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_VALINNARELOAD_GET_BARCODE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_VALINNARELOAD_GET_BARCODE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_VALINNARELOAD_GET_BARCODE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_VALINNARELOAD_GET_BARCODE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_GAMETICKET_STATUS (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS : public Atf::MessageProtocol	// 5571
		{
			// 844 - gameTicketId,curStatus,action
			common_structs::SetGameTicketStatus status;

			Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_GAMETICKET_STATUS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_GAMETICKET_STATUS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY : public Atf::MessageProtocol	// 5572
		{
			// 2[s] - errCode[errDescr]
			common_structs::SetGameTicketStatusReply reply;

			Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION : public Atf::MessageProtocol	// 5579
		{
			// b - setNotRemove
			bool setNotRemove;

			Protocol_MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION_REPLY : public Atf::MessageProtocol	// 5580
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_TURN_ON_OFF_GAMEIN_AUTOCONVERSION_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT : public Atf::MessageProtocol	// 5581
		{
			// 4s - totalAmountNeeded,currency
			INT32 totalAmountNeeded;
			PString currency;

			Protocol_MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT_REPLY : public Atf::MessageProtocol	// 5582
		{
			// 2[s|4] - errCode[errDescr|amountAfter]
			INT16 errCode;

			PString errDescr;

			INT32 amountAfter;

			Protocol_MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CONVERT_FOR_TARGET_AMOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_DENOMINATED_BALANCE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_DENOMINATED_BALANCE : public Atf::MessageProtocol	// 5588
		{
			// s4 - targetCurrency,convActionTypeInt
			PString targetCurrency;
			INT32 convActionTypeInt;	// enum ConversionActionType, validated further with validateConversionActionType() at sharedconversion.cpp

			Protocol_MSG_CASHIER_GET_DENOMINATED_BALANCE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_DENOMINATED_BALANCE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_DENOMINATED_BALANCE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_DENOMINATED_BALANCE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct DenominatedBalanceOneAccBody	// reply only, struct DenominatedBalanceOneAcc cashierobject.h
		{
			// M(s88888) - M(acctCurrency,convRate_x100M,chips,chipsInTC,tChips,tChipsInTC)
			PString acctCurrency;
			INT64 convRate_x100M;
			INT64 chips;
			INT64 chipsInTC;
			INT64 tChips;
			INT64 tChipsInTC;

			DenominatedBalanceOneAccBody();
			void clear();
			bool equals(const DenominatedBalanceOneAccBody&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_DENOMINATED_BALANCE_REPLY : public Atf::MessageProtocol	// 5589
		{
			// 2[s|s4<M(s88888)>] - errCode[errDescr|targetCurrency,numDenominatedBalanceAccs<M(acctCurrency,convRate_x100M,chips,chipsInTC,tChips,tChipsInTC)>]
			INT16 errCode;

			PString errDescr;

			PString targetCurrency;
			Atf::LAtfVector< DenominatedBalanceOneAccBody, 4 > denominatedBalanceAccs;

			Protocol_MSG_CASHIER_GET_DENOMINATED_BALANCE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_DENOMINATED_BALANCE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_DENOMINATED_BALANCE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_DENOMINATED_BALANCE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_STARSWALLET_REGISTER (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_STARSWALLET_REGISTER : public Atf::MessageProtocol	// 5592, PYR-37328
		{
			// s - mobilePhone
			PString mobilePhone;

			Protocol_MSG_CASHIER_STARSWALLET_REGISTER();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_REGISTER&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_REGISTER; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_REGISTER"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_STARSWALLET_REGISTER_REPLY : public Atf::MessageProtocol	// 5593
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_STARSWALLET_REGISTER_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_REGISTER_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_REGISTER_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_REGISTER_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_STARSWALLET_CHANGE_MOBILE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_STARSWALLET_CHANGE_MOBILE : public Atf::MessageProtocol	// 5597, PYR-37328
		{
			// s - newMobileNumber
			PString newMobileNumber;

			Protocol_MSG_CASHIER_STARSWALLET_CHANGE_MOBILE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_CHANGE_MOBILE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_CHANGE_MOBILE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_CHANGE_MOBILE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_STARSWALLET_CHANGE_MOBILE_REPLY : public Atf::MessageProtocol	// 5598
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_STARSWALLET_CHANGE_MOBILE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_CHANGE_MOBILE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_CHANGE_MOBILE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_CHANGE_MOBILE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_STARSWALLET_RESEND_OTP (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_STARSWALLET_RESEND_OTP : public Atf::MessageProtocol	// 5599, PYR-37328
		{
			// empty

			Protocol_MSG_CASHIER_STARSWALLET_RESEND_OTP();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_RESEND_OTP&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_RESEND_OTP; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_RESEND_OTP"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_STARSWALLET_RESEND_OTP_REPLY : public Atf::MessageProtocol	// 5600
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_STARSWALLET_RESEND_OTP_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_RESEND_OTP_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_RESEND_OTP_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_RESEND_OTP_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_STARSWALLET_OTP_RECEIVED (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_STARSWALLET_OTP_RECEIVED : public Atf::MessageProtocol	// 5601, PYR-37328
		{
			// empty

			Protocol_MSG_CASHIER_STARSWALLET_OTP_RECEIVED();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_OTP_RECEIVED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_OTP_RECEIVED; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_OTP_RECEIVED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_STARSWALLET_OTP_RECEIVED_REPLY : public Atf::MessageProtocol	// 5602
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_STARSWALLET_OTP_RECEIVED_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_OTP_RECEIVED_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_OTP_RECEIVED_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_OTP_RECEIVED_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_IND_USER_TAX_INFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_IND_USER_TAX_INFO : public Atf::MessageProtocol	// 5603, PYR-30309
		{
			// 4 - cashoutAmount
			INT32 cashoutAmount;	// -1 means that the client is interested only in 'coefficients' (totalBalance, unUsedBalance, taxableCashout)

			Protocol_MSG_CASHIER_GET_IND_USER_TAX_INFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_IND_USER_TAX_INFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_IND_USER_TAX_INFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_IND_USER_TAX_INFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_IND_USER_TAX_INFO_REPLY : public Atf::MessageProtocol	// 5604
		{
			// 2[s|444444] - errCode[errDescr|taxAmount,totalBalance,unUsedBalance,taxableCashout,indiaTaxFreeCashout,indiaTaxRate_x1M]
			INT16 errCode;

			PString errDescr;

			INT32 taxAmount;
			INT32 totalBalance;
			INT32 unUsedBalance;
			INT32 taxableCashout;
			INT32 indiaTaxFreeCashout;
			INT32 indiaTaxRate_x1M;

			Protocol_MSG_CASHIER_GET_IND_USER_TAX_INFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_IND_USER_TAX_INFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_IND_USER_TAX_INFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_IND_USER_TAX_INFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CC_BIN_CHECK (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CC_BIN_CHECK : public Atf::MessageProtocol	// 5606, PYR-45337
		{
			// s - cardBin
			PString cardBin;	// minlen should not be constrained, the code checks if length is < 6 and replies with a custom error code

			Protocol_MSG_CASHIER_CC_BIN_CHECK();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CC_BIN_CHECK&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CC_BIN_CHECK; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CC_BIN_CHECK"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CC_BIN_CHECK_REPLY : public Atf::MessageProtocol	// 5607
		{
			// 2[s|b1] - errCode[errDescr|bHostile,paySystemByte]
			INT16 errCode;

			PString errDescr;

			bool bHostile;
			BYTE paySystemByte;

			Protocol_MSG_CASHIER_CC_BIN_CHECK_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CC_BIN_CHECK_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CC_BIN_CHECK_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CC_BIN_CHECK_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_BONUS_CHECK (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_BONUS_CHECK : public Atf::MessageProtocol	// 5608, PYR-52613
		{
			// 1s - paySystemByte,bonusCode
			BYTE paySystemByte;
			PString bonusCode;

			Protocol_MSG_CASHIER_BONUS_CHECK();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BONUS_CHECK&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BONUS_CHECK; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BONUS_CHECK"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_BONUS_CHECK_REPLY : public Atf::MessageProtocol	// 5609
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_BONUS_CHECK_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_BONUS_CHECK_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_BONUS_CHECK_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_BONUS_CHECK_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_NET_REPORT_BRIEF (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_NET_REPORT_BRIEF : public Atf::MessageProtocol	// 5618, PYR-59305
		{

			Protocol_MSG_CASHIER_GET_NET_REPORT_BRIEF();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_NET_REPORT_BRIEF&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_NET_REPORT_BRIEF; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_NET_REPORT_BRIEF"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX : public Atf::MessageProtocol	// 5622, PYR-61756
		{

			Protocol_MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX_REPLY : public Atf::MessageProtocol	// 5623
		{
			// 2[s|s] - errCode[errDescr|countryPrefix]
			INT16 errCode;

			PString errDescr;

			PString countryPrefix;

			Protocol_MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_USER_COUNTRY_PHONE_PREFIX_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_AG_OPERATOR_BALANCE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_AG_OPERATOR_BALANCE : public Atf::MessageProtocol	// 5624, PYR-52150
		{
			// s - balanceCurrency
			PString balanceCurrency;

			Protocol_MSG_CASHIER_GET_AG_OPERATOR_BALANCE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_AG_OPERATOR_BALANCE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_AG_OPERATOR_BALANCE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_AG_OPERATOR_BALANCE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_AG_OPERATOR_BALANCE_REPLY : public Atf::MessageProtocol	// 5625
		{
			// 2[s|s8s8] - errCode[errDescr|operatorCurrency,operatorAmount,balanceCurrency,balanceAmount]
			INT16 errCode;

			PString errDescr;

			PString operatorCurrency;
			INT64 operatorAmount;
			PString balanceCurrency;
			INT64 balanceAmount;

			Protocol_MSG_CASHIER_GET_AG_OPERATOR_BALANCE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_AG_OPERATOR_BALANCE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_AG_OPERATOR_BALANCE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_AG_OPERATOR_BALANCE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_TRANSINFO (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_TRANSINFO : public Atf::MessageProtocol	// 5626, PYR-57431
		{
			// 4 - transId
			UINT32 transId;

			Protocol_MSG_CASHIER_GET_TRANSINFO();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TRANSINFO&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TRANSINFO; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TRANSINFO"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_TRANSINFO_REPLY : public Atf::MessageProtocol	// 5627
		{
			// 2[s|4s1s4s4s] - errCode[errDescr|transId,status,paysystemByte,gateway,procAmount,procCurrency,balanceAmount,balanceCurrency]
			INT16 errCode;

			PString errDescr;

			UINT32 transId;
			PString status;
			BYTE paysystemByte;
			PString gateway;
			INT32 procAmount;
			PString procCurrency;
			INT32 balanceAmount;
			PString balanceCurrency;

			Protocol_MSG_CASHIER_GET_TRANSINFO_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TRANSINFO_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TRANSINFO_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TRANSINFO_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// NOTE: obsolete messages (faulty logic):
		// MSG_CASHIER_CITADEL_GET_BANKS - 5227
		// MSG_CASHIER_CITADEL_BANK_SELECTED - 5229
		// MSG_CASHIER_GCDEBIT_INIT2 - 5235
		// MSG_CASHIER_GCDEBIT_VERIFY - 5117
		// MSG_CASHIER_GCDEBIT_CONFIRM - 5119
		// MSG_CASHIER_GET_WU_SCHEMA - 5068
		// MSG_CASHIER_INIT_WU_TRANS - 5070
		// MSG_CASHIER_PRE_MTCN - 5072
		// MSG_CASHIER_SET_WU_MTCN - 5074
		//
		struct Protocol_MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT : public Atf::MessageProtocol	// 7589, PYR-70835
		{
			// 14 - paySystemByte,consentValue
			BYTE paySystemByte;
			INT32 consentValue;	//eUserPaysystemConsent in cashier.h

			Protocol_MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT_REPLY : public Atf::MessageProtocol
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SAVE_PAYSYSTEM_CONSENT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX : public Atf::MessageProtocol	// 5632, PYR-69310
		{
			// 8s - cashoutAmount,balanceCurrency
			INT64 cashoutAmount;
			PString balanceCurrency;

			Protocol_MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX_REPLY : public Atf::MessageProtocol	// 5633
		{
			// 2[s|88] - errCode[errDescr|taxAmountInBalanceCurrency,cashoutRemainder]
			INT16 errCode;

			PString errDescr;

			INT64 taxAmountInBalanceCurrency;
			INT64 cashoutRemainder;

			Protocol_MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_CALC_ROMANIA_CASHOUT_TAX_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_GET_VANILLADIRECT_BARCODE (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_GET_VANILLADIRECT_BARCODE : public Atf::MessageProtocol	// 5630, PYR-73312
		{

			Protocol_MSG_CASHIER_GET_VANILLADIRECT_BARCODE();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_VANILLADIRECT_BARCODE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_VANILLADIRECT_BARCODE; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_VANILLADIRECT_BARCODE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_VANILLADIRECT_BARCODE_REPLY : public Atf::MessageProtocol	// 5631
		{
			// 2[s|s] - errCode[errDescr|barcode]
			INT16 errCode;

			PString errDescr;

			PString barcode;

			Protocol_MSG_CASHIER_GET_VANILLADIRECT_BARCODE_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_VANILLADIRECT_BARCODE_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_VANILLADIRECT_BARCODE_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_VANILLADIRECT_BARCODE_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_STARSWALLET_RESEND_MTAN (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_STARSWALLET_RESEND_MTAN : public Atf::MessageProtocol	// 5636, PYR-51865
		{

			Protocol_MSG_CASHIER_STARSWALLET_RESEND_MTAN();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_RESEND_MTAN&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_RESEND_MTAN; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_RESEND_MTAN"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_STARSWALLET_RESEND_MTAN_REPLY : public Atf::MessageProtocol	// 5637
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_STARSWALLET_RESEND_MTAN_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_RESEND_MTAN_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_RESEND_MTAN_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_RESEND_MTAN_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_STARSWALLET_CHECK_MTAN (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_STARSWALLET_CHECK_MTAN : public Atf::MessageProtocol	// 5638, PYR-51865
		{
			// s - mtan
			PString mtan;

			Protocol_MSG_CASHIER_STARSWALLET_CHECK_MTAN();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_CHECK_MTAN&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_CHECK_MTAN; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_CHECK_MTAN"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_STARSWALLET_CHECK_MTAN_REPLY : public Atf::MessageProtocol	// 5639
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_STARSWALLET_CHECK_MTAN_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_STARSWALLET_CHECK_MTAN_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_STARSWALLET_CHECK_MTAN_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_STARSWALLET_CHECK_MTAN_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION : public Atf::MessageProtocol	// 5640, PYR-36843
		{
			// ss - initiative,validationURL
			PString initiative;
			PString validationURL;

			Protocol_MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION_REPLY : public Atf::MessageProtocol	// 5641
		{
			// 2[s|s] - errCode[errDescr|merchantSession]
			INT16 errCode;

			PString errDescr;

			PString merchantSession;

			Protocol_MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_APPLEPAY_MERCHANT_VALIDATION_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct TempAccountLimitStatus	// MSG_CASHIER_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS // PYR-89627
		{
			// M(4s4s) - M(limitAmount,limitCurrency,availAmount,availBalanceCurrency)

			INT32 limitAmount;
			PString limitCurrency;
			INT32 availAmount;
			PString availBalanceCurrency;

			TempAccountLimitStatus();
			void clear();
			bool equals(const TempAccountLimitStatus&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS : public Atf::MessageProtocol	// 5642
		{

			Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS_REPLY : public Atf::MessageProtocol	// 5643
		{
			// 2[s|bM(4s4s)] - errCode[errDescr|enabled,M(limitAmount,limitCurrency,availAmount,availBalanceCurrency)]
			INT16 errCode;

			PString errDescr;

			bool enabled;
			TempAccountLimitStatus cashoutLimit;

			Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TEMP_ACCOUNT_CASHOUT_LIMIT_STATUS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		// PYR-108884
		struct Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS : public Atf::MessageProtocol	// 5559
		{
		// no content.

			Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		struct Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS_REPLY : public Atf::MessageProtocol	// 5560
		{
			// 2[s|bM(4s4s)] - errCode[errDescr|enabled,M(limitAmount,limitCurrency,availAmount,availBalanceCurrency)]
			INT16 errCode;

			PString errDescr;

			bool enabled;
			TempAccountLimitStatus limitStatus;

			Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_TEMP_ACCOUNT_DEPOSIT_STATUS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
		//--------------------------------------------- MSG_CASHIER_STARSWALLET_CHECK_MTAN (cli) ------------------------------------------
		struct Protocol_MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED : public Atf::MessageProtocol	// 5647, PYR-80351
		{
			// 4 - transId
			UINT32 transId;

			Protocol_MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED_REPLY : public Atf::MessageProtocol	// 5648
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_FDMS_NOTIFY_3DFORM_COMPLETED_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_PLAID_DATA : public Atf::MessageProtocol	// 5651, PYR-116520
		{
			// 14s - paysystemByte,amount,currency
			BYTE paysystemByte;
			INT32 amount;
			PString currency;

			Protocol_MSG_CASHIER_GET_PLAID_DATA();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_PLAID_DATA&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_PLAID_DATA; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_PLAID_DATA"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_GET_PLAID_DATA_REPLY : public Atf::MessageProtocol	// 5652
		{
			// 2[s|sssb] - errCode[errDescr|plaidEnvironment,plaidPublicKey,bankLookupPreference,isPlaidAccountInSystem]
			INT16 errCode;

			PString errDescr;

			PString plaidEnvironment;
			PString plaidPublicKey;
			PString bankLookupPreference;
			bool isPlaidAccountInSystem;

			Protocol_MSG_CASHIER_GET_PLAID_DATA_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_GET_PLAID_DATA_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_GET_PLAID_DATA_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_GET_PLAID_DATA_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ADD_PLAID_ACCOUNT : public Atf::MessageProtocol	// 5653, PYR-116520
		{
			// ss - plaidPublicToken,plaidBankAccountId
			PString plaidPublicToken;
			PString plaidBankAccountId;

			Protocol_MSG_CASHIER_ADD_PLAID_ACCOUNT();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ADD_PLAID_ACCOUNT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ADD_PLAID_ACCOUNT; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ADD_PLAID_ACCOUNT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_ADD_PLAID_ACCOUNT_REPLY : public Atf::MessageProtocol	// 5654
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_ADD_PLAID_ACCOUNT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_ADD_PLAID_ACCOUNT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_ADD_PLAID_ACCOUNT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_ADD_PLAID_ACCOUNT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

	};

	//////////////////////////////////// AUTHENTICATED CLIENT LITE CONNECTION ////////////////////////////
	// PYR-31838
	namespace cli_lite
	{
		//--------------------------------------------- MSG_CASHIER_USER_LOGGED_IN (cli_lite) ------------------------------------------
		struct Protocol_MSG_CASHIER_USER_LOGGED_IN : public Atf::MessageProtocol	// 5527
		{
			// empty

			Protocol_MSG_CASHIER_USER_LOGGED_IN();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_USER_LOGGED_IN&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_USER_LOGGED_IN; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_USER_LOGGED_IN"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_USER_LOGGED_IN_REPLY : public Atf::MessageProtocol	// 5528
		{
			// 2[s] - errCode[errDescr]
			INT16 errCode;

			PString errDescr;

			Protocol_MSG_CASHIER_USER_LOGGED_IN_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_USER_LOGGED_IN_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_USER_LOGGED_IN_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_USER_LOGGED_IN_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_USERROLL_STATUS (cli_lite) ------------------------------------------
		// same as in cli
		struct Protocol_MSG_CASHIER_SET_USERROLL_STATUS : public Atf::MessageProtocol	// 5534
		{
			// 444 - userRollId,curStatus,action
			common_structs::SetUserRollStatus status;

			Protocol_MSG_CASHIER_SET_USERROLL_STATUS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USERROLL_STATUS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USERROLL_STATUS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USERROLL_STATUS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_USERROLL_STATUS_REPLY : public Atf::MessageProtocol	// 5535
		{
			// 2[s] - errCode[errDescr]
			common_structs::SetUserRollStatusReply reply;

			Protocol_MSG_CASHIER_SET_USERROLL_STATUS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_USERROLL_STATUS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_USERROLL_STATUS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_USERROLL_STATUS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		//--------------------------------------------- MSG_CASHIER_SET_GAMETICKET_STATUS (cli_lite) ------------------------------------------
		// same as in cli
		struct Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS : public Atf::MessageProtocol	// 5571
		{
			// 844 - gameTicketId,curStatus,action
			common_structs::SetGameTicketStatus status;

			Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_GAMETICKET_STATUS; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_GAMETICKET_STATUS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY : public Atf::MessageProtocol	// 5572
		{
			// 2[s] - errCode[errDescr]
			common_structs::SetGameTicketStatusReply reply;

			Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY; }
			const char *getMsgIdString() const override { return "MSG_CASHIER_SET_GAMETICKET_STATUS_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

	};
};

#endif
