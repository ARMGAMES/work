/**
 * hub_feed_server_atf.h
 *
 * This file was auto-generated from hub_feed_server_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: hub_feed_server_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_HUB_FEED_SERVER_ATF_H
#define ATF_PROTOCOL_DEFFILE_HUB_FEED_SERVER_ATF_H

// ===========================================================
// Copyright (C) 2020 Stars Technologies Services  All rights reserved.
// ===========================================================

#include "hubFeedServer.h"


#include "UserDefStructs.h"

namespace HubFeedServerATF
{
	class ProtocolFactory
	{
	public:
		static Atf::MessageProtocol* createMessageProtocolObject(const char *_nameSpace, UINT32 _msgId);
		static bool validateProtocolMessageFromJSONString(const char *_nameSpace, UINT32 _msgId, const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	namespace cli
	{
		struct ButtonInfo
		{
			// M(ss) - M(label,c2l)
			PString label;	// empty means use I'M IN button
			PString c2l;

			ButtonInfo();
			void clear();
			bool equals(const ButtonInfo&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct PostItemData
		{
			// M(44<M(ss)>sst) - M(postIcon,numButtons<M(label,c2l)>,postTitle,postBody,eventTime)
			INT32 postIcon;	//eHubFeedIconType
			Atf::LAtfVector< ButtonInfo, 4 > buttons;
			PString postTitle;
			PString postBody;
			SrvTime eventTime;

			PostItemData();
			void clear();
			bool equals(const PostItemData&) const;
			const char *toTraceString(PString& _str) const;
			const char *toXmlString(const char *_element, PString& _str) const;
			bool fromXmlString(const PString& _str);
			void composeMsg(CommMsgBody& _msg, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const;
			void parseMsg(CommMsgParser& _parser);
			const char *toJSONString(PString& _str) const;
			void fromJSONString(const PString& _str);
			static void validateJSONString(const PString& _str, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_HFS_Q_GET_FEED_ITEMS : public Atf::MessageProtocol
		{
			// 4 - numItems
			INT32 numItems;

			Protocol_HFS_Q_GET_FEED_ITEMS();
			void clear() override;
			bool equals(const Protocol_HFS_Q_GET_FEED_ITEMS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return HFS_Q_GET_FEED_ITEMS; }
			const char *getMsgIdString() const override { return "HFS_Q_GET_FEED_ITEMS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_HFS_A_GET_FEED_ITEMS : public Atf::MessageProtocol
		{
			// 4<M(44<M(ss)>sst)> - numFeedItems<M(postIcon,numButtons<M(label,c2l)>,postTitle,postBody,eventTime)>
			Atf::LAtfVector< PostItemData, 4 > feedItems;

			Protocol_HFS_A_GET_FEED_ITEMS();
			void clear() override;
			bool equals(const Protocol_HFS_A_GET_FEED_ITEMS&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return HFS_A_GET_FEED_ITEMS; }
			const char *getMsgIdString() const override { return "HFS_A_GET_FEED_ITEMS"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_HFS_Q_ADMIN_TEMPLATE_UPDATE : public Atf::MessageProtocol
		{
			// 4b - templateId,isPublished
			UINT32 templateId;
			bool isPublished;

			Protocol_HFS_Q_ADMIN_TEMPLATE_UPDATE();
			void clear() override;
			bool equals(const Protocol_HFS_Q_ADMIN_TEMPLATE_UPDATE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return HFS_Q_ADMIN_TEMPLATE_UPDATE; }
			const char *getMsgIdString() const override { return "HFS_Q_ADMIN_TEMPLATE_UPDATE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_HFS_A_ADMIN_TEMPLATE_UPDATE : public Atf::MessageProtocol
		{

			Protocol_HFS_A_ADMIN_TEMPLATE_UPDATE();
			void clear() override;
			bool equals(const Protocol_HFS_A_ADMIN_TEMPLATE_UPDATE&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return HFS_A_ADMIN_TEMPLATE_UPDATE; }
			const char *getMsgIdString() const override { return "HFS_A_ADMIN_TEMPLATE_UPDATE"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
	};
};

#endif
