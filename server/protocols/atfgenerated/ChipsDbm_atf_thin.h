/**
 * ChipsDbm_atf_thin.h
 *
 * This file was auto-generated from ChipsDbm_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor -thin ChipsDbm_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_CHIPSDBM_ATF_THIN_H
#define ATF_PROTOCOL_DEFFILE_CHIPSDBM_ATF_THIN_H

#include "pplib.h"
#include "chipsdbm.h"


#include "ThinAtfUserDefStructs.h"

namespace ChipsDbm
{
	class ProtocolFactory
	{
	public:
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	namespace cli_mobile
	{
		struct Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE
		{
			// sb - receipt,useNewPaywall
			PString receipt;
			bool useNewPaywall;

			Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE();
			void clear();
			bool equals(const Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_Q_APPLE_STORE_PURCHASE; }
			static const char *getMsgIdString() { return "CHIPSDBM_Q_APPLE_STORE_PURCHASE"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE(Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE&&);
			Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE& operator=(Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE(const Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE&) = default;
			Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE& operator=(const Protocol_CHIPSDBM_Q_APPLE_STORE_PURCHASE&) = default;
#endif
#endif
		};

		struct Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE
		{
			// 2[s|8] - errCode[errDescr|purchaseToken]
			INT16 errCode;

			PString errDescr;

			UINT64 purchaseToken;

			Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE();
			void clear();
			bool equals(const Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_A_APPLE_STORE_PURCHASE; }
			static const char *getMsgIdString() { return "CHIPSDBM_A_APPLE_STORE_PURCHASE"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE(Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE&&);
			Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE& operator=(Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE(const Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE&) = default;
			Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE& operator=(const Protocol_CHIPSDBM_A_APPLE_STORE_PURCHASE&) = default;
#endif
#endif
		};

		struct Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE
		{
			// sssb - notUsedStr,orderJson,signature,useNewPaywall
			PString notUsedStr;
			PString orderJson;
			PString signature;
			bool useNewPaywall;

			Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE();
			void clear();
			bool equals(const Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE; }
			static const char *getMsgIdString() { return "CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE(Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE&&);
			Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE& operator=(Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE(const Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE&) = default;
			Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE& operator=(const Protocol_CHIPSDBM_Q_GOOGLE_PLAY_PURCHASE&) = default;
#endif
#endif
		};

		struct Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE
		{
			// 2[s|8] - errCode[errDescr|purchaseToken]
			INT16 errCode;

			PString errDescr;

			UINT64 purchaseToken;

			Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE();
			void clear();
			bool equals(const Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_A_GOOGLE_PLAY_PURCHASE; }
			static const char *getMsgIdString() { return "CHIPSDBM_A_GOOGLE_PLAY_PURCHASE"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE(Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE&&);
			Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE& operator=(Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE(const Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE&) = default;
			Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE& operator=(const Protocol_CHIPSDBM_A_GOOGLE_PLAY_PURCHASE&) = default;
#endif
#endif
		};

		struct Protocol_CHIPSDBM_Q_GET_CHIPS_TRANS
		{
			// 4 - purchaseId
			UINT32 purchaseId;	// Represents id, no need to limit

			Protocol_CHIPSDBM_Q_GET_CHIPS_TRANS();
			void clear();
			bool equals(const Protocol_CHIPSDBM_Q_GET_CHIPS_TRANS&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_Q_GET_CHIPS_TRANS; }
			static const char *getMsgIdString() { return "CHIPSDBM_Q_GET_CHIPS_TRANS"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_CHIPSDBM_A_GET_CHIPS_TRANS
		{
			// 2[s|4488ssssstts84424242] - errCode[errDescr|purchaseId,parentId,amount,playChipsAmount,gateway,status,errCodeChipsInfo,errInfo,extRefId,started,completed,userId,auditId,userIntId,paywallId,paywallVersionId,segmentId,segmentVersionId,bundleId,bundleVersionId]
			INT16 errCode;

			PString errDescr;

			UINT32 purchaseId;
			UINT32 parentId;
			UINT64 amount;
			UINT64 playChipsAmount;
			PString gateway;
			PString status;
			PString errCodeChipsInfo;
			PString errInfo;
			PString extRefId;
			CommSrvTime started;
			CommSrvTime completed;
			PString userId;
			UINT64 auditId;
			UINT32 userIntId;
			UINT32 paywallId;
			INT16 paywallVersionId;
			UINT32 segmentId;
			INT16 segmentVersionId;
			UINT32 bundleId;
			INT16 bundleVersionId;

			Protocol_CHIPSDBM_A_GET_CHIPS_TRANS();
			void clear();
			bool equals(const Protocol_CHIPSDBM_A_GET_CHIPS_TRANS&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_A_GET_CHIPS_TRANS; }
			static const char *getMsgIdString() { return "CHIPSDBM_A_GET_CHIPS_TRANS"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_CHIPSDBM_A_GET_CHIPS_TRANS(Protocol_CHIPSDBM_A_GET_CHIPS_TRANS&&);
			Protocol_CHIPSDBM_A_GET_CHIPS_TRANS& operator=(Protocol_CHIPSDBM_A_GET_CHIPS_TRANS&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_CHIPSDBM_A_GET_CHIPS_TRANS(const Protocol_CHIPSDBM_A_GET_CHIPS_TRANS&) = default;
			Protocol_CHIPSDBM_A_GET_CHIPS_TRANS& operator=(const Protocol_CHIPSDBM_A_GET_CHIPS_TRANS&) = default;
#endif
#endif
		};

		struct Protocol_CHIPSDBM_Q_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG
		{
			// 4 - storeId
			UINT32 storeId;	// Represents id, no need to limit

			Protocol_CHIPSDBM_Q_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG();
			void clear();
			bool equals(const Protocol_CHIPSDBM_Q_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_Q_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG; }
			static const char *getMsgIdString() { return "CHIPSDBM_Q_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct PlayChipsConfigStore
		{
			// M(44s) - M(configId,storeId,productId)
			UINT32 configId;
			UINT32 storeId;
			PString productId;

			PlayChipsConfigStore();
			void clear();
			bool equals(const PlayChipsConfigStore&) const;
			const char *toTraceString(PString& _str) const;
			void composeMsg(CommMsgBody& _msg) const;
			void parseMsg(CommMsgParser& _parser);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			PlayChipsConfigStore(PlayChipsConfigStore&&);
			PlayChipsConfigStore& operator=(PlayChipsConfigStore&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			PlayChipsConfigStore(const PlayChipsConfigStore&) = default;
			PlayChipsConfigStore& operator=(const PlayChipsConfigStore&) = default;
#endif
#endif
		};
		struct PlayChipsConfig
		{
			// M(4884t4t4424<M(44s)>) - M(configId,amount,playChipsAmount,payTier,whenCreated,createdBy,whenObsoleted,obsoletedBy,platform,popular,numStoreConfigs<M(configId,storeId,productId)>)
			UINT32 configId;
			INT64 amount;
			INT64 playChipsAmount;
			UINT32 payTier;
			CommSrvTime whenCreated;
			UINT32 createdBy;
			CommSrvTime whenObsoleted;
			UINT32 obsoletedBy;
			UINT32 platform;
			UINT16 popular;
			ThinAtf::LAtfVector< PlayChipsConfigStore, 4 > storeConfigs;

			PlayChipsConfig();
			void clear();
			bool equals(const PlayChipsConfig&) const;
			const char *toTraceString(PString& _str) const;
			void composeMsg(CommMsgBody& _msg) const;
			void parseMsg(CommMsgParser& _parser);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			PlayChipsConfig(PlayChipsConfig&&);
			PlayChipsConfig& operator=(PlayChipsConfig&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			PlayChipsConfig(const PlayChipsConfig&) = default;
			PlayChipsConfig& operator=(const PlayChipsConfig&) = default;
#endif
#endif
		};
		struct Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG
		{
			// 2[s|4<M(4884t4t4424<M(44s)>)>] - errCode[errDescr|numPlayChipsConfig<M(configId,amount,playChipsAmount,payTier,whenCreated,createdBy,whenObsoleted,obsoletedBy,platform,popular,numStoreConfigs<M(configId,storeId,productId)>)>]
			INT16 errCode;

			PString errDescr;

			ThinAtf::LAtfVector< PlayChipsConfig, 4 > playChipsConfig;

			Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG();
			void clear();
			bool equals(const Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG&) const;
			const char *asTraceString(PString& _buf) const;
			void parseMsg(CommMsgParser& _parser);
			void composeMsg(CommMsgBody& _body) const;

			static UINT32 getMsgId() { return CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG; }
			static const char *getMsgIdString() { return "CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG"; }
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
			Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG(Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG&&);
			Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG& operator=(Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
			Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG(const Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG&) = default;
			Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG& operator=(const Protocol_CHIPSDBM_A_GET_STORE_AVAILABLE_PLAYCHIPSCONFIG&) = default;
#endif
#endif
		};
	};
};

#endif
