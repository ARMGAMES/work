/**
 * zoomreplay_atf.h
 *
 * This file was auto-generated from zoomreplay_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: zoomreplay_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_ZOOMREPLAY_ATF_H
#define ATF_PROTOCOL_DEFFILE_ZOOMREPLAY_ATF_H

#include "table.h"
#include "sites.h"
#include "UserDefStructs.h"
#include "Common_atf.h"


namespace ZoomReplay
{
	class ProtocolFactory
	{
	public:
		static Atf::MessageProtocol* createMessageProtocolObject(const char *_nameSpace, UINT32 _msgId);
		static bool validateProtocolMessageFromJSONString(const char *_nameSpace, UINT32 _msgId, const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	namespace cli
	{
		struct Protocol_MSG_TABLE_LOGIN : public Atf::MessageProtocol
		{
			// s4bbb - user,clientSiteId,notShowWhenAllIn,sitOutNextHand,useAllInitStacks
			PString user;
			UINT32 clientSiteId;
			bool notShowWhenAllIn;
			bool sitOutNextHand;
			bool useAllInitStacks;

			Protocol_MSG_TABLE_LOGIN();
			void clear() override;
			bool equals(const Protocol_MSG_TABLE_LOGIN&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_TABLE_LOGIN; }
			const char *getMsgIdString() const override { return "MSG_TABLE_LOGIN"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_TABLE_LOGIN_REPLY : public Atf::MessageProtocol
		{
			// 1s11s4M()1222bbb2 - errCode,errStr,seat,sittingOut,clientIP,privilege,M(),autoRebuyOptions,autoRebuyBigBets,autoRebuyFallUnderBigBets,autoRebuyFallUnderPercents,playerRITFavored,campingPreventionEnabled,isTableDealingHands,campingCountingDownSec
			BYTE errCode;
			PString errStr;
			INT8 seat;
			BYTE sittingOut;
			PString clientIP;
			UINT32 privilege;
			Atf::CopyableMsgBody clientMsg_txtEx;
			INT8 autoRebuyOptions;
			UINT16 autoRebuyBigBets;
			UINT16 autoRebuyFallUnderBigBets;
			UINT16 autoRebuyFallUnderPercents;
			bool playerRITFavored;
			bool campingPreventionEnabled;
			bool isTableDealingHands;
			UINT16 campingCountingDownSec;

			Protocol_MSG_TABLE_LOGIN_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_TABLE_LOGIN_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_TABLE_LOGIN_REPLY; }
			const char *getMsgIdString() const override { return "MSG_TABLE_LOGIN_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_TABLE_LOGOUT : public Atf::MessageProtocol
		{
			// dummy message

			Protocol_MSG_TABLE_LOGOUT();
			void clear() override;
			bool equals(const Protocol_MSG_TABLE_LOGOUT&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_TABLE_LOGOUT; }
			const char *getMsgIdString() const override { return "MSG_TABLE_LOGOUT"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_TABLE_LOGOUT_REPLY : public Atf::MessageProtocol
		{
			// 1s - errCode,errStr
			BYTE errCode;
			PString errStr;

			Protocol_MSG_TABLE_LOGOUT_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_TABLE_LOGOUT_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_TABLE_LOGOUT_REPLY; }
			const char *getMsgIdString() const override { return "MSG_TABLE_LOGOUT_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_TABLE_CHAT2 : public Atf::MessageProtocol
		{
			// s - chat
			PString chat;

			Protocol_MSG_TABLE_CHAT2();
			void clear() override;
			bool equals(const Protocol_MSG_TABLE_CHAT2&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_TABLE_CHAT2; }
			const char *getMsgIdString() const override { return "MSG_TABLE_CHAT2"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};

		struct Protocol_MSG_TABLE_CHAT2_REPLY : public Atf::MessageProtocol
		{
			// 2M()s - errCode,M(),chatMsg
			UINT16 errCode;
			Atf::CopyableMsgBody errMsgBody;
			PString chatMsg;

			Protocol_MSG_TABLE_CHAT2_REPLY();
			void clear() override;
			bool equals(const Protocol_MSG_TABLE_CHAT2_REPLY&) const;
			bool equals(Atf::MessageProtocol* _other) const override;
			const char *asXmlString(PString& _buf, bool _logTimeStamp) const override;
			const char *asXmlString(PString& _buf, UINT64 _timestampTicks, UINT32 _msgTime) const override;
			bool loadFromXmlString(const PString& _xmlString) override;
			const char *asTraceString(PString& _buf) const override;
			void parseMsg(CommMsgParser& _parser) override;
			void composeMsg(CommMsgBody& _body, bool _ignoreJSON = COMPOSEMSG_IGNORE_JSON_DEFAULT) const override;
			UINT32 getMsgId() const override { return MSG_TABLE_CHAT2_REPLY; }
			const char *getMsgIdString() const override { return "MSG_TABLE_CHAT2_REPLY"; }
			const char *asJSONString(PString& _buf) const override;
			void loadFromJSONString(const PString& _jsonString) override;
			static void validateJSONString(const PString& _jsonString, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
			static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
		};
	};
};

#endif
