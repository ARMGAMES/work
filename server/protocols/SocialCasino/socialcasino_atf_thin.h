/**
 * socialcasino_atf_thin.h
 *
 * This file was auto-generated from socialcasino_atf.txt by ATF protocol generator. 
 * Do not edit this file directly!
 *
 * Generator used the following keys: -genMoveConstructor -thin socialcasino_atf.txt
 */

#ifndef ATF_PROTOCOL_DEFFILE_SOCIALCASINO_ATF_THIN_H
#define ATF_PROTOCOL_DEFFILE_SOCIALCASINO_ATF_THIN_H

#include "SocialCasino.h"


#include "ThinAtfUserDefStructs.h"

namespace SocialCasino
{
	class ProtocolFactory
	{
	public:
		static bool validateProtocolMessage(const char *_nameSpace, UINT32 _msgId, CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsNotParseEnded);
	};


	struct Protocol_MSG_SOCIALCASINO_DEBITPM
	{
		// 88s8 - vendorId,gameId,scExternalTransactId,playMoneyAmount
		UINT64 vendorId;
		UINT64 gameId;
		PString scExternalTransactId;
		INT64 playMoneyAmount;

		Protocol_MSG_SOCIALCASINO_DEBITPM();
		void clear();
		bool equals(const Protocol_MSG_SOCIALCASINO_DEBITPM&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_SOCIALCASINO_DEBITPM; }
		static const char *getMsgIdString() { return "MSG_SOCIALCASINO_DEBITPM"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_MSG_SOCIALCASINO_DEBITPM(Protocol_MSG_SOCIALCASINO_DEBITPM&&);
		Protocol_MSG_SOCIALCASINO_DEBITPM& operator=(Protocol_MSG_SOCIALCASINO_DEBITPM&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_MSG_SOCIALCASINO_DEBITPM(const Protocol_MSG_SOCIALCASINO_DEBITPM&) = default;
		Protocol_MSG_SOCIALCASINO_DEBITPM& operator=(const Protocol_MSG_SOCIALCASINO_DEBITPM&) = default;
#endif
#endif
	};

	struct Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY
	{
		// s - scExternalTransactId
		// implied INT16 errCode here. If not-zero (failure) then parse a String instead of below
		PString scExternalTransactId;

		Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY();
		void clear();
		bool equals(const Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_SOCIALCASINO_DEBITPM_REPLY; }
		static const char *getMsgIdString() { return "MSG_SOCIALCASINO_DEBITPM_REPLY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY(Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY&&);
		Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY& operator=(Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY(const Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY&) = default;
		Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY& operator=(const Protocol_MSG_SOCIALCASINO_DEBITPM_REPLY&) = default;
#endif
#endif
	};

	struct Protocol_MSG_SOCIALCASINO_CREDITPM
	{
		// 488s8s - userIntId,vendorId,gameId,scExternalTransactId,playMoneyAmount,refExternalTransactId
		UINT32 userIntId;
		UINT64 vendorId;
		UINT64 gameId;
		PString scExternalTransactId;
		INT64 playMoneyAmount;
		PString refExternalTransactId;

		Protocol_MSG_SOCIALCASINO_CREDITPM();
		void clear();
		bool equals(const Protocol_MSG_SOCIALCASINO_CREDITPM&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_SOCIALCASINO_CREDITPM; }
		static const char *getMsgIdString() { return "MSG_SOCIALCASINO_CREDITPM"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_MSG_SOCIALCASINO_CREDITPM(Protocol_MSG_SOCIALCASINO_CREDITPM&&);
		Protocol_MSG_SOCIALCASINO_CREDITPM& operator=(Protocol_MSG_SOCIALCASINO_CREDITPM&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_MSG_SOCIALCASINO_CREDITPM(const Protocol_MSG_SOCIALCASINO_CREDITPM&) = default;
		Protocol_MSG_SOCIALCASINO_CREDITPM& operator=(const Protocol_MSG_SOCIALCASINO_CREDITPM&) = default;
#endif
#endif
	};

	struct Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY
	{
		// s - scExternalTransactId
		// implied INT16 errCode here. If not-zero (failure) then parse a String instead of below
		PString scExternalTransactId;

		Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY();
		void clear();
		bool equals(const Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_SOCIALCASINO_CREDITPM_REPLY; }
		static const char *getMsgIdString() { return "MSG_SOCIALCASINO_CREDITPM_REPLY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY(Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY&&);
		Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY& operator=(Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY(const Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY&) = default;
		Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY& operator=(const Protocol_MSG_SOCIALCASINO_CREDITPM_REPLY&) = default;
#endif
#endif
	};

	struct Protocol_MSG_SOCIALCASINO_USERINFO
	{
		// no content required

		Protocol_MSG_SOCIALCASINO_USERINFO();
		void clear();
		bool equals(const Protocol_MSG_SOCIALCASINO_USERINFO&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_SOCIALCASINO_USERINFO; }
		static const char *getMsgIdString() { return "MSG_SOCIALCASINO_USERINFO"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);
	};

	struct PlayerInfoWarning
	{
		// M(2s) - M(warningCode,warningString)
		INT16 warningCode;
		PString warningString;

		PlayerInfoWarning();
		void clear();
		bool equals(const PlayerInfoWarning&) const;
		const char *toTraceString(PString& _str) const;
		void composeMsg(CommMsgBody& _msg) const;
		void parseMsg(CommMsgParser& _parser);
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, const char* _descr, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		PlayerInfoWarning(PlayerInfoWarning&&);
		PlayerInfoWarning& operator=(PlayerInfoWarning&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		PlayerInfoWarning(const PlayerInfoWarning&) = default;
		PlayerInfoWarning& operator=(const PlayerInfoWarning&) = default;
#endif
#endif
	};

	struct Protocol_MSG_SOCIALCASINO_USERINFO_REPLY
	{
		// s4s8ss4<M(2s)> - userId,imageId,country,playMoneyBalance,site,language,numWarnings<M(warningCode,warningString)>
		// implied INT16 errCode here. If not-zero (failure) then parse a String instead of below
		PString userId;
		UINT32 imageId;
		PString country;
		INT64 playMoneyBalance;
		PString site;
		PString language;
		ThinAtf::LAtfVector< PlayerInfoWarning, 4 > warnings;

		Protocol_MSG_SOCIALCASINO_USERINFO_REPLY();
		void clear();
		bool equals(const Protocol_MSG_SOCIALCASINO_USERINFO_REPLY&) const;
		const char *asTraceString(PString& _buf) const;
		void parseMsg(CommMsgParser& _parser);
		void composeMsg(CommMsgBody& _body) const;

		static UINT32 getMsgId() { return MSG_SOCIALCASINO_USERINFO_REPLY; }
		static const char *getMsgIdString() { return "MSG_SOCIALCASINO_USERINFO_REPLY"; }
		static void validateMsg(CommMsgParser& _parser, const AtfMsgChecker* _checker, PString& _fieldsWithUnparsedContent);

#ifdef MOVE_CONSTRUCTOR_SUPPORTED
		Protocol_MSG_SOCIALCASINO_USERINFO_REPLY(Protocol_MSG_SOCIALCASINO_USERINFO_REPLY&&);
		Protocol_MSG_SOCIALCASINO_USERINFO_REPLY& operator=(Protocol_MSG_SOCIALCASINO_USERINFO_REPLY&&);
#ifdef ATF_GENERATE_DEFAULT_COPYCONSTRUCTOR
		Protocol_MSG_SOCIALCASINO_USERINFO_REPLY(const Protocol_MSG_SOCIALCASINO_USERINFO_REPLY&) = default;
		Protocol_MSG_SOCIALCASINO_USERINFO_REPLY& operator=(const Protocol_MSG_SOCIALCASINO_USERINFO_REPLY&) = default;
#endif
#endif
	};
};

#endif
